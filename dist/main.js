/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/CardStatus.json":
/*!*****************************!*\
  !*** ./src/CardStatus.json ***!
  \*****************************/
/*! exports provided: Airman, Alpha, Beta, Gamma, MagicianOfChaos, CyberVary, Disk, Dogma, Kuraz, DDR, DestinyDraw, DimensionFusion, GoldSalcophagus, HandDestruction, HiddenArmory, Hurricane, MagicStoneExcavation, MonsterGate, MonsterReborn, PhenixBlade, PrematureBrial, Reasoning, Reinforcement, SpellEconomics, TradeIn, MagicalExplosion, JunkCollector, ReturnFromTheDD, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"Airman\\\":{\\\"imageFileName\\\":\\\"Airman.jpg\\\",\\\"ID\\\":\\\"40044918\\\",\\\"cardName\\\":\\\"Airman\\\",\\\"cardNameJP\\\":\\\"E・HERO エアーマン\\\",\\\"category\\\":[\\\"HERO\\\"],\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"level\\\":4,\\\"race\\\":\\\"WARRIOR\\\",\\\"attribute\\\":\\\"WIND\\\",\\\"atkPoint\\\":1800,\\\"defPoint\\\":300,\\\"effectKey\\\":\\\"AIRMAN\\\",\\\"text\\\":\\\"このカードが召喚・特殊召喚に成功した時、以下の効果から１つを選択して発動できる。●このカード以外の自分フィールドの「ＨＥＲＯ」モンスターの数まで、フィールドの魔法・罠カードを選んで破壊する。●デッキから「ＨＥＲＯ」モンスター１体を手札に加える。\\\"},\\\"Alpha\\\":{\\\"imageFileName\\\":\\\"Alpha.jpg\\\",\\\"ID\\\":\\\"99785935\\\",\\\"cardName\\\":\\\"Alpha\\\",\\\"cardNameJP\\\":\\\"磁石の戦士α\\\",\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Normal\\\",\\\"level\\\":4,\\\"race\\\":\\\"ROCK\\\",\\\"attribute\\\":\\\"EARTH\\\",\\\"atkPoint\\\":1400,\\\"defPoint\\\":1700},\\\"Beta\\\":{\\\"imageFileName\\\":\\\"Beta.jpg\\\",\\\"ID\\\":\\\"39256679\\\",\\\"cardName\\\":\\\"Beta\\\",\\\"cardNameJP\\\":\\\"磁石の戦士β\\\",\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Normal\\\",\\\"level\\\":4,\\\"race\\\":\\\"ROCK\\\",\\\"attribute\\\":\\\"EARTH\\\",\\\"atkPoint\\\":1400,\\\"defPoint\\\":1700},\\\"Gamma\\\":{\\\"imageFileName\\\":\\\"Gamma.jpg\\\",\\\"ID\\\":\\\"11549357\\\",\\\"cardName\\\":\\\"Gamma\\\",\\\"cardNameJP\\\":\\\"磁石の戦士γ\\\",\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Normal\\\",\\\"level\\\":4,\\\"race\\\":\\\"ROCK\\\",\\\"attribute\\\":\\\"EARTH\\\",\\\"atkPoint\\\":1400,\\\"defPoint\\\":1700},\\\"MagicianOfChaos\\\":{\\\"imageFileName\\\":\\\"MagicianOfChaos.jpg\\\",\\\"ID\\\":\\\"40737112\\\",\\\"cardName\\\":\\\"MagicianOfChaos\\\",\\\"cardNameJP\\\":\\\"混沌の黒魔術師\\\",\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"level\\\":8,\\\"race\\\":\\\"SPELLCASTER\\\",\\\"attribute\\\":\\\"DARK\\\",\\\"atkPoint\\\":2800,\\\"defPoint\\\":2600,\\\"effectKey\\\":\\\"MAGICIANOFCHAOS\\\",\\\"text\\\":\\\"このカードが召喚・特殊召喚に成功した時、自分の墓地から魔法カード１枚を選択して手札に加える事ができる。このカードが戦闘によって破壊したモンスターは墓地へは行かずゲームから除外される。このカードはフィールド上から離れた場合、ゲームから除外される。\\\"},\\\"CyberVary\\\":{\\\"imageFileName\\\":\\\"CyberVary.jpg\\\",\\\"ID\\\":\\\"03657444\\\",\\\"cardName\\\":\\\"CyberVary\\\",\\\"cardNameJP\\\":\\\"サイバー・ヴァリー\\\",\\\"category\\\":[],\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"level\\\":1,\\\"race\\\":\\\"MACHINE\\\",\\\"attribute\\\":\\\"LIGHT\\\",\\\"atkPoint\\\":0,\\\"defPoint\\\":0,\\\"effectKey\\\":\\\"CYBERVARY\\\",\\\"text\\\":\\\"以下の効果から１つを選択して発動できる。●自分のメインフェイズ時に発動できる。このカードと自分フィールド上に表側表示で存在するモンスター１体を選択して除外し、その後デッキからカードを２枚ドローする。●自分のメインフェイズ時に、自分の墓地のカード１枚を選択して発動できる。このカードと手札１枚を除外し、その後選択したカードをデッキの一番上に戻す。\\\"},\\\"Disk\\\":{\\\"imageFileName\\\":\\\"Disk.jpg\\\",\\\"ID\\\":\\\"56570271\\\",\\\"cardName\\\":\\\"Disk\\\",\\\"cardNameJP\\\":\\\"D-HERO ディスクガイ\\\",\\\"category\\\":[\\\"HERO\\\",\\\"D-HERO\\\"],\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"level\\\":1,\\\"race\\\":\\\"WARRIOR\\\",\\\"attribute\\\":\\\"DARK\\\",\\\"atkPoint\\\":300,\\\"defPoint\\\":300,\\\"effectKey\\\":\\\"DISK\\\",\\\"text\\\":\\\"このカードが墓地からの特殊召喚に成功した場合に発動できる。自分はデッキから２枚ドローする。\\\"},\\\"Dogma\\\":{\\\"imageFileName\\\":\\\"Dogma.jpg\\\",\\\"ID\\\":\\\"17132130\\\",\\\"cardName\\\":\\\"Dogma\\\",\\\"cardNameJP\\\":\\\"D-HERO ドグマガイ\\\",\\\"category\\\":[\\\"HERO\\\",\\\"D-HERO\\\"],\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"canNS\\\":false,\\\"level\\\":8,\\\"race\\\":\\\"WARRIOR\\\",\\\"attribute\\\":\\\"DARK\\\",\\\"atkPoint\\\":3400,\\\"defPoint\\\":2400,\\\"effectKey\\\":\\\"DOGMA\\\",\\\"SSconditionKey\\\":\\\"DOGMA\\\",\\\"text\\\":\\\"このカードは通常召喚できない。「Ｄ－ＨＥＲＯ」モンスターを含む自分フィールドのモンスター３体をリリースした場合のみ特殊召喚できる。(1)：この方法でこのカードが特殊召喚に成功した場合、次の相手スタンバイフェイズに発動する。相手のＬＰを半分にする。\\\"},\\\"Kuraz\\\":{\\\"imageFileName\\\":\\\"Kuraz.jpg\\\",\\\"ID\\\":\\\"57666212\\\",\\\"cardName\\\":\\\"Kuraz\\\",\\\"cardNameJP\\\":\\\"光帝クライス\\\",\\\"category\\\":[],\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"level\\\":6,\\\"race\\\":\\\"WARRIOR\\\",\\\"attribute\\\":\\\"LIGHT\\\",\\\"atkPoint\\\":2400,\\\"defPoint\\\":1000,\\\"effectKey\\\":\\\"KURAZ\\\",\\\"text\\\":\\\"(1)：このカードが召喚・特殊召喚に成功した時、フィールドのカードを２枚まで対象として発動できる。そのカードを破壊し、破壊されたカードのコントローラーは破壊された枚数分だけデッキからドローできる。(2)：このカードは召喚・特殊召喚したターンには攻撃できない。\\\"},\\\"DDR\\\":{\\\"imageFileName\\\":\\\"DDR.jpg\\\",\\\"ID\\\":\\\"33064647\\\",\\\"cardName\\\":\\\"DDR\\\",\\\"cardNameJP\\\":\\\"D・D・R\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Equip\\\",\\\"effectKey\\\":\\\"DDR\\\",\\\"text\\\":\\\"(1)：手札を１枚捨て、除外されている自分のモンスター１体を対象としてこのカードを発動できる。そのモンスターを攻撃表示で特殊召喚し、このカードを装備する。このカードがフィールドから離れた時にそのモンスターは破壊される。\\\"},\\\"DestinyDraw\\\":{\\\"imageFileName\\\":\\\"DestinyDraw.jpg\\\",\\\"ID\\\":\\\"45809008\\\",\\\"cardName\\\":\\\"DestinyDraw\\\",\\\"cardNameJP\\\":\\\"デステニー・ドロー\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"DESTINYDRAW\\\",\\\"text\\\":\\\"(1)：手札から「Ｄ－ＨＥＲＯ」カード１枚を捨てて発動できる。自分はデッキから２枚ドローする。\\\"},\\\"DimensionFusion\\\":{\\\"imageFileName\\\":\\\"DimensionFusion.jpg\\\",\\\"ID\\\":\\\"23557835\\\",\\\"cardName\\\":\\\"DimensionFusion\\\",\\\"cardNameJP\\\":\\\"次元融合\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"DIMENSIONFUSION\\\",\\\"text\\\":\\\"２０００ライフポイントを払う。お互いに除外されたモンスターをそれぞれのフィールド上に可能な限り特殊召喚する。\\\"},\\\"GoldSalcophagus\\\":{\\\"imageFileName\\\":\\\"GoldSarcophagus.jpg\\\",\\\"ID\\\":\\\"75500286\\\",\\\"cardName\\\":\\\"GoldSarcophagus\\\",\\\"cardNameJP\\\":\\\"封印の黄金櫃\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"GOLDSARCOPHAGUS\\\",\\\"text\\\":\\\"(1)：デッキからカード１枚を選んで除外する。このカードの発動後２回目の自分スタンバイフェイズに、この効果で除外したカードを手札に加える。\\\"},\\\"HandDestruction\\\":{\\\"imageFileName\\\":\\\"HandDestruction.jpg\\\",\\\"ID\\\":\\\"72892473\\\",\\\"cardName\\\":\\\"HandDestruction\\\",\\\"cardNameJP\\\":\\\"手札抹殺\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"HANDDESTRUCTION\\\",\\\"text\\\":\\\"(1)：手札があるプレイヤーは、その手札を全て捨てる。その後、それぞれ自身が捨てた枚数分デッキからドローする。\\\"},\\\"HiddenArmory\\\":{\\\"imageFileName\\\":\\\"HiddenArmory.jpg\\\",\\\"ID\\\":\\\"52105192\\\",\\\"cardName\\\":\\\"HiddenArmory\\\",\\\"cardNameJP\\\":\\\"アームズ・ホール\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"HIDDENARMORY\\\",\\\"text\\\":\\\"このカードを発動するターン、自分は通常召喚できない。(1)：デッキの一番上のカードを墓地へ送って発動できる。自分のデッキ・墓地から装備魔法カード１枚を選んで手札に加える。\\\"},\\\"Hurricane\\\":{\\\"imageFileName\\\":\\\"Hurricane.jpg\\\",\\\"ID\\\":\\\"68167124\\\",\\\"cardName\\\":\\\"Hurricane\\\",\\\"cardNameJP\\\":\\\"ハリケーン\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"HURRICANE\\\",\\\"text\\\":\\\"フィールド上の魔法・罠カードを全て持ち主の手札に戻す。\\\"},\\\"MagicStoneExcavation\\\":{\\\"imageFileName\\\":\\\"MagicStoneExcavation.jpg\\\",\\\"ID\\\":\\\"98494543\\\",\\\"cardName\\\":\\\"MagicStoneExcavation\\\",\\\"cardNameJP\\\":\\\"魔法石の採掘\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"MAGICSTONEEXCAVATION\\\",\\\"text\\\":\\\"(1)：手札を２枚捨て、自分の墓地の魔法カード１枚を対象として発動できる。そのカードを手札に加える。\\\"},\\\"MonsterGate\\\":{\\\"imageFileName\\\":\\\"MonsterGate.jpg\\\",\\\"ID\\\":\\\"43040603\\\",\\\"cardName\\\":\\\"MonsterGate\\\",\\\"cardNameJP\\\":\\\"モンスターゲート\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"MONSTERGATE\\\",\\\"text\\\":\\\"(1)：自分フィールドのモンスター１体をリリースして発動できる。通常召喚可能なモンスターが出るまで自分のデッキの上からカードをめくり、そのモンスターを特殊召喚する。残りのめくったカードは全て墓地へ送る。\\\"},\\\"MonsterReborn\\\":{\\\"imageFileName\\\":\\\"MonsterReborn.jpg\\\",\\\"ID\\\":\\\"83764718\\\",\\\"cardName\\\":\\\"MonsterReborn\\\",\\\"cardNameJP\\\":\\\"死者蘇生\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"MONSTERREBORN\\\",\\\"text\\\":\\\"(1)：自分または相手の墓地のモンスター１体を対象として発動できる。そのモンスターを自分フィールドに特殊召喚する。\\\"},\\\"PhenixBlade\\\":{\\\"imageFileName\\\":\\\"PhenixBlade.jpg\\\",\\\"ID\\\":\\\"31423101\\\",\\\"cardName\\\":\\\"PhenixBlade\\\",\\\"cardNameJP\\\":\\\"神剣-フェニックス・ブレード\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Equip\\\",\\\"effectKey\\\":\\\"PHENIXBLADE\\\",\\\"text\\\":\\\"戦士族モンスターにのみ装備可能。装備モンスターの攻撃力は３００ポイントアップする。自分のメインフェイズ時、自分の墓地に存在する戦士族モンスター２体をゲームから除外する事で、このカードを自分の墓地から手札に加える。\\\"},\\\"PrematureBrial\\\":{\\\"imageFileName\\\":\\\"PrematureBrial.jpg\\\",\\\"ID\\\":\\\"70828912\\\",\\\"cardName\\\":\\\"PrematureBrial\\\",\\\"cardNameJP\\\":\\\"早すぎた埋葬\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Equip\\\",\\\"effectKey\\\":\\\"PREMATUREBRIAL\\\",\\\"text\\\":\\\"８００ライフポイントを払い、自分の墓地に存在するモンスター１体を選択して発動する。選択したモンスターを表側攻撃表示で特殊召喚し、このカードを装備する。このカードが破壊された時、装備モンスターを破壊する。\\\"},\\\"Reasoning\\\":{\\\"imageFileName\\\":\\\"Reasoning.jpg\\\",\\\"ID\\\":\\\"58577036\\\",\\\"cardName\\\":\\\"Reasoning\\\",\\\"cardNameJP\\\":\\\"名推理\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"REASONING\\\",\\\"text\\\":\\\"(1)：相手は１～１２までの任意のレベルを宣言する。通常召喚可能なモンスターが出るまで自分のデッキの上からカードをめくり、そのモンスターのレベルが宣言されたレベルと同じ場合、めくったカードを全て墓地へ送る。違った場合、そのモンスターを特殊召喚し、残りのめくったカードは全て墓地へ送る。\\\"},\\\"Reinforcement\\\":{\\\"imageFileName\\\":\\\"Reinforcement.jpg\\\",\\\"ID\\\":\\\"32807846\\\",\\\"cardName\\\":\\\"Reinforcement\\\",\\\"cardNameJP\\\":\\\"増援\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"REINFORCEMENT\\\",\\\"text\\\":\\\"(1)：デッキからレベル４以下の戦士族モンスター１体を手札に加える。\\\"},\\\"SpellEconomics\\\":{\\\"imageFileName\\\":\\\"SpellEconomics.jpg\\\",\\\"ID\\\":\\\"04259068\\\",\\\"cardName\\\":\\\"SpellEconomics\\\",\\\"cardNameJP\\\":\\\"魔力倹約術\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Continuous\\\",\\\"effectKey\\\":\\\"SPELLECONOMICS\\\",\\\"text\\\":\\\"魔法カードを発動するために払うライフポイントが必要なくなる。\\\"},\\\"TradeIn\\\":{\\\"imageFileName\\\":\\\"TradeIn.jpg\\\",\\\"ID\\\":\\\"38120068\\\",\\\"cardName\\\":\\\"TradeIn\\\",\\\"cardNameJP\\\":\\\"トレード・イン\\\",\\\"cardType\\\":\\\"Spell\\\",\\\"spellType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"TRADEIN\\\",\\\"text\\\":\\\"(1)：手札からレベル８モンスター１体を捨てて発動できる。自分はデッキから２枚ドローする。\\\"},\\\"MagicalExplosion\\\":{\\\"imageFileName\\\":\\\"MagicalExplosion.jpg\\\",\\\"ID\\\":\\\"32723153\\\",\\\"cardName\\\":\\\"MagicalExplosion\\\",\\\"cardNameJP\\\":\\\"マジカル・エクスプロージョン\\\",\\\"cardType\\\":\\\"Trap\\\",\\\"trapType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"MAGICALEXPLOSION\\\",\\\"text\\\":\\\"自分の手札が０枚の時に発動する事ができる。自分の墓地に存在する魔法カードの枚数×２００ポイントダメージを相手ライフに与える。\\\"},\\\"JunkCollector\\\":{\\\"imageFileName\\\":\\\"JunkCollector.jpg\\\",\\\"ID\\\":\\\"58242947\\\",\\\"cardName\\\":\\\"JunkCollector\\\",\\\"cardNameJP\\\":\\\"ジャンク・コレクター\\\",\\\"category\\\":[\\\"Junc\\\"],\\\"cardType\\\":\\\"Monster\\\",\\\"monsterType\\\":\\\"Effect\\\",\\\"level\\\":5,\\\"race\\\":\\\"WARRIOR\\\",\\\"attribute\\\":\\\"LIGHT\\\",\\\"atkPoint\\\":1000,\\\"defPoint\\\":2200,\\\"effectKey\\\":\\\"JUNKCOLLECTOR\\\",\\\"text\\\":\\\"あとで\\\"},\\\"ReturnFromTheDD\\\":{\\\"imageFileName\\\":\\\"ReturnFromTheDDn.jpg\\\",\\\"ID\\\":\\\"32723153\\\",\\\"cardName\\\":\\\"ReturnFromTheDD\\\",\\\"cardNameJP\\\":\\\"異次元からの帰還\\\",\\\"cardType\\\":\\\"Trap\\\",\\\"trapType\\\":\\\"Normal\\\",\\\"effectKey\\\":\\\"RETURNFROMTHEDD\\\",\\\"text\\\":\\\"あとで\\\"}}\");\n\n//# sourceURL=webpack:///./src/CardStatus.json?");

/***/ }),

/***/ "./src/createButton.ts":
/*!*****************************!*\
  !*** ./src/createButton.ts ***!
  \*****************************/
/*! exports provided: createButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createButton\", function() { return createButton; });\nfunction createButton(text, width, height, keyColor) {\r\n    // ボタン要素をグループ化\r\n    var button = new createjs.Container();\r\n    button.name = text; // ボタンに参考までに名称を入れておく(必須ではない)\r\n    button.cursor = \"pointer\"; // ホバー時にカーソルを変更する\r\n    // 通常時の座布団を作成\r\n    var bgUp = new createjs.Shape();\r\n    bgUp.graphics\r\n        .setStrokeStyle(1.0)\r\n        .beginStroke(keyColor)\r\n        .beginFill(\"white\")\r\n        .drawRoundRect(0.5, 0.5, width - 1.0, height - 1.0, 20);\r\n    button.addChild(bgUp);\r\n    bgUp.visible = true; // 表示する\r\n    // ロールオーバー時の座布団を作成\r\n    var bgOver = new createjs.Shape();\r\n    bgOver.graphics\r\n        .beginFill(keyColor)\r\n        .drawRoundRect(0, 0, width, height, 20);\r\n    bgOver.visible = false; // 非表示にする\r\n    button.addChild(bgOver);\r\n    // ラベルを作成\r\n    var label = new createjs.Text(text, \"18px sans-serif\", keyColor);\r\n    label.x = width / 2;\r\n    label.y = height / 2;\r\n    label.textAlign = \"center\";\r\n    label.textBaseline = \"middle\";\r\n    button.addChild(label);\r\n    // ロールオーバーイベントを登録\r\n    button.addEventListener(\"mouseover\", handleMouseOver);\r\n    button.addEventListener(\"mouseout\", handleMouseOut);\r\n    function handleMouseOver(event) {\r\n        bgUp.visible = false;\r\n        bgOver.visible = true;\r\n        label.color = \"white\";\r\n    }\r\n    function handleMouseOut(event) {\r\n        bgUp.visible = true;\r\n        bgOver.visible = false;\r\n        label.color = keyColor;\r\n    }\r\n    return button;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/createButton.ts?");

/***/ }),

/***/ "./src/createTextButton.ts":
/*!*********************************!*\
  !*** ./src/createTextButton.ts ***!
  \*********************************/
/*! exports provided: createTextButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTextButton\", function() { return createTextButton; });\nfunction createTextButton(text, font, keyColor, shadowColor) {\r\n    var button = new createjs.Container();\r\n    button.name = text;\r\n    button.cursor = \"pointer\";\r\n    // ラベル\r\n    var label = new createjs.Text(text, font, keyColor);\r\n    label.textAlign = \"center\";\r\n    label.textBaseline = \"middle\";\r\n    label.x = label.getMeasuredWidth() / 2;\r\n    label.y = label.getMeasuredHeight() / 2;\r\n    // 透明背景\r\n    var bg = new createjs.Shape();\r\n    bg.graphics\r\n        .beginFill(\"white\")\r\n        .drawRoundRect(0, 0, label.getMeasuredWidth(), label.getMeasuredHeight(), 10);\r\n    bg.alpha = 0.01;\r\n    button.addChild(label);\r\n    button.addChild(bg);\r\n    button.regX = label.getMeasuredWidth() / 2;\r\n    button.regY = label.getMeasuredHeight() / 2;\r\n    button.addEventListener(\"mouseover\", handleMouseOverStart);\r\n    button.addEventListener(\"mouseout\", handleMouseOutStart);\r\n    function handleMouseOverStart(event) {\r\n        label.shadow = new createjs.Shadow(shadowColor, 0, 0, 20);\r\n    }\r\n    ;\r\n    function handleMouseOutStart(event) {\r\n        label.shadow = null;\r\n    }\r\n    ;\r\n    return button;\r\n}\r\n\n\n//# sourceURL=webpack:///./src/createTextButton.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _createButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createButton */ \"./src/createButton.ts\");\n/* harmony import */ var _createTextButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createTextButton */ \"./src/createTextButton.ts\");\n/* harmony import */ var _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CardStatus.json */ \"./src/CardStatus.json\");\nvar _CardStatus_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./CardStatus.json */ \"./src/CardStatus.json\", 1);\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (undefined && undefined.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (undefined && undefined.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nvar __values = (undefined && undefined.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\n\r\n\r\n\r\nvar DEFAULT_LIFE = 8000;\r\nvar cardImgSize = { x: 123, y: 180, margin: 10 };\r\nvar windowSize = { w: cardImgSize.x * 7, h: cardImgSize.y + 20 };\r\nvar selectedCardImgArray = [];\r\nvar Grid = /** @class */ (function () {\r\n    function Grid(front, back) {\r\n        this.front = front;\r\n        this.back = back;\r\n    }\r\n    ;\r\n    return Grid;\r\n}());\r\n;\r\nvar Game = /** @class */ (function () {\r\n    function Game() {\r\n        this.defaultDeck = [];\r\n        this.FIELD = [undefined];\r\n        this.MO = [undefined, undefined, undefined, undefined, undefined];\r\n        this.ST = [undefined, undefined, undefined, undefined, undefined];\r\n        this.GY = [];\r\n        this.DD = [];\r\n        this.EXTRA = [];\r\n        this.HAND = [];\r\n        this.DECK = [];\r\n        this.myLifePoint = DEFAULT_LIFE;\r\n        this.enemyLifePoint = DEFAULT_LIFE;\r\n        this.normalSummon = true;\r\n        this.countNS = 0;\r\n        this.payLPcost = true;\r\n        this.chain = [];\r\n        this.nowTime = new Time;\r\n        this.timeArray = [];\r\n        this.liblaryOut = false;\r\n        var front_position = (function () {\r\n            var array = [];\r\n            for (var i = 0; i < 8; i++) {\r\n                if (i < 7) {\r\n                    array.push([cardImgSize.x / 2 + 20 + (cardImgSize.y + cardImgSize.margin) * i, cardImgSize.y / 2 + 20 + 100]);\r\n                }\r\n                else if (i == 7) {\r\n                    array.push([cardImgSize.x / 2 - 20 + (cardImgSize.y + cardImgSize.margin) * i, cardImgSize.y / 2 + 20 + 100]);\r\n                }\r\n                ;\r\n            }\r\n            ;\r\n            return array;\r\n        })();\r\n        var back_position = (function () {\r\n            var array = [];\r\n            for (var i = 8; i < 15; i++) {\r\n                array.push([cardImgSize.x / 2 + 20 + (cardImgSize.y + cardImgSize.margin) * (i - 8), cardImgSize.y * 1.5 + 40 + 100]);\r\n            }\r\n            ;\r\n            return array;\r\n        })();\r\n        this.grid = new Grid(front_position, back_position);\r\n        this.displayOrder = {\r\n            field: [this.grid.front[0]],\r\n            mon: [this.grid.front[3], this.grid.front[2], this.grid.front[4], this.grid.front[1], this.grid.front[5]],\r\n            gy: [this.grid.front[6]],\r\n            dd: [this.grid.front[7]],\r\n            ex: [this.grid.back[0]],\r\n            st: [this.grid.back[3], this.grid.back[2], this.grid.back[4], this.grid.back[1], this.grid.back[5]],\r\n            deck: [this.grid.back[6]],\r\n            hand: [this.grid.front[3][0], this.grid.front[3][1] * 3]\r\n        };\r\n        this.centerGrid = { x: this.grid.front[3][0], y: (this.grid.front[0][1] + this.grid.back[0][1]) / 2 };\r\n    }\r\n    ;\r\n    return Game;\r\n}());\r\n;\r\nvar Time = /** @class */ (function () {\r\n    function Time() {\r\n        this.summon = [];\r\n        this.move = [];\r\n        this.leaveBoard = [];\r\n        this.discard = [];\r\n        this.destroy = [];\r\n        this.vanish = [];\r\n        this.release = [];\r\n        this.bounce = [];\r\n        this.effectActived = [];\r\n    }\r\n    ;\r\n    return Time;\r\n}());\r\n;\r\n;\r\nvar Card = /** @class */ (function () {\r\n    function Card() {\r\n        var _this = this;\r\n        this.cardBackImageFileName = \"cardback.jpeg\";\r\n        this.location = \"DECK\";\r\n        this.face = \"UP\";\r\n        this.effect = [];\r\n        this.canDestroy = true;\r\n        this.canVanish = true;\r\n        this.equipMark = [];\r\n        this.button = (function () {\r\n            var NSButton = new button(_this, \"NS\", cardImgSize.x, 40, \"#0275d8\");\r\n            var SSButton = new button(_this, \"SS\", cardImgSize.x, 40, \"#0275d8\");\r\n            var SETButton = new button(_this, \"SET\", cardImgSize.x, 40, \"#0275d8\");\r\n            var ACTIVATEButton = new button(_this, \"ACTIVATE\", cardImgSize.x, 40, \"#0275d8\");\r\n            var FLIPButton = new button(_this, \"FLIP\", cardImgSize.x, 40, \"#0275d8\");\r\n            var VIEWButton = new button(_this, \"VIEW\", cardImgSize.x, 40, \"#0275d8\");\r\n            return { NS: NSButton, SS: SSButton, SET: SETButton, ACTIVATE: ACTIVATEButton, FLIP: FLIPButton, VIEW: VIEWButton };\r\n        })();\r\n    }\r\n    ;\r\n    return Card;\r\n}());\r\n;\r\nvar MonsterCard = /** @class */ (function (_super) {\r\n    __extends(MonsterCard, _super);\r\n    function MonsterCard() {\r\n        var _this = _super.call(this) || this;\r\n        _this.cardType = \"Monster\";\r\n        _this.canNS = true;\r\n        _this.buff = [];\r\n        _this.equip = [];\r\n        _this.RuleSScondition = function () { return false; };\r\n        return _this;\r\n    }\r\n    ;\r\n    return MonsterCard;\r\n}(Card));\r\n;\r\nvar SpellCard = /** @class */ (function (_super) {\r\n    __extends(SpellCard, _super);\r\n    function SpellCard() {\r\n        var _this = _super.call(this) || this;\r\n        _this.cardType = \"Spell\";\r\n        _this.peggingTarget = [];\r\n        return _this;\r\n    }\r\n    ;\r\n    return SpellCard;\r\n}(Card));\r\n;\r\nvar TrapCard = /** @class */ (function (_super) {\r\n    __extends(TrapCard, _super);\r\n    function TrapCard() {\r\n        var _this = _super.call(this) || this;\r\n        _this.cardType = \"Trap\";\r\n        _this.peggingTarget = [];\r\n        return _this;\r\n    }\r\n    ;\r\n    return TrapCard;\r\n}(Card));\r\n;\r\nvar effect = /** @class */ (function () {\r\n    function effect(card) {\r\n        this.card = card;\r\n        this.targetCard = [];\r\n        this.costCard = [];\r\n        this.mode = true;\r\n        this.modeText = function () { return \"\"; };\r\n        this.lifeCost = 0;\r\n    }\r\n    ;\r\n    return effect;\r\n}());\r\n;\r\nvar button = /** @class */ (function () {\r\n    function button(card, text, w, h, color) {\r\n        this.card = card;\r\n        this.buttonContainer = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(text, w, h, color);\r\n    }\r\n    ;\r\n    return button;\r\n}());\r\n;\r\nvar timeout = function (ms) {\r\n    return new Promise(function (resolve) { return setTimeout(resolve, ms); });\r\n};\r\n/**\r\n * 正の整数に変換\r\n */\r\nvar zerofix = function (num) {\r\n    if (num <= 0) {\r\n        return \"0\";\r\n    }\r\n    else {\r\n        return num.toFixed();\r\n    }\r\n    ;\r\n};\r\n/**\r\n * 中央揃えテキスト生成\r\n */\r\nvar genCenterText = function (text) {\r\n    var newText = new createjs.Text(text, \"80px serif\", \"midnightblue\");\r\n    newText.textBaseline = \"middle\";\r\n    newText.textAlign = \"center\";\r\n    return newText;\r\n};\r\n/**\r\n * カードインスタンス生成\r\n */\r\nvar genCardObject = {\r\n    Monster: function (json) {\r\n        var newCard = new MonsterCard;\r\n        Object.keys(json).map(function (key, index, array) {\r\n            newCard[key] = json[key];\r\n        });\r\n        return newCard;\r\n    },\r\n    Spell: function (json) {\r\n        var newCard = new SpellCard;\r\n        Object.keys(json).map(function (key, index, array) {\r\n            newCard[key] = json[key];\r\n        });\r\n        return newCard;\r\n    },\r\n    Trap: function (json) {\r\n        var newCard = new TrapCard;\r\n        Object.keys(json).map(function (key, index, array) {\r\n            newCard[key] = json[key];\r\n        });\r\n        return newCard;\r\n    },\r\n};\r\n/**\r\n * 公開 非公開領域判定\r\n */\r\nvar publicOrPrivate = function (card) {\r\n    var PublicArea = [\"MO\", \"ST\", \"FIELD\", \"GY\", \"DD\"];\r\n    if (PublicArea.includes(card.location)) {\r\n        return \"Public\";\r\n    }\r\n    else {\r\n        return \"Private\";\r\n    }\r\n    ;\r\n};\r\n/**\r\n * 配列をランダム化\r\n */\r\nvar shuffle = function (target) {\r\n    var _a;\r\n    for (var i = target.length - 1; i >= 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        _a = __read([target[j], target[i]], 2), target[i] = _a[0], target[j] = _a[1];\r\n    }\r\n    ;\r\n    return target;\r\n};\r\nwindow.onload = function () {\r\n    var _this = this;\r\n    /**\r\n     * 指定のstageに指定のcardを指定座標で描画する\r\n     *\r\n     * @param container ステージ\r\n     * @param card\r\n     * @param x 座標\r\n     * @param y 座標\r\n     */\r\n    function puton(container, card, x, y) {\r\n        var _a;\r\n        card.imgContainer = new createjs.Container();\r\n        container.addChild(card.imgContainer);\r\n        card.imgContainer.cursor = \"pointer\";\r\n        card.frontImg = new createjs.Bitmap(card.imageFileName);\r\n        card.imgContainer.addChild(card.frontImg);\r\n        card.frontImg.regX = cardImgSize.x / 2;\r\n        card.frontImg.regY = cardImgSize.y / 2;\r\n        card.frontImg.scaleX = 0;\r\n        card.cardBackImg = new createjs.Bitmap(card.cardBackImageFileName);\r\n        card.imgContainer.addChild(card.cardBackImg);\r\n        card.cardBackImg.regX = cardImgSize.x / 2;\r\n        card.cardBackImg.regY = cardImgSize.y / 2;\r\n        card.imgContainer.regX = 0;\r\n        card.imgContainer.regY = 0;\r\n        _a = __read([x, y], 2), card.imgContainer.x = _a[0], card.imgContainer.y = _a[1];\r\n        Object.values(card.button).forEach(function (b) {\r\n            card.imgContainer.addChild(b.buttonContainer);\r\n            b.buttonContainer.visible = false;\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n     * ボードのカード置き場の枠を描画する\r\n     */\r\n    var setBoard = function (stage) {\r\n        var drawzone = function (x, y, i) {\r\n            var zone = new createjs.Shape();\r\n            zone.graphics.beginStroke(\"#0055bb\");\r\n            zone.graphics.drawRect((cardImgSize.y - cardImgSize.x) / 2, 0, cardImgSize.x, cardImgSize.y);\r\n            if ((1 <= i && i <= 5)) {\r\n                zone.graphics.drawRect(0, (cardImgSize.y - cardImgSize.x) / 2, cardImgSize.y, cardImgSize.x);\r\n            }\r\n            ;\r\n            stage.addChild(zone);\r\n            zone.regX = cardImgSize.y / 2;\r\n            zone.regY = cardImgSize.y / 2;\r\n            zone.x = x;\r\n            zone.y = y;\r\n        };\r\n        var _loop_1 = function (i) {\r\n            var target = (function () {\r\n                if (i < 8) {\r\n                    return game.grid.front[i];\r\n                }\r\n                else {\r\n                    return game.grid.back[i - 8];\r\n                }\r\n                ;\r\n            })();\r\n            drawzone(target[0], target[1], i);\r\n        };\r\n        for (var i = 0; i < 15; i++) {\r\n            _loop_1(i);\r\n        }\r\n        ;\r\n    };\r\n    /**\r\n     * 発動するカードを選択する\r\n     */\r\n    var selectActivateCard = function (effArray, cancel) {\r\n        var tmpCard = new Card;\r\n        var tmpEff = new effect(tmpCard);\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var cardlist, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        cardlist = effArray.flatMap(function (eff) { return eff.card; });\r\n                        _a = tmpEff;\r\n                        return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, tmpEff, \"発動する効果を選択してください\", cancel)];\r\n                    case 1:\r\n                        _a.targetCard = _b.sent();\r\n                        if (1 <= tmpEff.targetCard.length) {\r\n                            resolve(tmpEff.targetCard.pop());\r\n                        }\r\n                        else {\r\n                            resolve();\r\n                        }\r\n                        ;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * 永続ルールチェック\r\n     */\r\n    var ContinuousEffect = function (time) { return __awaiter(_this, void 0, void 0, function () {\r\n        var boardUp, AllCoRu, canActiveEffects;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    boardUp = genCardArray({ location: [\"MO\", \"ST\", \"GY\"], face: [\"UP\"] });\r\n                    AllCoRu = (function () {\r\n                        var tmpCoArray = [];\r\n                        boardUp.map(function (card, index, array) {\r\n                            tmpCoArray.push.apply(tmpCoArray, __spread((card.effect.filter(function (eff) {\r\n                                return eff.effType == \"Continuous\" || eff.effType == \"Rule\";\r\n                            }))));\r\n                        });\r\n                        return tmpCoArray;\r\n                    })();\r\n                    canActiveEffects = function (EffArray, time) {\r\n                        return EffArray.filter(function (eff) {\r\n                            return eff.actionPossible(time);\r\n                        });\r\n                    };\r\n                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, _b, eff, e_1_1;\r\n                            var e_1, _c;\r\n                            return __generator(this, function (_d) {\r\n                                switch (_d.label) {\r\n                                    case 0:\r\n                                        _d.trys.push([0, 5, 6, 7]);\r\n                                        _a = __values(canActiveEffects(AllCoRu, time)), _b = _a.next();\r\n                                        _d.label = 1;\r\n                                    case 1:\r\n                                        if (!!_b.done) return [3 /*break*/, 4];\r\n                                        eff = _b.value;\r\n                                        return [4 /*yield*/, eff.apply()];\r\n                                    case 2:\r\n                                        _d.sent();\r\n                                        _d.label = 3;\r\n                                    case 3:\r\n                                        _b = _a.next();\r\n                                        return [3 /*break*/, 1];\r\n                                    case 4: return [3 /*break*/, 7];\r\n                                    case 5:\r\n                                        e_1_1 = _d.sent();\r\n                                        e_1 = { error: e_1_1 };\r\n                                        return [3 /*break*/, 7];\r\n                                    case 6:\r\n                                        try {\r\n                                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                                        }\r\n                                        finally { if (e_1) throw e_1.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 7:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 誘発QEチェック\r\n     */\r\n    var TriggerQuickeEffect = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        var canActiveEffects, _loop_2;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    canActiveEffects = function (EffArray, time) {\r\n                        return EffArray.filter(function (eff) {\r\n                            return time.map(function (t) { return eff.actionPossible(t); })\r\n                                .includes(true);\r\n                        });\r\n                    };\r\n                    _loop_2 = function () {\r\n                        var AllTrigger, TriggerObj, TriggerTime, _loop_3, _loop_4;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    AllTrigger = (function () {\r\n                                        var tmpTriggerArray = [];\r\n                                        __spread(game.defaultDeck).map(function (card, index, array) {\r\n                                            tmpTriggerArray.push.apply(tmpTriggerArray, __spread((card.effect.filter(function (eff) {\r\n                                                return eff.effType == \"Trigger\";\r\n                                            }))));\r\n                                        });\r\n                                        return tmpTriggerArray;\r\n                                    })();\r\n                                    TriggerObj = (function () {\r\n                                        var TriggerPublicForced = AllTrigger.filter(function (eff) {\r\n                                            return eff.whetherToActivate == \"Forced\" &&\r\n                                                publicOrPrivate(eff.card) == \"Public\";\r\n                                        });\r\n                                        var TriggerPublicAny = AllTrigger.filter(function (eff) {\r\n                                            return eff.whetherToActivate == \"Any\" &&\r\n                                                publicOrPrivate(eff.card) == \"Public\";\r\n                                        });\r\n                                        var TriggerPrivateForced = AllTrigger.filter(function (eff) {\r\n                                            return eff.whetherToActivate == \"Forced\" &&\r\n                                                publicOrPrivate(eff.card) == \"Private\";\r\n                                        });\r\n                                        var TriggerPrivateAny = AllTrigger.filter(function (eff) {\r\n                                            return eff.whetherToActivate == \"Any\" &&\r\n                                                publicOrPrivate(eff.card) == \"Private\";\r\n                                        });\r\n                                        return {\r\n                                            \"PublicForced\": TriggerPublicForced,\r\n                                            \"PublicAny\": TriggerPublicAny,\r\n                                            \"PrivateForced\": TriggerPrivateForced,\r\n                                            \"PrivateAny\": TriggerPrivateAny\r\n                                        };\r\n                                    })();\r\n                                    TriggerTime = __spread(game.timeArray);\r\n                                    game.timeArray = [];\r\n                                    _loop_3 = function () {\r\n                                        var PubForced, activeEffOrg_1, result, activeEffOrg_2, result;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    PubForced = canActiveEffects(TriggerObj.PublicForced, TriggerTime);\r\n                                                    if (!(PubForced.length > 1)) return [3 /*break*/, 4];\r\n                                                    return [4 /*yield*/, selectActivateCard(PubForced)];\r\n                                                case 1:\r\n                                                    activeEffOrg_1 = (_a.sent()).effect.filter(function (eff) {\r\n                                                        return eff.effType == \"Trigger\" && canActiveEffects([eff], TriggerTime);\r\n                                                    }).pop();\r\n                                                    result = __assign(__assign({}, activeEffOrg_1), { targetCard: [], costCard: [] });\r\n                                                    game.nowTime = new Time;\r\n                                                    game.nowTime.effectActived.push({\r\n                                                        card: result.card,\r\n                                                        eff: result\r\n                                                    });\r\n                                                    return [4 /*yield*/, animationChainEffectActivate(result)];\r\n                                                case 2:\r\n                                                    _a.sent();\r\n                                                    return [4 /*yield*/, result.whenActive(result)];\r\n                                                case 3:\r\n                                                    _a.sent();\r\n                                                    game.timeArray.push(__assign({}, game.nowTime));\r\n                                                    game.chain.push(result);\r\n                                                    TriggerObj.PublicForced = TriggerObj.PublicForced.filter(function (eff) {\r\n                                                        return eff !== activeEffOrg_1;\r\n                                                    });\r\n                                                    return [3 /*break*/, 7];\r\n                                                case 4:\r\n                                                    if (!(PubForced.length == 1)) return [3 /*break*/, 7];\r\n                                                    activeEffOrg_2 = PubForced.pop();\r\n                                                    result = __assign(__assign({}, activeEffOrg_2), { targetCard: [], costCard: [] });\r\n                                                    game.nowTime = new Time;\r\n                                                    game.nowTime.effectActived.push({\r\n                                                        card: result.card,\r\n                                                        eff: result\r\n                                                    });\r\n                                                    return [4 /*yield*/, animationChainEffectActivate(result)];\r\n                                                case 5:\r\n                                                    _a.sent();\r\n                                                    return [4 /*yield*/, result.whenActive(result)];\r\n                                                case 6:\r\n                                                    _a.sent();\r\n                                                    game.timeArray.push(__assign({}, game.nowTime));\r\n                                                    game.chain.push(result);\r\n                                                    TriggerObj.PublicForced = TriggerObj.PublicForced.filter(function (eff) {\r\n                                                        return eff !== activeEffOrg_2;\r\n                                                    });\r\n                                                    _a.label = 7;\r\n                                                case 7:\r\n                                                    ;\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    };\r\n                                    _a.label = 1;\r\n                                case 1: return [5 /*yield**/, _loop_3()];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    _a.label = 3;\r\n                                case 3:\r\n                                    if (canActiveEffects(TriggerObj.PublicForced, TriggerTime).length > 0) return [3 /*break*/, 1];\r\n                                    _a.label = 4;\r\n                                case 4:\r\n                                    _loop_4 = function () {\r\n                                        var PubAny, selectedCard, activeEffOrg_3, result, activeEffOrg_4, result;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    PubAny = canActiveEffects(TriggerObj.PublicAny, TriggerTime);\r\n                                                    if (!(PubAny.length > 1)) return [3 /*break*/, 6];\r\n                                                    return [4 /*yield*/, selectActivateCard(PubAny, true)];\r\n                                                case 1:\r\n                                                    selectedCard = _a.sent();\r\n                                                    if (!selectedCard) return [3 /*break*/, 4];\r\n                                                    activeEffOrg_3 = selectedCard.effect.filter(function (eff) {\r\n                                                        return eff.effType == \"Trigger\" && canActiveEffects([eff], TriggerTime);\r\n                                                    }).pop();\r\n                                                    result = __assign(__assign({}, activeEffOrg_3), { targetCard: [], costCard: [] });\r\n                                                    game.nowTime = new Time;\r\n                                                    game.nowTime.effectActived.push({\r\n                                                        card: result.card,\r\n                                                        eff: result\r\n                                                    });\r\n                                                    return [4 /*yield*/, animationChainEffectActivate(result)];\r\n                                                case 2:\r\n                                                    _a.sent();\r\n                                                    return [4 /*yield*/, result.whenActive(result)];\r\n                                                case 3:\r\n                                                    _a.sent();\r\n                                                    game.timeArray.push(__assign({}, game.nowTime));\r\n                                                    console.log(result.card.cardName + \" Effect\");\r\n                                                    game.chain.push(result);\r\n                                                    TriggerObj.PublicAny = TriggerObj.PublicAny.filter(function (eff) {\r\n                                                        return eff !== activeEffOrg_3;\r\n                                                    });\r\n                                                    return [3 /*break*/, 5];\r\n                                                case 4:\r\n                                                    TriggerObj.PublicAny = [];\r\n                                                    _a.label = 5;\r\n                                                case 5:\r\n                                                    ;\r\n                                                    return [3 /*break*/, 11];\r\n                                                case 6:\r\n                                                    if (!(PubAny.length == 1)) return [3 /*break*/, 11];\r\n                                                    activeEffOrg_4 = PubAny.pop();\r\n                                                    return [4 /*yield*/, (openYesNoWindow(activeEffOrg_4.card.cardNameJP + activeEffOrg_4.modeText() + \"の効果を発動しますか？\"))];\r\n                                                case 7:\r\n                                                    if (!_a.sent()) return [3 /*break*/, 10];\r\n                                                    result = __assign(__assign({}, activeEffOrg_4), { targetCard: [], costCard: [] });\r\n                                                    game.nowTime = new Time;\r\n                                                    game.nowTime.effectActived.push({\r\n                                                        card: result.card,\r\n                                                        eff: result\r\n                                                    });\r\n                                                    return [4 /*yield*/, animationChainEffectActivate(result)];\r\n                                                case 8:\r\n                                                    _a.sent();\r\n                                                    return [4 /*yield*/, result.whenActive(result)];\r\n                                                case 9:\r\n                                                    _a.sent();\r\n                                                    game.timeArray.push(__assign({}, game.nowTime));\r\n                                                    console.log(result.card.cardName + \" Effect\");\r\n                                                    game.chain.push(result);\r\n                                                    _a.label = 10;\r\n                                                case 10:\r\n                                                    ;\r\n                                                    TriggerObj.PublicAny = TriggerObj.PublicAny.filter(function (eff) {\r\n                                                        return eff !== activeEffOrg_4;\r\n                                                    });\r\n                                                    _a.label = 11;\r\n                                                case 11:\r\n                                                    ;\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    };\r\n                                    _a.label = 5;\r\n                                case 5: return [5 /*yield**/, _loop_4()];\r\n                                case 6:\r\n                                    _a.sent();\r\n                                    _a.label = 7;\r\n                                case 7:\r\n                                    if (canActiveEffects(TriggerObj.PublicAny, TriggerTime).length > 0) return [3 /*break*/, 5];\r\n                                    _a.label = 8;\r\n                                case 8:\r\n                                    if (!(game.chain.length == 0)) return [3 /*break*/, 9];\r\n                                    console.log(\"NO TriggerEffect\");\r\n                                    return [3 /*break*/, 13];\r\n                                case 9: return [4 /*yield*/, timeout(250)];\r\n                                case 10:\r\n                                    _a.sent();\r\n                                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                            var _a, _b, eff, e_2_1;\r\n                                            var e_2, _c;\r\n                                            return __generator(this, function (_d) {\r\n                                                switch (_d.label) {\r\n                                                    case 0:\r\n                                                        console.log(\"Chain resolve\");\r\n                                                        _d.label = 1;\r\n                                                    case 1:\r\n                                                        _d.trys.push([1, 7, 8, 9]);\r\n                                                        _a = __values(game.chain.reverse()), _b = _a.next();\r\n                                                        _d.label = 2;\r\n                                                    case 2:\r\n                                                        if (!!_b.done) return [3 /*break*/, 6];\r\n                                                        eff = _b.value;\r\n                                                        return [4 /*yield*/, animationchainResolve(eff)];\r\n                                                    case 3:\r\n                                                        _d.sent();\r\n                                                        return [4 /*yield*/, eff.whenResolve(eff)];\r\n                                                    case 4:\r\n                                                        _d.sent();\r\n                                                        _d.label = 5;\r\n                                                    case 5:\r\n                                                        _b = _a.next();\r\n                                                        return [3 /*break*/, 2];\r\n                                                    case 6: return [3 /*break*/, 9];\r\n                                                    case 7:\r\n                                                        e_2_1 = _d.sent();\r\n                                                        e_2 = { error: e_2_1 };\r\n                                                        return [3 /*break*/, 9];\r\n                                                    case 8:\r\n                                                        try {\r\n                                                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                                                        }\r\n                                                        finally { if (e_2) throw e_2.error; }\r\n                                                        return [7 /*endfinally*/];\r\n                                                    case 9:\r\n                                                        ;\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        }); })()];\r\n                                case 11:\r\n                                    _a.sent();\r\n                                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                            var _a, _b, eff, e_3_1;\r\n                                            var e_3, _c;\r\n                                            return __generator(this, function (_d) {\r\n                                                switch (_d.label) {\r\n                                                    case 0:\r\n                                                        _d.trys.push([0, 6, 7, 8]);\r\n                                                        _a = __values(game.chain), _b = _a.next();\r\n                                                        _d.label = 1;\r\n                                                    case 1:\r\n                                                        if (!!_b.done) return [3 /*break*/, 5];\r\n                                                        eff = _b.value;\r\n                                                        if (!(eff.card instanceof SpellCard && (eff.card.spellType == \"Normal\" || eff.card.spellType == \"Quick\"))) return [3 /*break*/, 3];\r\n                                                        return [4 /*yield*/, moveCard.BOARD.toGY(eff.card)];\r\n                                                    case 2:\r\n                                                        _d.sent();\r\n                                                        _d.label = 3;\r\n                                                    case 3:\r\n                                                        ;\r\n                                                        _d.label = 4;\r\n                                                    case 4:\r\n                                                        _b = _a.next();\r\n                                                        return [3 /*break*/, 1];\r\n                                                    case 5: return [3 /*break*/, 8];\r\n                                                    case 6:\r\n                                                        e_3_1 = _d.sent();\r\n                                                        e_3 = { error: e_3_1 };\r\n                                                        return [3 /*break*/, 8];\r\n                                                    case 7:\r\n                                                        try {\r\n                                                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                                                        }\r\n                                                        finally { if (e_3) throw e_3.error; }\r\n                                                        return [7 /*endfinally*/];\r\n                                                    case 8:\r\n                                                        ;\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        }); })()];\r\n                                case 12:\r\n                                    _a.sent();\r\n                                    game.chain = [];\r\n                                    _a.label = 13;\r\n                                case 13:\r\n                                    ;\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    };\r\n                    _a.label = 1;\r\n                case 1: return [5 /*yield**/, _loop_2()];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    if (game.timeArray.length != 0) return [3 /*break*/, 1];\r\n                    _a.label = 4;\r\n                case 4:\r\n                    cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    var genCardArray = function (conditions) {\r\n        var CardArray = __spread(game.defaultDeck);\r\n        var _loop_5 = function (key) {\r\n            CardArray = CardArray.filter(function (card) {\r\n                return key in card && (conditions[key].includes(card[key]) || __spread(card[key]).includes(conditions[key][0]));\r\n            });\r\n        };\r\n        for (var key in conditions) {\r\n            _loop_5(key);\r\n        }\r\n        ;\r\n        return CardArray;\r\n    };\r\n    /**\r\n     * ステータス表示マウスイベント\r\n     */\r\n    var SetStatusDisprayEvent = function (card, targetObj) {\r\n        targetObj.addEventListener(\"mouseover\", handleMoverStatus);\r\n        function handleMoverStatus(event) {\r\n            statusStage.removeAllChildren();\r\n            var cardImg = new createjs.Bitmap(card.cardName + \"_view.jpg\");\r\n            statusStage.addChild(cardImg);\r\n            cardImg.setTransform(statusCanv.width / 2, statusCanv.height / 2, 1, 1, 0, 0, 0, 140, 206);\r\n            statusCardNameText.innerText = card.cardNameJP;\r\n            var typetext = (function () {\r\n                if (card instanceof MonsterCard) {\r\n                    return [\"☆\" + card.level, card.monsterType, card.attribute, card.race].join(\" / \");\r\n                }\r\n                else if (card instanceof SpellCard) {\r\n                    return card.spellType + \" Spell\";\r\n                }\r\n                else if (card instanceof TrapCard) {\r\n                    return card.trapType + \" Trap\";\r\n                }\r\n                ;\r\n            })();\r\n            statusCardTypeText.innerText = typetext;\r\n            statusCardEffText.innerText = card.text;\r\n        }\r\n        ;\r\n    };\r\n    /**\r\n     * 領域移動時のマウスイベント設定\r\n     */\r\n    var mouseEventSetting = {\r\n        board: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n            function handleFieldMover(event) {\r\n                var disprayButtonArray = [];\r\n                if (canActiveEffects(card).length > 0) {\r\n                    disprayButtonArray.push(card.button.ACTIVATE.buttonContainer);\r\n                }\r\n                ;\r\n                disprayButtonArray.forEach(function (button, index, array) {\r\n                    button.x = -cardImgSize.x / 2;\r\n                    button.y = cardImgSize.y / 2 - 40 * (array.length) + 40 * (index);\r\n                    button.visible = true;\r\n                });\r\n            }\r\n            function handleFieldMout(event) {\r\n                buConArray.forEach(function (b) { b.visible = false; });\r\n            }\r\n            function handleEquipTargetMover(event) {\r\n                card.equipMark = [];\r\n                equipMarkArray().forEach(function (m) {\r\n                    mainstage.addChild(m);\r\n                    card.equipMark.push(m);\r\n                });\r\n            }\r\n            function handleFieldEquipMout(event) {\r\n                card.equipMark.forEach(function (m) {\r\n                    mainstage.removeChild(m);\r\n                });\r\n            }\r\n            function handleActivatebuttonClick(event) {\r\n                if (card instanceof SpellCard) {\r\n                    fieldSpellActivate(card);\r\n                    buConArray.forEach(function (b) { b.removeAllEventListeners(\"click\"); });\r\n                }\r\n                else if (card instanceof MonsterCard) {\r\n                    BoardIgnitionActivate(card);\r\n                }\r\n                ;\r\n            }\r\n            var buConArray, equipMarkArray;\r\n            return __generator(this, function (_a) {\r\n                card.imgContainer.removeAllEventListeners();\r\n                buConArray = Object.values(card.button).map(function (b) { return b.buttonContainer; });\r\n                buConArray.forEach(function (b) {\r\n                    b.removeAllEventListeners(\"click\");\r\n                    b.visible = false;\r\n                });\r\n                SetStatusDisprayEvent(card, card.imgContainer);\r\n                card.imgContainer.addEventListener(\"mouseover\", handleFieldMover);\r\n                ;\r\n                card.imgContainer.addEventListener(\"mouseout\", handleFieldMout);\r\n                ;\r\n                equipMarkArray = function () {\r\n                    if (card instanceof MonsterCard) {\r\n                        if (1 <= card.equip.length) {\r\n                            var array = card.equip.map(function (eq) { return genEquipImg(eq); });\r\n                            array.push(genEquipImg(card));\r\n                            return array;\r\n                        }\r\n                        else {\r\n                            return [];\r\n                        }\r\n                        ;\r\n                    }\r\n                    else {\r\n                        return [];\r\n                    }\r\n                    ;\r\n                };\r\n                card.imgContainer.addEventListener(\"mouseover\", handleEquipTargetMover);\r\n                ;\r\n                card.imgContainer.addEventListener(\"mouseout\", handleFieldEquipMout);\r\n                ;\r\n                card.button.ACTIVATE.buttonContainer.addEventListener(\"click\", handleActivatebuttonClick);\r\n                ;\r\n                return [2 /*return*/];\r\n            });\r\n        }); },\r\n        HAND: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n            function handleHandMover(event) {\r\n                var disprayButtonArray = [];\r\n                if (card instanceof SpellCard) {\r\n                    if (canActiveEffects(card).length > 0 && genCardArray({ location: [\"ST\"] }).length < 5) {\r\n                        disprayButtonArray.push(card.button.ACTIVATE.buttonContainer);\r\n                    }\r\n                    ;\r\n                }\r\n                else if (card instanceof MonsterCard) {\r\n                    if (canActiveEffects(card).length > 0) {\r\n                        disprayButtonArray.push(card.button.ACTIVATE.buttonContainer);\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n                if (card instanceof MonsterCard && card.RuleSScondition()) {\r\n                    disprayButtonArray.push(card.button.SS.buttonContainer);\r\n                }\r\n                ;\r\n                if (card instanceof MonsterCard && JudgeNS(card)) {\r\n                    disprayButtonArray.push(card.button.NS.buttonContainer);\r\n                    disprayButtonArray.push(card.button.SET.buttonContainer);\r\n                }\r\n                else if ((card instanceof SpellCard || card instanceof TrapCard) && genCardArray({ location: [\"ST\"] }).length < 5) {\r\n                    disprayButtonArray.push(card.button.SET.buttonContainer);\r\n                }\r\n                ;\r\n                disprayButtonArray.forEach(function (button, index, array) {\r\n                    button.x = -cardImgSize.x / 2;\r\n                    button.y = cardImgSize.y / 2 - 40 * (array.length) + 40 * (index);\r\n                    button.visible = true;\r\n                });\r\n            }\r\n            function handleHandMout(event) {\r\n                buConArray.forEach(function (b) { b.visible = false; });\r\n            }\r\n            function handleActivatebuttonClick(event) {\r\n                if (card instanceof SpellCard) {\r\n                    handSpellActivate(card);\r\n                }\r\n                else if (card instanceof MonsterCard) {\r\n                    // 手札の起動効果発動\r\n                }\r\n                ;\r\n            }\r\n            function handleNSbuttonClick(event) {\r\n                if (card instanceof MonsterCard) {\r\n                    normalSummon(card, \"ATK\");\r\n                }\r\n                ;\r\n            }\r\n            function handleSSbuttonClick(event) {\r\n                if (card instanceof MonsterCard) {\r\n                    card.RuleSSpromise();\r\n                }\r\n                ;\r\n            }\r\n            function handleSETbuttonClick(event) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!(card instanceof MonsterCard)) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, normalSummon(card, \"SET\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                _a.label = 2;\r\n                            case 2:\r\n                                ;\r\n                                if (card instanceof SpellCard || card instanceof TrapCard) {\r\n                                    SpellTrapSet.fromHAND(card);\r\n                                }\r\n                                ;\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            var buConArray;\r\n            return __generator(this, function (_a) {\r\n                card.imgContainer.removeAllEventListeners();\r\n                buConArray = Object.values(card.button).map(function (b) { return b.buttonContainer; });\r\n                buConArray.forEach(function (b) {\r\n                    b.removeAllEventListeners(\"click\");\r\n                    b.visible = false;\r\n                });\r\n                SetStatusDisprayEvent(card, card.imgContainer);\r\n                card.imgContainer.addEventListener(\"mouseover\", handleHandMover);\r\n                ;\r\n                card.imgContainer.addEventListener(\"mouseout\", handleHandMout);\r\n                ;\r\n                card.button.ACTIVATE.buttonContainer.addEventListener(\"click\", handleActivatebuttonClick);\r\n                ;\r\n                card.button.NS.buttonContainer.addEventListener(\"click\", handleNSbuttonClick);\r\n                ;\r\n                card.button.SS.buttonContainer.addEventListener(\"click\", handleSSbuttonClick);\r\n                ;\r\n                card.button.SET.buttonContainer.addEventListener(\"click\", handleSETbuttonClick);\r\n                ;\r\n                return [2 /*return*/];\r\n            });\r\n        }); },\r\n        GY: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n            function handleFieldMover(event) {\r\n                var disprayButtonArray = [];\r\n                var canActivateGYCard = game.GY.filter(function (card) { return canActiveEffects(card).length > 0; });\r\n                if (game.GY[game.GY.length - 1] === card) {\r\n                    if (canActivateGYCard.length > 0) {\r\n                        disprayButtonArray.push(card.button.ACTIVATE.buttonContainer);\r\n                    }\r\n                    ;\r\n                    disprayButtonArray.push(card.button.VIEW.buttonContainer);\r\n                }\r\n                ;\r\n                disprayButtonArray.forEach(function (button, index, array) {\r\n                    button.x = -cardImgSize.x / 2;\r\n                    button.y = cardImgSize.y / 2 - 40 * (array.length) + 40 * (index);\r\n                    button.visible = true;\r\n                });\r\n            }\r\n            function handleFieldMout(event) {\r\n                buConArray.forEach(function (b) { b.visible = false; });\r\n            }\r\n            function handleActivatebuttonClick(event) {\r\n                GyEffActivate();\r\n            }\r\n            var buConArray, handlViewbuttonClick;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                card.imgContainer.removeAllEventListeners();\r\n                buConArray = Object.values(card.button).map(function (b) { return b.buttonContainer; });\r\n                buConArray.forEach(function (button) {\r\n                    button.removeAllEventListeners(\"click\");\r\n                    button.visible = false;\r\n                });\r\n                SetStatusDisprayEvent(card, card.imgContainer);\r\n                card.imgContainer.addEventListener(\"mouseover\", handleFieldMover);\r\n                ;\r\n                card.imgContainer.addEventListener(\"mouseout\", handleFieldMout);\r\n                ;\r\n                card.button.ACTIVATE.buttonContainer.addEventListener(\"click\", handleActivatebuttonClick);\r\n                ;\r\n                handlViewbuttonClick = function (event) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, openCardListWindow.view(game.GY, \"GY\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); };\r\n                card.button.VIEW.buttonContainer.addEventListener(\"click\", handlViewbuttonClick);\r\n                return [2 /*return*/];\r\n            });\r\n        }); },\r\n        DD: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n            function handleFieldMover(event) {\r\n                var disprayButtonArray = [];\r\n                var canActivateGYCard = game.DD.filter(function (card) { return canActiveEffects(card).length > 0; });\r\n                if (game.DD[game.DD.length - 1] === card) {\r\n                    if (canActivateGYCard.length > 0) {\r\n                        disprayButtonArray.push(card.button.ACTIVATE.buttonContainer);\r\n                    }\r\n                    ;\r\n                    disprayButtonArray.push(card.button.VIEW.buttonContainer);\r\n                }\r\n                ;\r\n                disprayButtonArray.forEach(function (button, index, array) {\r\n                    button.x = -cardImgSize.x / 2;\r\n                    button.y = cardImgSize.y / 2 - 40 * (array.length) + 40 * (index);\r\n                    button.visible = true;\r\n                });\r\n            }\r\n            function handleFieldMout(event) {\r\n                buConArray.forEach(function (b) { b.visible = false; });\r\n            }\r\n            function handleActivatebuttonClick(event) {\r\n                // 除外ゾーン効果発動\r\n                // buConArray.forEach(b =>{b.removeAllEventListeners(\"click\");});\r\n            }\r\n            var buConArray, handlViewbuttonClick;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                card.imgContainer.removeAllEventListeners();\r\n                buConArray = Object.values(card.button).map(function (b) { return b.buttonContainer; });\r\n                buConArray.forEach(function (button) {\r\n                    button.removeAllEventListeners(\"click\");\r\n                    button.visible = false;\r\n                });\r\n                SetStatusDisprayEvent(card, card.imgContainer);\r\n                card.imgContainer.addEventListener(\"mouseover\", handleFieldMover);\r\n                ;\r\n                card.imgContainer.addEventListener(\"mouseout\", handleFieldMout);\r\n                ;\r\n                card.button.ACTIVATE.buttonContainer.addEventListener(\"click\", handleActivatebuttonClick);\r\n                ;\r\n                handlViewbuttonClick = function (event) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, openCardListWindow.view(game.DD, \"DD\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); };\r\n                card.button.VIEW.buttonContainer.addEventListener(\"click\", handlViewbuttonClick);\r\n                return [2 /*return*/];\r\n            });\r\n        }); },\r\n        DECK: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n            var buConArray;\r\n            return __generator(this, function (_a) {\r\n                card.imgContainer.removeAllEventListeners();\r\n                buConArray = Object.values(card.button).map(function (b) { return b.buttonContainer; });\r\n                buConArray.forEach(function (button) {\r\n                    button.removeAllEventListeners(\"click\");\r\n                    button.visible = false;\r\n                });\r\n                return [2 /*return*/];\r\n            });\r\n        }); },\r\n    };\r\n    var LocationSetting = function (card, to) { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (card.location == \"MO\" || card.location == \"ST\") {\r\n                        game[card.location][game[card.location].indexOf(card)] = void 0;\r\n                    }\r\n                    else {\r\n                        game[card.location] = game[card.location].filter(function (n) { return n !== card; });\r\n                    }\r\n                    ;\r\n                    if (to == \"MO\" || to == \"ST\") {\r\n                        game[to].splice(game[to].indexOf(undefined), 1, card);\r\n                    }\r\n                    else {\r\n                        game[to].push(card);\r\n                    }\r\n                    ;\r\n                    card.location = to;\r\n                    if (!(to == \"MO\" || to == \"ST\" || to == \"FIELD\")) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, mouseEventSetting.board(card)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, mouseEventSetting[to](card)];\r\n                case 3:\r\n                    _a.sent();\r\n                    _a.label = 4;\r\n                case 4:\r\n                    ;\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 移動カードのanimation設定\r\n     */\r\n    var Animation = {\r\n        toBOARD: function (card, position) {\r\n            var toGrid = (function () {\r\n                if (card instanceof MonsterCard) {\r\n                    var toX_1 = game.displayOrder.mon[game.MO.indexOf(card)][0];\r\n                    var toY_1 = game.displayOrder.mon[game.MO.indexOf(card)][1];\r\n                    return { toX: toX_1, toY: toY_1 };\r\n                }\r\n                else {\r\n                    var toX_2 = game.displayOrder.st[game.ST.indexOf(card)][0];\r\n                    var toY_2 = game.displayOrder.st[game.ST.indexOf(card)][1];\r\n                    return { toX: toX_2, toY: toY_2 };\r\n                }\r\n                ;\r\n            })();\r\n            var toX = toGrid.toX, toY = toGrid.toY;\r\n            var TWEEN = function () {\r\n                if (position == \"ATK\") {\r\n                    if (card instanceof MonsterCard) {\r\n                        return createjs.Tween.get(card.imgContainer)\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                            .to({ x: toX, y: toY, scaleX: 1.5, scaleY: 1.5 }, 400, createjs.Ease.cubicOut)\r\n                            .to({ scaleX: 1, scaleY: 1 }, 400, createjs.Ease.cubicIn)\r\n                            .wait(200);\r\n                    }\r\n                    else {\r\n                        return createjs.Tween.get(card.imgContainer)\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                            .to({ x: toX, y: toY }, 500, createjs.Ease.cubicOut);\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n                if (position == \"DEF\") {\r\n                    if (card instanceof MonsterCard) {\r\n                        return createjs.Tween.get(card.imgContainer)\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                            .to({ x: toX, y: toY, rotation: -90, scaleX: 1.5, scaleY: 1.5 }, 400, createjs.Ease.cubicOut)\r\n                            .to({ scaleX: 1, scaleY: 1 }, 400, createjs.Ease.cubicIn);\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n                if (position == \"SET\") {\r\n                    if (card instanceof MonsterCard) {\r\n                        return createjs.Tween.get(card.imgContainer)\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                            .call(function () { cardFlip(card); })\r\n                            .to({ x: toX, y: toY, rotation: -90 }, 500, createjs.Ease.cubicOut);\r\n                    }\r\n                    else {\r\n                        return createjs.Tween.get(card.imgContainer)\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                            .call(function () { cardFlip(card); })\r\n                            .to({ x: toX, y: toY }, 500, createjs.Ease.cubicOut);\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n            };\r\n            return new Promise(function (resolve, reject) {\r\n                TWEEN().call(function () { resolve(); });\r\n            });\r\n        },\r\n        toGY: function (card) {\r\n            var toX = game.displayOrder.gy[0][0] + (game.GY.length - 1) * 0.5;\r\n            var toY = game.displayOrder.gy[0][1] - (game.GY.length - 1) * 0.5;\r\n            return new Promise(function (resolve, reject) {\r\n                if (card.face == \"DOWN\") {\r\n                    cardFlip(card);\r\n                }\r\n                ;\r\n                createjs.Tween.get(card.imgContainer)\r\n                    .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                    .to({ x: toX, y: toY, rotation: 0 }, 500, createjs.Ease.cubicOut)\r\n                    .call(function () { resolve(); });\r\n            });\r\n        },\r\n        fromGY: function (card) {\r\n            cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1);\r\n            var PromiseArray = [];\r\n            game.GY.map(function (card, index, array) {\r\n                var twPromise = function () {\r\n                    return new Promise(function (resolve, reject) {\r\n                        createjs.Tween.get(card.imgContainer)\r\n                            .to({ x: game.displayOrder.gy[0][0] + index * 0.5, y: game.displayOrder.gy[0][1] - index * 0.5 })\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - array.length + index); })\r\n                            .call(function () { resolve(); });\r\n                    });\r\n                };\r\n                PromiseArray.push(twPromise());\r\n            });\r\n            return Promise.all(PromiseArray);\r\n        },\r\n        toDD: function (card) {\r\n            var toX = game.displayOrder.dd[0][0] + (game.DD.length - 1) * 0.5;\r\n            var toY = game.displayOrder.dd[0][1] - (game.DD.length - 1) * 0.5;\r\n            return new Promise(function (resolve, reject) {\r\n                if (card.face == \"DOWN\") {\r\n                    cardFlip(card);\r\n                }\r\n                ;\r\n                createjs.Tween.get(card.imgContainer)\r\n                    .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                    .to({ x: toX, y: toY, rotation: 0 }, 500, createjs.Ease.cubicOut)\r\n                    .call(function () { resolve(); });\r\n            });\r\n        },\r\n        fromDD: function (card) {\r\n            cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1);\r\n            var PromiseArray = [];\r\n            game.DD.map(function (card, index, array) {\r\n                var twPromise = function () {\r\n                    return new Promise(function (resolve, reject) {\r\n                        createjs.Tween.get(card.imgContainer)\r\n                            .to({ x: game.displayOrder.dd[0][0] + index * 0.5, y: game.displayOrder.dd[0][1] - index * 0.5 })\r\n                            .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - array.length + index); })\r\n                            .call(function () { resolve(); });\r\n                    });\r\n                };\r\n                PromiseArray.push(twPromise());\r\n            });\r\n            return Promise.all(PromiseArray);\r\n        },\r\n        toDECK: function (card) {\r\n            var toX = game.displayOrder.deck[0][0] + (game.DECK.length - 1) * 0.5;\r\n            var toY = game.displayOrder.deck[0][1] - (game.DECK.length - 1) * 0.5;\r\n            return new Promise(function (resolve, reject) {\r\n                if (card.face == \"UP\") {\r\n                    cardFlip(card);\r\n                }\r\n                ;\r\n                createjs.Tween.get(card.imgContainer)\r\n                    .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - 1); })\r\n                    .to({ x: toX, y: toY, rotation: 0 }, 500, createjs.Ease.cubicOut)\r\n                    .call(function () { resolve(); });\r\n            });\r\n        },\r\n    };\r\n    /**\r\n     * カードの移動\r\n     */\r\n    var moveCard = {\r\n        HAND: {\r\n            toBOARD: function (card, position) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(card instanceof MonsterCard)) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, LocationSetting(card, \"MO\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [3 /*break*/, 4];\r\n                        case 2: return [4 /*yield*/, LocationSetting(card, \"ST\")];\r\n                        case 3:\r\n                            _a.sent();\r\n                            _a.label = 4;\r\n                        case 4:\r\n                            ;\r\n                            return [4 /*yield*/, Promise.all([animationHandAdjust(), Animation.toBOARD(card, position)])];\r\n                        case 5:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toGY: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"GY\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Promise.all([animationHandAdjust(), Animation.toGY(card)])];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toDD: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"DD\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Promise.all([animationHandAdjust(), Animation.toDD(card)])];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n        },\r\n        DECK: {\r\n            toHAND: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"HAND\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, animationHandAdjust()];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toGY: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"GY\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.toGY(card)];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toBOARD: function (card, position) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(card instanceof MonsterCard)) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, LocationSetting(card, \"MO\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [3 /*break*/, 4];\r\n                        case 2: return [4 /*yield*/, LocationSetting(card, \"ST\")];\r\n                        case 3:\r\n                            _a.sent();\r\n                            _a.label = 4;\r\n                        case 4:\r\n                            ;\r\n                            return [4 /*yield*/, Promise.all([Animation.toBOARD(card, position)])];\r\n                        case 5:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toDD: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"DD\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.toDD(card)];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n        },\r\n        BOARD: {\r\n            toGY: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 3];\r\n                            return [4 /*yield*/, LocationSetting(card, \"GY\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.toGY(card)];\r\n                        case 2:\r\n                            _a.sent();\r\n                            _a.label = 3;\r\n                        case 3:\r\n                            ;\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toDD: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 3];\r\n                            return [4 /*yield*/, LocationSetting(card, \"DD\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.toDD(card)];\r\n                        case 2:\r\n                            _a.sent();\r\n                            _a.label = 3;\r\n                        case 3:\r\n                            ;\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toHAND: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"HAND\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, animationHandAdjust()];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n        },\r\n        GY: {\r\n            toBOARD: function (card, position) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(card instanceof MonsterCard)) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, LocationSetting(card, \"MO\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [3 /*break*/, 4];\r\n                        case 2: return [4 /*yield*/, LocationSetting(card, \"ST\")];\r\n                        case 3:\r\n                            _a.sent();\r\n                            _a.label = 4;\r\n                        case 4:\r\n                            ;\r\n                            // await Promise.all([Animation.fromGY(card), Animation.toBOARD(card, position)]);\r\n                            return [4 /*yield*/, Animation.toBOARD(card, position)];\r\n                        case 5:\r\n                            // await Promise.all([Animation.fromGY(card), Animation.toBOARD(card, position)]);\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.fromGY(card)];\r\n                        case 6:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toHAND: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"HAND\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            // await Promise.all([animationHandAdjust(),Animation.fromGY(card)]);\r\n                            return [4 /*yield*/, animationHandAdjust()];\r\n                        case 2:\r\n                            // await Promise.all([animationHandAdjust(),Animation.fromGY(card)]);\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.fromGY(card)];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toDD: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"DD\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            // await Promise.all([Animation.toDD(card),Animation.fromGY(card)]);\r\n                            return [4 /*yield*/, Animation.toDD(card)];\r\n                        case 2:\r\n                            // await Promise.all([Animation.toDD(card),Animation.fromGY(card)]);\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.fromGY(card)];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toDECK: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"DECK\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            // await Promise.all([Animation.toDECK(card),Animation.fromGY(card)]);\r\n                            return [4 /*yield*/, Animation.toDECK(card)];\r\n                        case 2:\r\n                            // await Promise.all([Animation.toDECK(card),Animation.fromGY(card)]);\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.fromGY(card)];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n        },\r\n        DD: {\r\n            toHAND: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, LocationSetting(card, \"HAND\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, animationHandAdjust()];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.fromDD(card)];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n            toBOARD: function (card, position) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(card instanceof MonsterCard)) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, LocationSetting(card, \"MO\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [3 /*break*/, 4];\r\n                        case 2: return [4 /*yield*/, LocationSetting(card, \"ST\")];\r\n                        case 3:\r\n                            _a.sent();\r\n                            _a.label = 4;\r\n                        case 4:\r\n                            ;\r\n                            return [4 /*yield*/, Animation.toBOARD(card, position)];\r\n                        case 5:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, Animation.fromDD(card)];\r\n                        case 6:\r\n                            _a.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); },\r\n        },\r\n    };\r\n    /**\r\n     * チェーンに乗る効果発動アニメーション\r\n     */\r\n    var animationChainEffectActivate = function (eff) { return __awaiter(_this, void 0, void 0, function () {\r\n        var chainNumber, effImg, cardPromise, chainPromise;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    chainNumber = function (chainNum, eff) {\r\n                        var newText = new createjs.Text(chainNum.toString(), \"100px serif\", \"DarkRed\");\r\n                        newText.textAlign = \"center\";\r\n                        newText.textBaseline = \"middle\";\r\n                        newText.scaleX = 3;\r\n                        newText.scaleY = 3;\r\n                        newText.x = eff.card.imgContainer.x;\r\n                        newText.y = eff.card.imgContainer.y;\r\n                        newText.alpha = 0;\r\n                        return newText;\r\n                    };\r\n                    effImg = new createjs.Bitmap(eff.card.imageFileName);\r\n                    effImg.regX = cardImgSize.x / 2;\r\n                    effImg.regY = cardImgSize.y / 2;\r\n                    effImg.x = eff.card.imgContainer.x;\r\n                    effImg.y = eff.card.imgContainer.y;\r\n                    mainstage.addChild(effImg);\r\n                    cardPromise = new Promise(function (resolve, reject) {\r\n                        createjs.Tween.get(effImg)\r\n                            .to({ scaleX: 3, scaleY: 3, alpha: 0 }, 500, createjs.Ease.cubicOut)\r\n                            .call(function () { mainstage.removeChild(effImg); })\r\n                            .call(function () { resolve(); });\r\n                    });\r\n                    chainPromise = new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                        var _this = this;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    if (!(game.chain.length == 1)) return [3 /*break*/, 3];\r\n                                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            return __generator(this, function (_a) {\r\n                                                game.chain[0].chainBrock = chainNumber(1, game.chain[0]);\r\n                                                mainstage.addChild(game.chain[0].chainBrock);\r\n                                                createjs.Tween.get(game.chain[0].chainBrock)\r\n                                                    .to({ scaleX: 1, scaleY: 1, alpha: 1 }, 500, createjs.Ease.cubicIn)\r\n                                                    .call(function () { resolve(); });\r\n                                                return [2 /*return*/];\r\n                                            });\r\n                                        }); })];\r\n                                case 1:\r\n                                    _a.sent();\r\n                                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            return __generator(this, function (_a) {\r\n                                                eff.chainBrock = chainNumber(2, eff);\r\n                                                mainstage.addChild(eff.chainBrock);\r\n                                                createjs.Tween.get(eff.chainBrock)\r\n                                                    .to({ scaleX: 1, scaleY: 1, alpha: 1 }, 500, createjs.Ease.cubicIn)\r\n                                                    .call(function () { resolve(); });\r\n                                                return [2 /*return*/];\r\n                                            });\r\n                                        }); })];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    return [3 /*break*/, 5];\r\n                                case 3:\r\n                                    if (!(2 <= game.chain.length)) return [3 /*break*/, 5];\r\n                                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            return __generator(this, function (_a) {\r\n                                                eff.chainBrock = chainNumber(game.chain.length + 1, eff);\r\n                                                mainstage.addChild(eff.chainBrock);\r\n                                                createjs.Tween.get(eff.chainBrock)\r\n                                                    .to({ scaleX: 1, scaleY: 1, alpha: 1 }, 500, createjs.Ease.cubicIn)\r\n                                                    .call(function () { resolve(); });\r\n                                                return [2 /*return*/];\r\n                                            });\r\n                                        }); })];\r\n                                case 4:\r\n                                    _a.sent();\r\n                                    _a.label = 5;\r\n                                case 5:\r\n                                    ;\r\n                                    resolve();\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); });\r\n                    return [4 /*yield*/, cardPromise];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, chainPromise];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * チェーンブロック解決アニメーション\r\n     */\r\n    var animationchainResolve = function (eff) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!eff.chainBrock) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                createjs.Tween.get(eff.chainBrock)\r\n                                    .to({ scaleX: 3, scaleY: 3, alpha: 0 }, 500, createjs.Ease.cubicOut)\r\n                                    .call(function () {\r\n                                    mainstage.removeChild(eff.chainBrock);\r\n                                    eff.chainBrock = void (0);\r\n                                })\r\n                                    .call(function () { resolve(); });\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); })];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    ;\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 対象をとるアニメーション\r\n     */\r\n    var animationEffectTarget = function (cardArray) {\r\n        var genAimImg = function () {\r\n            var aimImg = new createjs.Bitmap(\"aimingMark.png\");\r\n            aimImg.setTransform(0, 0, 3, 3);\r\n            aimImg.regX = 64;\r\n            aimImg.regY = 64;\r\n            aimImg.alpha = 0;\r\n            createjs.Ticker.addEventListener(\"tick\", handleTick);\r\n            function handleTick() {\r\n                aimImg.rotation += 2;\r\n            }\r\n            ;\r\n            return aimImg;\r\n        };\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_6, cardArray_1, cardArray_1_1, card, e_4_1;\r\n                            var e_4, _a;\r\n                            var _this = this;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_6 = function (card) {\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0: return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                                            var aimImg;\r\n                                                            return __generator(this, function (_a) {\r\n                                                                if (card.location == \"GY\") {\r\n                                                                    game.GY.splice(game.GY.lastIndexOf(card), 1);\r\n                                                                    game.GY.push(card);\r\n                                                                    game.GY.map(function (c, index, array) {\r\n                                                                        createjs.Tween.get(c.imgContainer)\r\n                                                                            .to({ x: game.displayOrder.gy[0][0] + index * 0.5, y: game.displayOrder.gy[0][1] - index * 0.5 })\r\n                                                                            .call(function () { cardContainer.setChildIndex(c.imgContainer, cardContainer.numChildren - array.length + index); });\r\n                                                                    });\r\n                                                                }\r\n                                                                else if (card.location == \"DD\") {\r\n                                                                    game.DD.splice(game.DD.lastIndexOf(card), 1);\r\n                                                                    game.DD.push(card);\r\n                                                                    game.DD.map(function (c, index, array) {\r\n                                                                        createjs.Tween.get(c.imgContainer)\r\n                                                                            .to({ x: game.displayOrder.dd[0][0] + index * 0.5, y: game.displayOrder.dd[0][1] - index * 0.5 })\r\n                                                                            .call(function () { cardContainer.setChildIndex(c.imgContainer, cardContainer.numChildren - array.length + index); });\r\n                                                                    });\r\n                                                                }\r\n                                                                ;\r\n                                                                aimImg = genAimImg();\r\n                                                                card.imgContainer.addChild(aimImg);\r\n                                                                createjs.Tween.get(aimImg)\r\n                                                                    .to({ scaleX: 0.8, scaleY: 0.8, alpha: 1 }, 250, createjs.Ease.cubicIn)\r\n                                                                    .wait(1000)\r\n                                                                    .to({ alpha: 0 }, 250)\r\n                                                                    .call(function () { card.imgContainer.removeChild(aimImg); })\r\n                                                                    .call(function () { resolve(); });\r\n                                                                return [2 /*return*/];\r\n                                                            });\r\n                                                        }); })];\r\n                                                    case 1:\r\n                                                        _a.sent();\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        cardArray_1 = __values(cardArray), cardArray_1_1 = cardArray_1.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!cardArray_1_1.done) return [3 /*break*/, 5];\r\n                                        card = cardArray_1_1.value;\r\n                                        return [5 /*yield**/, _loop_6(card)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        cardArray_1_1 = cardArray_1.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_4_1 = _b.sent();\r\n                                        e_4 = { error: e_4_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (cardArray_1_1 && !cardArray_1_1.done && (_a = cardArray_1.return)) _a.call(cardArray_1);\r\n                                        }\r\n                                        finally { if (e_4) throw e_4.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        resolve();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * 手札の魔法発動\r\n     */\r\n    var handSpellActivate = function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n        var Effect, ActivedEffect;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    Effect = card.effect.find(function (Eff) { return Eff.effType == \"CardActived\"; });\r\n                    ActivedEffect = __assign(__assign({}, Effect), { targetCard: [], costCard: [] });\r\n                    game.nowTime = new Time;\r\n                    return [4 /*yield*/, moveCard.HAND.toBOARD(card, \"ATK\")];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, animationChainEffectActivate(ActivedEffect)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ActivedEffect.whenActive(ActivedEffect)];\r\n                case 3:\r\n                    _a.sent();\r\n                    game.timeArray.push(__assign({}, game.nowTime));\r\n                    game.chain.push(ActivedEffect);\r\n                    return [4 /*yield*/, TriggerQuickeEffect()];\r\n                case 4:\r\n                    _a.sent();\r\n                    cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 墓地の起動効果発動\r\n     */\r\n    var GyEffActivate = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        var AllGyIgnition, selectedCard, Effect, ActivedEffect;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    ;\r\n                    AllGyIgnition = (function () {\r\n                        var tmpArray = [];\r\n                        game.GY.map(function (card, index, array) {\r\n                            tmpArray.push.apply(tmpArray, __spread((card.effect.filter(function (eff) {\r\n                                return eff.effType == \"Ignition\" &&\r\n                                    eff.range.includes(\"GY\");\r\n                            }))));\r\n                        });\r\n                        return tmpArray;\r\n                    })();\r\n                    return [4 /*yield*/, selectActivateCard(AllGyIgnition, true)];\r\n                case 1:\r\n                    selectedCard = _a.sent();\r\n                    if (!selectedCard) return [3 /*break*/, 5];\r\n                    Effect = canActiveEffects(selectedCard).pop();\r\n                    ActivedEffect = __assign(__assign({}, Effect), { targetCard: [], costCard: [] });\r\n                    game.nowTime = new Time;\r\n                    return [4 /*yield*/, animationChainEffectActivate(ActivedEffect)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ActivedEffect.whenActive(ActivedEffect)];\r\n                case 3:\r\n                    _a.sent();\r\n                    game.timeArray.push(__assign({}, game.nowTime));\r\n                    game.chain.push(ActivedEffect);\r\n                    return [4 /*yield*/, TriggerQuickeEffect()];\r\n                case 4:\r\n                    _a.sent();\r\n                    _a.label = 5;\r\n                case 5:\r\n                    ;\r\n                    cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 場の起動効果発動\r\n     */\r\n    var BoardIgnitionActivate = function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n        var Effect, ActivedEffect;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    Effect = card.effect.find(function (Eff) { return Eff.effType == \"Ignition\"; });\r\n                    ActivedEffect = __assign(__assign({}, Effect), { targetCard: [], costCard: [] });\r\n                    game.nowTime = new Time;\r\n                    game.nowTime.effectActived.push({\r\n                        card: ActivedEffect.card,\r\n                        eff: ActivedEffect\r\n                    });\r\n                    return [4 /*yield*/, animationChainEffectActivate(ActivedEffect)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ActivedEffect.whenActive(ActivedEffect)];\r\n                case 2:\r\n                    _a.sent();\r\n                    game.timeArray.push(__assign({}, game.nowTime));\r\n                    game.chain.push(ActivedEffect);\r\n                    return [4 /*yield*/, TriggerQuickeEffect()];\r\n                case 3:\r\n                    _a.sent();\r\n                    cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * セットした魔法発動\r\n     */\r\n    var fieldSpellActivate = function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n        var Effect, ActivedEffect;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    Effect = card.effect.find(function (Eff) { return Eff.effType == \"CardActived\"; });\r\n                    ActivedEffect = __assign(__assign({}, Effect), { targetCard: [], costCard: [] });\r\n                    game.nowTime = new Time;\r\n                    if (!(card.face == \"DOWN\")) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, cardFlip(card)];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    ;\r\n                    game.nowTime = new Time;\r\n                    game.nowTime.effectActived.push({\r\n                        card: ActivedEffect.card,\r\n                        eff: ActivedEffect\r\n                    });\r\n                    return [4 /*yield*/, animationChainEffectActivate(ActivedEffect)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ActivedEffect.whenActive(ActivedEffect)];\r\n                case 4:\r\n                    _a.sent();\r\n                    game.timeArray.push(__assign({}, game.nowTime));\r\n                    game.chain.push(ActivedEffect);\r\n                    return [4 /*yield*/, TriggerQuickeEffect()];\r\n                case 5:\r\n                    _a.sent();\r\n                    cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 魔法罠セット\r\n     */\r\n    var SpellTrapSet = {\r\n        fromHAND: function (card) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        cardContainer.mouseEnabled = false;\r\n                        return [4 /*yield*/, moveCard.HAND.toBOARD(card, \"SET\")];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // game.timeArray.push({...game.nowTime});\r\n                        return [4 /*yield*/, TriggerQuickeEffect()];\r\n                    case 2:\r\n                        // game.timeArray.push({...game.nowTime});\r\n                        _a.sent();\r\n                        cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); },\r\n    };\r\n    /**\r\n     * 特殊召喚する\r\n     */\r\n    var SpecialSummon = {\r\n        fromGY: function (cardArray, posiSelect, position) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_7, cardArray_2, cardArray_2_1, card, e_5_1;\r\n                            var e_5, _a;\r\n                            var _this = this;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_7 = function (card) {\r\n                                            var posi;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        if (!(card instanceof MonsterCard)) return [3 /*break*/, 3];\r\n                                                        return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                                                return __generator(this, function (_a) {\r\n                                                                    switch (_a.label) {\r\n                                                                        case 0:\r\n                                                                            if (!posiSelect) return [3 /*break*/, 2];\r\n                                                                            return [4 /*yield*/, OpenPositionWindow(card)];\r\n                                                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                                                        case 2: return [2 /*return*/, position];\r\n                                                                        case 3:\r\n                                                                            ;\r\n                                                                            return [2 /*return*/];\r\n                                                                    }\r\n                                                                });\r\n                                                            }); })()];\r\n                                                    case 1:\r\n                                                        posi = _a.sent();\r\n                                                        return [4 /*yield*/, moveCard.GY.toBOARD(card, posi)];\r\n                                                    case 2:\r\n                                                        _a.sent();\r\n                                                        card.position = posi;\r\n                                                        console.log(\"SS \" + card.cardName + \" fromGY \" + posi);\r\n                                                        console.log(\"location \" + card.location);\r\n                                                        game.nowTime.summon.push({\r\n                                                            type: \"SS\",\r\n                                                            card: card,\r\n                                                            position: posi,\r\n                                                            face: card.face,\r\n                                                            from: \"GY\"\r\n                                                        });\r\n                                                        game.nowTime.move.push({\r\n                                                            card: card,\r\n                                                            from: \"GY\",\r\n                                                            to: \"MO\"\r\n                                                        });\r\n                                                        _a.label = 3;\r\n                                                    case 3:\r\n                                                        ;\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        cardArray_2 = __values(cardArray), cardArray_2_1 = cardArray_2.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!cardArray_2_1.done) return [3 /*break*/, 5];\r\n                                        card = cardArray_2_1.value;\r\n                                        return [5 /*yield**/, _loop_7(card)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        cardArray_2_1 = cardArray_2.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_5_1 = _b.sent();\r\n                                        e_5 = { error: e_5_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (cardArray_2_1 && !cardArray_2_1.done && (_a = cardArray_2.return)) _a.call(cardArray_2);\r\n                                        }\r\n                                        finally { if (e_5) throw e_5.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        console.log(game.nowTime);\r\n                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        game.timeArray.push(game.nowTime);\r\n                        if (!(game.chain.length == 0)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, TriggerQuickeEffect()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        game.timeArray.map(function (time) { return console.log(time); });\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        ;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); },\r\n        fromDD: function (cardArray, posiSelect, position) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_8, cardArray_3, cardArray_3_1, card, e_6_1;\r\n                            var e_6, _a;\r\n                            var _this = this;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_8 = function (card) {\r\n                                            var posi;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        if (!(card instanceof MonsterCard)) return [3 /*break*/, 3];\r\n                                                        return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                                                return __generator(this, function (_a) {\r\n                                                                    switch (_a.label) {\r\n                                                                        case 0:\r\n                                                                            if (!posiSelect) return [3 /*break*/, 2];\r\n                                                                            return [4 /*yield*/, OpenPositionWindow(card)];\r\n                                                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                                                        case 2: return [2 /*return*/, position];\r\n                                                                        case 3:\r\n                                                                            ;\r\n                                                                            return [2 /*return*/];\r\n                                                                    }\r\n                                                                });\r\n                                                            }); })()];\r\n                                                    case 1:\r\n                                                        posi = _a.sent();\r\n                                                        return [4 /*yield*/, moveCard.DD.toBOARD(card, posi)];\r\n                                                    case 2:\r\n                                                        _a.sent();\r\n                                                        card.position = posi;\r\n                                                        console.log(\"SS \" + card.cardName + \" fromDD \" + posi);\r\n                                                        console.log(\"location \" + card.location);\r\n                                                        game.nowTime.summon.push({\r\n                                                            type: \"SS\",\r\n                                                            card: card,\r\n                                                            position: posi,\r\n                                                            face: card.face,\r\n                                                            from: \"DD\"\r\n                                                        });\r\n                                                        game.nowTime.move.push({\r\n                                                            card: card,\r\n                                                            from: \"DD\",\r\n                                                            to: \"MO\"\r\n                                                        });\r\n                                                        _a.label = 3;\r\n                                                    case 3:\r\n                                                        ;\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        cardArray_3 = __values(cardArray), cardArray_3_1 = cardArray_3.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!cardArray_3_1.done) return [3 /*break*/, 5];\r\n                                        card = cardArray_3_1.value;\r\n                                        return [5 /*yield**/, _loop_8(card)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        cardArray_3_1 = cardArray_3.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_6_1 = _b.sent();\r\n                                        e_6 = { error: e_6_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (cardArray_3_1 && !cardArray_3_1.done && (_a = cardArray_3.return)) _a.call(cardArray_3);\r\n                                        }\r\n                                        finally { if (e_6) throw e_6.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        console.log(game.nowTime);\r\n                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        game.timeArray.push(game.nowTime);\r\n                        if (!(game.chain.length == 0)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, TriggerQuickeEffect()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        game.timeArray.map(function (time) { return console.log(time); });\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        ;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); },\r\n        fromDECK: function (cardArray, posiSelect, position) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_9, cardArray_4, cardArray_4_1, card, e_7_1;\r\n                            var e_7, _a;\r\n                            var _this = this;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_9 = function (card) {\r\n                                            var posi;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        if (!(card instanceof MonsterCard)) return [3 /*break*/, 3];\r\n                                                        return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                                                return __generator(this, function (_a) {\r\n                                                                    switch (_a.label) {\r\n                                                                        case 0:\r\n                                                                            if (!posiSelect) return [3 /*break*/, 2];\r\n                                                                            return [4 /*yield*/, OpenPositionWindow(card)];\r\n                                                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                                                        case 2: return [2 /*return*/, position];\r\n                                                                        case 3:\r\n                                                                            ;\r\n                                                                            return [2 /*return*/];\r\n                                                                    }\r\n                                                                });\r\n                                                            }); })()];\r\n                                                    case 1:\r\n                                                        posi = _a.sent();\r\n                                                        return [4 /*yield*/, moveCard.DECK.toBOARD(card, posi)];\r\n                                                    case 2:\r\n                                                        _a.sent();\r\n                                                        card.position = posi;\r\n                                                        console.log(\"SS \" + card.cardName + \" fromDECK \" + posi);\r\n                                                        console.log(\"location \" + card.location);\r\n                                                        game.nowTime.summon.push({\r\n                                                            type: \"SS\",\r\n                                                            card: card,\r\n                                                            position: posi,\r\n                                                            face: card.face,\r\n                                                            from: \"DECK\"\r\n                                                        });\r\n                                                        game.nowTime.move.push({\r\n                                                            card: card,\r\n                                                            from: \"DECK\",\r\n                                                            to: \"MO\"\r\n                                                        });\r\n                                                        _a.label = 3;\r\n                                                    case 3:\r\n                                                        ;\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        cardArray_4 = __values(cardArray), cardArray_4_1 = cardArray_4.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!cardArray_4_1.done) return [3 /*break*/, 5];\r\n                                        card = cardArray_4_1.value;\r\n                                        return [5 /*yield**/, _loop_9(card)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        cardArray_4_1 = cardArray_4.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_7_1 = _b.sent();\r\n                                        e_7 = { error: e_7_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (cardArray_4_1 && !cardArray_4_1.done && (_a = cardArray_4.return)) _a.call(cardArray_4);\r\n                                        }\r\n                                        finally { if (e_7) throw e_7.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        console.log(game.nowTime);\r\n                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        game.timeArray.push(game.nowTime);\r\n                        if (!(game.chain.length == 0)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, TriggerQuickeEffect()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        game.timeArray.map(function (time) { return console.log(time); });\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        ;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); },\r\n        fromHAND: function (cardArray, posiSelect, position) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_10, cardArray_5, cardArray_5_1, card, e_8_1;\r\n                            var e_8, _a;\r\n                            var _this = this;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_10 = function (card) {\r\n                                            var posi;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        if (!(card instanceof MonsterCard)) return [3 /*break*/, 3];\r\n                                                        return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                                                return __generator(this, function (_a) {\r\n                                                                    switch (_a.label) {\r\n                                                                        case 0:\r\n                                                                            if (!posiSelect) return [3 /*break*/, 2];\r\n                                                                            return [4 /*yield*/, OpenPositionWindow(card)];\r\n                                                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                                                        case 2: return [2 /*return*/, position];\r\n                                                                        case 3:\r\n                                                                            ;\r\n                                                                            return [2 /*return*/];\r\n                                                                    }\r\n                                                                });\r\n                                                            }); })()];\r\n                                                    case 1:\r\n                                                        posi = _a.sent();\r\n                                                        return [4 /*yield*/, moveCard.HAND.toBOARD(card, posi)];\r\n                                                    case 2:\r\n                                                        _a.sent();\r\n                                                        card.position = posi;\r\n                                                        console.log(\"SS \" + card.cardName + \" fromHAND \" + posi);\r\n                                                        console.log(\"location \" + card.location);\r\n                                                        game.nowTime.summon.push({\r\n                                                            type: \"SS\",\r\n                                                            card: card,\r\n                                                            position: posi,\r\n                                                            face: card.face,\r\n                                                            from: \"HAND\"\r\n                                                        });\r\n                                                        game.nowTime.move.push({\r\n                                                            card: card,\r\n                                                            from: \"HAND\",\r\n                                                            to: \"MO\"\r\n                                                        });\r\n                                                        _a.label = 3;\r\n                                                    case 3:\r\n                                                        ;\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        cardArray_5 = __values(cardArray), cardArray_5_1 = cardArray_5.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!cardArray_5_1.done) return [3 /*break*/, 5];\r\n                                        card = cardArray_5_1.value;\r\n                                        return [5 /*yield**/, _loop_10(card)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        cardArray_5_1 = cardArray_5.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_8_1 = _b.sent();\r\n                                        e_8 = { error: e_8_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (cardArray_5_1 && !cardArray_5_1.done && (_a = cardArray_5.return)) _a.call(cardArray_5);\r\n                                        }\r\n                                        finally { if (e_8) throw e_8.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        console.log(game.nowTime);\r\n                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        game.timeArray.push(game.nowTime);\r\n                        if (!(game.chain.length == 0)) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, TriggerQuickeEffect()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        game.timeArray.map(function (time) { return console.log(time); });\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        ;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); },\r\n    };\r\n    /**\r\n     * 通常召喚する\r\n     */\r\n    var normalSummon = function (card, position) { return __awaiter(_this, void 0, void 0, function () {\r\n        var numberToRelease, cardlist_1, tmpCard, tmpEff_1;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    numberToRelease = (function () {\r\n                        if (5 <= card.level && card.level <= 6) {\r\n                            return 1;\r\n                        }\r\n                        else if (7 <= card.level) {\r\n                            return 2;\r\n                        }\r\n                        else {\r\n                            return 0;\r\n                        }\r\n                        ;\r\n                    })();\r\n                    if (!(5 <= card.level)) return [3 /*break*/, 2];\r\n                    cardlist_1 = genCardArray({ location: [\"MO\"] });\r\n                    tmpCard = new Card;\r\n                    tmpEff_1 = new effect(tmpCard);\r\n                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _a = tmpEff_1;\r\n                                        return [4 /*yield*/, openCardListWindow.select(cardlist_1, numberToRelease, numberToRelease, tmpEff_1, \"リリースするモンスターを\" + numberToRelease + \"体選択してください\")];\r\n                                    case 1:\r\n                                        _a.targetCard = _b.sent();\r\n                                        console.log(\"Release \" + tmpEff_1.targetCard.map(function (_a) {\r\n                                            var cardName = _a.cardName;\r\n                                            return cardName;\r\n                                        }));\r\n                                        game.nowTime = new Time;\r\n                                        return [4 /*yield*/, release(tmpEff_1.targetCard, \"ADVANCE\")];\r\n                                    case 2:\r\n                                        _b.sent();\r\n                                        game.timeArray.push(__assign({}, game.nowTime));\r\n                                        resolve();\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    ;\r\n                    game.normalSummon = false;\r\n                    game.countNS += 1;\r\n                    card.NSed = true;\r\n                    if (position == \"ATK\") {\r\n                        card.position = position;\r\n                    }\r\n                    ;\r\n                    if (position == \"SET\") {\r\n                        card.position = \"DEF\";\r\n                    }\r\n                    ;\r\n                    game.nowTime = new Time;\r\n                    return [4 /*yield*/, moveCard.HAND.toBOARD(card, position)];\r\n                case 3:\r\n                    _a.sent();\r\n                    game.nowTime.summon.push({\r\n                        card: card,\r\n                        type: \"NS\",\r\n                        position: card.position,\r\n                        face: card.face,\r\n                        from: \"HAND\",\r\n                    });\r\n                    game.nowTime.move.push({\r\n                        card: card,\r\n                        from: \"HAND\",\r\n                        to: \"MO\"\r\n                    });\r\n                    game.timeArray.push(__assign({}, game.nowTime));\r\n                    console.log(\"NS \" + position);\r\n                    console.log(\"location \" + card.location);\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, TriggerQuickeEffect()];\r\n                case 5:\r\n                    _a.sent();\r\n                    cardContainer.mouseEnabled = !(game.liblaryOut);\r\n                    game.timeArray.map(function (time) { return console.log(time); });\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 通常召喚可能か判定する\r\n     */\r\n    var JudgeNS = function (card) {\r\n        var countMonster = genCardArray({ location: [\"MO\"] }).length;\r\n        var NSbool = (card.canNS && game.normalSummon);\r\n        if (card.level <= 4) {\r\n            if (countMonster == 5) {\r\n                return false;\r\n            }\r\n            else {\r\n                return (NSbool);\r\n            }\r\n            ;\r\n        }\r\n        else if (5 <= card.level && card.level <= 6) {\r\n            return (NSbool && 1 <= countMonster);\r\n        }\r\n        else {\r\n            return (NSbool && 2 <= countMonster);\r\n        }\r\n        ;\r\n    };\r\n    /**\r\n     * 魔法罠のカード発動場所判定\r\n     */\r\n    var JudgeSpellTrapActivateLoc = function (card) {\r\n        return card.location == \"HAND\" || (card.location == \"ST\" && card.face == \"DOWN\");\r\n    };\r\n    /**\r\n     * ライフコストを払う\r\n     */\r\n    var payLife = function (cost) { return __awaiter(_this, void 0, void 0, function () {\r\n        var LPtext;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!game.payLPcost) {\r\n                        return [2 /*return*/];\r\n                    }\r\n                    ;\r\n                    LPtext = new createjs.Text(\"-\" + cost.toFixed(), \"80px serif\", \"black\");\r\n                    LPtext.textBaseline = \"middle\";\r\n                    LPtext.textAlign = \"center\";\r\n                    LPtext.x = game.centerGrid.x;\r\n                    LPtext.y = game.centerGrid.y;\r\n                    mainstage.addChild(LPtext);\r\n                    return [4 /*yield*/, timeout(500)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                createjs.Tween.get(LPtext)\r\n                                    .to({ alpha: 0 }, 500)\r\n                                    .call(function () { resolve(); })\r\n                                    .call(function () { mainstage.removeChild(LPtext); });\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); })];\r\n                case 2:\r\n                    _a.sent();\r\n                    createjs.Tween.get(game)\r\n                        .to({ myLifePoint: game.myLifePoint - cost }, 1000, createjs.Ease.cubicOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * ダメージを与える\r\n     */\r\n    var dealDamage = function (point) { return __awaiter(_this, void 0, void 0, function () {\r\n        var LPtext;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    LPtext = genCenterText(\"-\" + point.toFixed());\r\n                    LPtext.color = \"red\";\r\n                    LPtext.x = game.centerGrid.x;\r\n                    LPtext.y = game.centerGrid.y;\r\n                    mainstage.addChild(LPtext);\r\n                    return [4 /*yield*/, timeout(500)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                createjs.Tween.get(LPtext)\r\n                                    .to({ alpha: 0 }, 500)\r\n                                    .call(function () { resolve(); })\r\n                                    .call(function () { mainstage.removeChild(LPtext); });\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); })];\r\n                case 2:\r\n                    _a.sent();\r\n                    createjs.Tween.get(game)\r\n                        .to({ enemyLifePoint: game.enemyLifePoint - point }, 1000, createjs.Ease.cubicOut);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 手札を捨てる\r\n     */\r\n    var discard = function (cardArray) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var _a, _b, card, e_9_1;\r\n                        var e_9, _c;\r\n                        return __generator(this, function (_d) {\r\n                            switch (_d.label) {\r\n                                case 0:\r\n                                    _d.trys.push([0, 5, 6, 7]);\r\n                                    _a = __values(__spread(cardArray).reverse()), _b = _a.next();\r\n                                    _d.label = 1;\r\n                                case 1:\r\n                                    if (!!_b.done) return [3 /*break*/, 4];\r\n                                    card = _b.value;\r\n                                    return [4 /*yield*/, moveCard.HAND.toGY(card)];\r\n                                case 2:\r\n                                    _d.sent();\r\n                                    game.nowTime.discard.push({\r\n                                        card: card\r\n                                    });\r\n                                    game.nowTime.move.push({\r\n                                        card: card,\r\n                                        from: \"HAND\",\r\n                                        to: \"GY\"\r\n                                    });\r\n                                    _d.label = 3;\r\n                                case 3:\r\n                                    _b = _a.next();\r\n                                    return [3 /*break*/, 1];\r\n                                case 4: return [3 /*break*/, 7];\r\n                                case 5:\r\n                                    e_9_1 = _d.sent();\r\n                                    e_9 = { error: e_9_1 };\r\n                                    return [3 /*break*/, 7];\r\n                                case 6:\r\n                                    try {\r\n                                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\r\n                                    }\r\n                                    finally { if (e_9) throw e_9.error; }\r\n                                    return [7 /*endfinally*/];\r\n                                case 7:\r\n                                    ;\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 除外する\r\n     */\r\n    var vanish = function (cardArray, by) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var _loop_11, cardArray_6, cardArray_6_1, card, e_10_1;\r\n                        var e_10, _a;\r\n                        return __generator(this, function (_b) {\r\n                            switch (_b.label) {\r\n                                case 0:\r\n                                    _loop_11 = function (card) {\r\n                                        var from;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    card.canVanish = false;\r\n                                                    card.canDestroy = false;\r\n                                                    from = (function () {\r\n                                                        if ([\"MO\", \"ST\", \"FIELD\"].includes(card.location)) {\r\n                                                            return \"BOARD\";\r\n                                                        }\r\n                                                        else {\r\n                                                            return card.location;\r\n                                                        }\r\n                                                    })();\r\n                                                    game.nowTime.vanish.push({\r\n                                                        card: card,\r\n                                                        by: by\r\n                                                    });\r\n                                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 3];\r\n                                                    game.nowTime.leaveBoard.push({\r\n                                                        card: card\r\n                                                    });\r\n                                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                                case 2:\r\n                                                    _a.sent();\r\n                                                    _a.label = 3;\r\n                                                case 3:\r\n                                                    ;\r\n                                                    game.nowTime.move.push({\r\n                                                        card: card,\r\n                                                        from: from,\r\n                                                        to: \"DD\"\r\n                                                    });\r\n                                                    return [4 /*yield*/, moveCard[from].toDD(card)];\r\n                                                case 4:\r\n                                                    _a.sent();\r\n                                                    console.log(\"vanish \" + card.cardName + \" by \" + by);\r\n                                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                                case 5:\r\n                                                    _a.sent();\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    };\r\n                                    _b.label = 1;\r\n                                case 1:\r\n                                    _b.trys.push([1, 6, 7, 8]);\r\n                                    cardArray_6 = __values(cardArray), cardArray_6_1 = cardArray_6.next();\r\n                                    _b.label = 2;\r\n                                case 2:\r\n                                    if (!!cardArray_6_1.done) return [3 /*break*/, 5];\r\n                                    card = cardArray_6_1.value;\r\n                                    return [5 /*yield**/, _loop_11(card)];\r\n                                case 3:\r\n                                    _b.sent();\r\n                                    _b.label = 4;\r\n                                case 4:\r\n                                    cardArray_6_1 = cardArray_6.next();\r\n                                    return [3 /*break*/, 2];\r\n                                case 5: return [3 /*break*/, 8];\r\n                                case 6:\r\n                                    e_10_1 = _b.sent();\r\n                                    e_10 = { error: e_10_1 };\r\n                                    return [3 /*break*/, 8];\r\n                                case 7:\r\n                                    try {\r\n                                        if (cardArray_6_1 && !cardArray_6_1.done && (_a = cardArray_6.return)) _a.call(cardArray_6);\r\n                                    }\r\n                                    finally { if (e_10) throw e_10.error; }\r\n                                    return [7 /*endfinally*/];\r\n                                case 8:\r\n                                    ;\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 2:\r\n                    _a.sent();\r\n                    cardArray.forEach(function (card) {\r\n                        card.canVanish = true;\r\n                        card.canDestroy = true;\r\n                    });\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * デッキトップに置く\r\n     */\r\n    var returnDecktop = function (cardArray) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var _loop_12, cardArray_7, cardArray_7_1, card, e_11_1;\r\n                        var e_11, _a;\r\n                        return __generator(this, function (_b) {\r\n                            switch (_b.label) {\r\n                                case 0:\r\n                                    _loop_12 = function (card) {\r\n                                        var from;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    from = (function () {\r\n                                                        if ([\"MO\", \"ST\", \"FIELD\"].includes(card.location)) {\r\n                                                            return \"BOARD\";\r\n                                                        }\r\n                                                        else {\r\n                                                            return card.location;\r\n                                                        }\r\n                                                    })();\r\n                                                    game.nowTime.move.push({\r\n                                                        card: card,\r\n                                                        from: from,\r\n                                                        to: \"DECK\"\r\n                                                    });\r\n                                                    if (!(moveCard[from].toDECK instanceof Function)) return [3 /*break*/, 2];\r\n                                                    return [4 /*yield*/, moveCard[from].toDECK(card)];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    _a.label = 2;\r\n                                                case 2:\r\n                                                    ;\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    };\r\n                                    _b.label = 1;\r\n                                case 1:\r\n                                    _b.trys.push([1, 6, 7, 8]);\r\n                                    cardArray_7 = __values(cardArray), cardArray_7_1 = cardArray_7.next();\r\n                                    _b.label = 2;\r\n                                case 2:\r\n                                    if (!!cardArray_7_1.done) return [3 /*break*/, 5];\r\n                                    card = cardArray_7_1.value;\r\n                                    return [5 /*yield**/, _loop_12(card)];\r\n                                case 3:\r\n                                    _b.sent();\r\n                                    _b.label = 4;\r\n                                case 4:\r\n                                    cardArray_7_1 = cardArray_7.next();\r\n                                    return [3 /*break*/, 2];\r\n                                case 5: return [3 /*break*/, 8];\r\n                                case 6:\r\n                                    e_11_1 = _b.sent();\r\n                                    e_11 = { error: e_11_1 };\r\n                                    return [3 /*break*/, 8];\r\n                                case 7:\r\n                                    try {\r\n                                        if (cardArray_7_1 && !cardArray_7_1.done && (_a = cardArray_7.return)) _a.call(cardArray_7);\r\n                                    }\r\n                                    finally { if (e_11) throw e_11.error; }\r\n                                    return [7 /*endfinally*/];\r\n                                case 8:\r\n                                    ;\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * バウンス\r\n     */\r\n    var bounce = function (cardArray, by) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var cardArray_8, cardArray_8_1, card, e_12_1;\r\n                        var e_12, _a;\r\n                        return __generator(this, function (_b) {\r\n                            switch (_b.label) {\r\n                                case 0:\r\n                                    _b.trys.push([0, 10, 11, 12]);\r\n                                    cardArray_8 = __values(cardArray), cardArray_8_1 = cardArray_8.next();\r\n                                    _b.label = 1;\r\n                                case 1:\r\n                                    if (!!cardArray_8_1.done) return [3 /*break*/, 9];\r\n                                    card = cardArray_8_1.value;\r\n                                    game.nowTime.bounce.push({\r\n                                        card: card,\r\n                                        by: by\r\n                                    });\r\n                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                case 2:\r\n                                    _b.sent();\r\n                                    if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 4];\r\n                                    game.nowTime.leaveBoard.push({\r\n                                        card: card\r\n                                    });\r\n                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                case 3:\r\n                                    _b.sent();\r\n                                    _b.label = 4;\r\n                                case 4:\r\n                                    ;\r\n                                    if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 7];\r\n                                    game.nowTime.move.push({\r\n                                        card: card,\r\n                                        from: \"BOARD\",\r\n                                        to: \"HAND\"\r\n                                    });\r\n                                    return [4 /*yield*/, moveCard.BOARD.toHAND(card)];\r\n                                case 5:\r\n                                    _b.sent();\r\n                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                case 6:\r\n                                    _b.sent();\r\n                                    _b.label = 7;\r\n                                case 7:\r\n                                    ;\r\n                                    _b.label = 8;\r\n                                case 8:\r\n                                    cardArray_8_1 = cardArray_8.next();\r\n                                    return [3 /*break*/, 1];\r\n                                case 9: return [3 /*break*/, 12];\r\n                                case 10:\r\n                                    e_12_1 = _b.sent();\r\n                                    e_12 = { error: e_12_1 };\r\n                                    return [3 /*break*/, 12];\r\n                                case 11:\r\n                                    try {\r\n                                        if (cardArray_8_1 && !cardArray_8_1.done && (_a = cardArray_8.return)) _a.call(cardArray_8);\r\n                                    }\r\n                                    finally { if (e_12) throw e_12.error; }\r\n                                    return [7 /*endfinally*/];\r\n                                case 12:\r\n                                    ;\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * リリースする\r\n     */\r\n    var release = function (cardArray, by) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var cardArray_9, cardArray_9_1, card, e_13_1;\r\n                        var e_13, _a;\r\n                        return __generator(this, function (_b) {\r\n                            switch (_b.label) {\r\n                                case 0:\r\n                                    _b.trys.push([0, 10, 11, 12]);\r\n                                    cardArray_9 = __values(cardArray), cardArray_9_1 = cardArray_9.next();\r\n                                    _b.label = 1;\r\n                                case 1:\r\n                                    if (!!cardArray_9_1.done) return [3 /*break*/, 9];\r\n                                    card = cardArray_9_1.value;\r\n                                    card.canDestroy = false;\r\n                                    game.nowTime.release.push({\r\n                                        card: card,\r\n                                        by: by\r\n                                    });\r\n                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                case 2:\r\n                                    _b.sent();\r\n                                    if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 4];\r\n                                    game.nowTime.leaveBoard.push({\r\n                                        card: card\r\n                                    });\r\n                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                case 3:\r\n                                    _b.sent();\r\n                                    _b.label = 4;\r\n                                case 4:\r\n                                    ;\r\n                                    if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 7];\r\n                                    return [4 /*yield*/, moveCard.BOARD.toGY(card)];\r\n                                case 5:\r\n                                    _b.sent();\r\n                                    game.nowTime.move.push({\r\n                                        card: card,\r\n                                        from: \"BOARD\",\r\n                                        to: \"GY\"\r\n                                    });\r\n                                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                case 6:\r\n                                    _b.sent();\r\n                                    _b.label = 7;\r\n                                case 7:\r\n                                    ;\r\n                                    _b.label = 8;\r\n                                case 8:\r\n                                    cardArray_9_1 = cardArray_9.next();\r\n                                    return [3 /*break*/, 1];\r\n                                case 9: return [3 /*break*/, 12];\r\n                                case 10:\r\n                                    e_13_1 = _b.sent();\r\n                                    e_13 = { error: e_13_1 };\r\n                                    return [3 /*break*/, 12];\r\n                                case 11:\r\n                                    try {\r\n                                        if (cardArray_9_1 && !cardArray_9_1.done && (_a = cardArray_9.return)) _a.call(cardArray_9);\r\n                                    }\r\n                                    finally { if (e_13) throw e_13.error; }\r\n                                    return [7 /*endfinally*/];\r\n                                case 12:\r\n                                    ;\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 2:\r\n                    _a.sent();\r\n                    cardArray.forEach(function (card) {\r\n                        card.canDestroy = true;\r\n                    });\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 破壊する\r\n     */\r\n    var destroy = function (cardArray, by) { return __awaiter(_this, void 0, void 0, function () {\r\n        var destroyAnimation;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    destroyAnimation = function (card) {\r\n                        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var destroyImg;\r\n                            var _this = this;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        destroyImg = new createjs.Bitmap(\"destroy.png\");\r\n                                        destroyImg.setTransform(card.imgContainer.x, card.imgContainer.y, 0, 0);\r\n                                        destroyImg.regX = 64;\r\n                                        destroyImg.regY = 64;\r\n                                        destroyImg.mouseEnabled = false;\r\n                                        destroyImg.alpha = 0;\r\n                                        mainstage.addChild(destroyImg);\r\n                                        return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                                return __generator(this, function (_a) {\r\n                                                    createjs.Tween.get(destroyImg)\r\n                                                        .to({ alpha: 1, scaleX: 2, scaleY: 2 }, 250)\r\n                                                        .to({ alpha: 0 }, 250)\r\n                                                        .wait(250)\r\n                                                        .call(function () { mainstage.removeChild(destroyImg); })\r\n                                                        .call(function () { resolve(); });\r\n                                                    return [2 /*return*/];\r\n                                                });\r\n                                            }); })];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        resolve();\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); });\r\n                    };\r\n                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var cardArray_10, cardArray_10_1, card, e_14_1;\r\n                            var e_14, _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _b.trys.push([0, 12, 13, 14]);\r\n                                        cardArray_10 = __values(cardArray), cardArray_10_1 = cardArray_10.next();\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        if (!!cardArray_10_1.done) return [3 /*break*/, 11];\r\n                                        card = cardArray_10_1.value;\r\n                                        card.canDestroy = false;\r\n                                        game.nowTime.destroy.push({\r\n                                            card: card,\r\n                                            by: by\r\n                                        });\r\n                                        if (by == \"BATTLE\" || by == \"EFFECT\") {\r\n                                            console.log(\"destroy \" + card.cardName + \" by \" + by);\r\n                                        }\r\n                                        else if (by == \"RULE\") {\r\n                                            console.log(\"destroy \" + card.cardName + \" lost equip target\");\r\n                                        }\r\n                                        ;\r\n                                        if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 4];\r\n                                        return [4 /*yield*/, destroyAnimation(card)];\r\n                                    case 2:\r\n                                        _b.sent();\r\n                                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        ;\r\n                                        if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 6];\r\n                                        game.nowTime.leaveBoard.push({\r\n                                            card: card\r\n                                        });\r\n                                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                    case 5:\r\n                                        _b.sent();\r\n                                        _b.label = 6;\r\n                                    case 6:\r\n                                        ;\r\n                                        if (![\"ST\", \"MO\", \"FIELD\"].includes(card.location)) return [3 /*break*/, 9];\r\n                                        return [4 /*yield*/, moveCard.BOARD.toGY(card)];\r\n                                    case 7:\r\n                                        _b.sent();\r\n                                        game.nowTime.move.push({\r\n                                            card: card,\r\n                                            from: \"BOARD\",\r\n                                            to: \"GY\"\r\n                                        });\r\n                                        return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                                    case 8:\r\n                                        _b.sent();\r\n                                        _b.label = 9;\r\n                                    case 9:\r\n                                        ;\r\n                                        _b.label = 10;\r\n                                    case 10:\r\n                                        cardArray_10_1 = cardArray_10.next();\r\n                                        return [3 /*break*/, 1];\r\n                                    case 11: return [3 /*break*/, 14];\r\n                                    case 12:\r\n                                        e_14_1 = _b.sent();\r\n                                        e_14 = { error: e_14_1 };\r\n                                        return [3 /*break*/, 14];\r\n                                    case 13:\r\n                                        try {\r\n                                            if (cardArray_10_1 && !cardArray_10_1.done && (_a = cardArray_10.return)) _a.call(cardArray_10);\r\n                                        }\r\n                                        finally { if (e_14) throw e_14.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 14:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                case 2:\r\n                    _a.sent();\r\n                    cardArray.forEach(function (card) {\r\n                        card.canDestroy = true;\r\n                    });\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * 装備マーク生成\r\n     */\r\n    var genEquipImg = function (card) {\r\n        var equipImg = new createjs.Bitmap(\"equip.png\");\r\n        equipImg.setTransform(card.imgContainer.x, card.imgContainer.y, 0.5, 0.5);\r\n        equipImg.regX = 64;\r\n        equipImg.regY = 64;\r\n        equipImg.mouseEnabled = false;\r\n        return equipImg;\r\n    };\r\n    /**\r\n     * 装備する\r\n     */\r\n    var Equip = function (card, eff) { return __awaiter(_this, void 0, void 0, function () {\r\n        var targetCard;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            card.peggingTarget = eff.targetCard;\r\n            targetCard = card.peggingTarget[0];\r\n            if (targetCard instanceof MonsterCard) {\r\n                targetCard.equip.push(card);\r\n            }\r\n            ;\r\n            return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    function handleEquipSpellMover(event) {\r\n                        if (card.peggingTarget.length > 0) {\r\n                            mainstage.addChild(equipMarkSPELL);\r\n                            mainstage.addChild(equipMarkMON);\r\n                        }\r\n                        ;\r\n                    }\r\n                    function handleEquipMout(event) {\r\n                        if (card.peggingTarget.length > 0) {\r\n                            mainstage.removeChild(equipMarkSPELL);\r\n                            mainstage.removeChild(equipMarkMON);\r\n                        }\r\n                        ;\r\n                    }\r\n                    var equipMarkSPELL, equipMarkMON;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    var equipImg;\r\n                                    return __generator(this, function (_a) {\r\n                                        equipImg = genEquipImg(card);\r\n                                        equipImg.alpha = 0;\r\n                                        mainstage.addChild(equipImg);\r\n                                        createjs.Tween.get(equipImg)\r\n                                            .to({ alpha: 1, scaleX: 1, scaleY: 1 }, 250)\r\n                                            .to({ x: targetCard.imgContainer.x, y: targetCard.imgContainer.y }, 500)\r\n                                            .to({ scaleX: 0.7, scaleY: 0.7 }, 250)\r\n                                            .wait(250)\r\n                                            .call(function () { mainstage.removeChild(equipImg); })\r\n                                            .call(function () { resolve(); });\r\n                                        return [2 /*return*/];\r\n                                    });\r\n                                }); })];\r\n                            case 1:\r\n                                _a.sent();\r\n                                equipMarkSPELL = genEquipImg(card);\r\n                                equipMarkMON = genEquipImg(targetCard);\r\n                                card.imgContainer.addEventListener(\"mouseover\", handleEquipSpellMover);\r\n                                ;\r\n                                card.imgContainer.addEventListener(\"mouseout\", handleEquipMout);\r\n                                ;\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); })];\r\n        });\r\n    }); };\r\n    /**\r\n     * デッキをシャッフルする\r\n     */\r\n    function deckShuffle() {\r\n        if (game.DECK.length <= 1) {\r\n            return false;\r\n        }\r\n        ;\r\n        game.DECK = shuffle(game.DECK);\r\n        var PromiseArray = [];\r\n        game.DECK.map(function (card, index, array) {\r\n            var twPromise = function () {\r\n                return new Promise(function (resolve, reject) {\r\n                    var orgX = card.imgContainer.x;\r\n                    createjs.Tween.get(card.imgContainer)\r\n                        .wait(index * (100 / array.length))\r\n                        .to({ x: orgX + 100 - (200 * (index % 2)) }, 100)\r\n                        .to({ x: orgX - 100 + (200 * (index % 2)) }, 200)\r\n                        .to({ x: game.displayOrder.deck[0][0] + index * 0.5, y: game.displayOrder.deck[0][1] - index * 0.5 }, 100)\r\n                        .call(function () { cardContainer.setChildIndex(card.imgContainer, cardContainer.numChildren - array.length + index); })\r\n                        .call(function () { resolve(); });\r\n                });\r\n            };\r\n            PromiseArray.push(twPromise());\r\n        });\r\n        return Promise.all(PromiseArray);\r\n    }\r\n    ;\r\n    /**\r\n     * 表裏反転\r\n     */\r\n    var cardFlip = function (card) {\r\n        var front = createjs.Tween.get(card.frontImg);\r\n        var back = createjs.Tween.get(card.cardBackImg);\r\n        var close = function (target) {\r\n            return new Promise(function (resolve, reject) {\r\n                target.to({ scaleX: 0.0 }, 180, createjs.Ease.cubicOut)\r\n                    .call(function () { resolve(); });\r\n            });\r\n        };\r\n        var open = function (target) {\r\n            return new Promise(function (resolve, reject) {\r\n                target.to({ scaleX: 1.0 }, 320, createjs.Ease.cubicIn)\r\n                    .call(function () { resolve(); });\r\n            });\r\n        };\r\n        var PromiseArray = function () {\r\n            if (card.face == \"UP\") {\r\n                card.face = \"DOWN\";\r\n                return [close(front), open(back)];\r\n            }\r\n            ;\r\n            if (card.face == \"DOWN\") {\r\n                card.face = \"UP\";\r\n                return [close(back), open(front)];\r\n            }\r\n            ;\r\n        };\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all(PromiseArray())];\r\n                    case 1:\r\n                        _a.sent();\r\n                        resolve();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * gamestart時のデッキセットアニメーション\r\n     */\r\n    var decksetAnimation = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        var randomIndex;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    randomIndex = (function () {\r\n                        var _a;\r\n                        var defaultArray = __spread(Array(40).keys());\r\n                        for (var i = defaultArray.length - 1; i >= 0; i--) {\r\n                            var j = Math.floor(Math.random() * (i + 1));\r\n                            _a = __read([defaultArray[j], defaultArray[i]], 2), defaultArray[i] = _a[0], defaultArray[j] = _a[1];\r\n                        }\r\n                        ;\r\n                        return defaultArray;\r\n                    })();\r\n                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_13, randomIndex_1, randomIndex_1_1, i, e_15_1;\r\n                            var e_15, _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_13 = function (i) {\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0: return [4 /*yield*/, LocationSetting(game.defaultDeck[i], \"DECK\")];\r\n                                                    case 1:\r\n                                                        _a.sent();\r\n                                                        new Promise(function (resolve, reject) {\r\n                                                            if (game.defaultDeck[i].face == \"UP\") {\r\n                                                                cardFlip(game.defaultDeck[i]);\r\n                                                            }\r\n                                                            ;\r\n                                                            createjs.Tween.get(game.defaultDeck[i].imgContainer)\r\n                                                                .call(function () { cardContainer.setChildIndex(game.defaultDeck[i].imgContainer, cardContainer.numChildren - 1); })\r\n                                                                .to({ x: game.displayOrder.deck[0][0], y: game.displayOrder.deck[0][1], rotation: 0 }, 500, createjs.Ease.quintOut)\r\n                                                                .call(function () { resolve(); });\r\n                                                        });\r\n                                                        return [4 /*yield*/, timeout(25)];\r\n                                                    case 2:\r\n                                                        _a.sent();\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        randomIndex_1 = __values(randomIndex), randomIndex_1_1 = randomIndex_1.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!randomIndex_1_1.done) return [3 /*break*/, 5];\r\n                                        i = randomIndex_1_1.value;\r\n                                        return [5 /*yield**/, _loop_13(i)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        randomIndex_1_1 = randomIndex_1.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_15_1 = _b.sent();\r\n                                        e_15 = { error: e_15_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (randomIndex_1_1 && !randomIndex_1_1.done && (_a = randomIndex_1.return)) _a.call(randomIndex_1);\r\n                                        }\r\n                                        finally { if (e_15) throw e_15.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * スタート画面でカードを並べる\r\n     */\r\n    var lineUp = function () {\r\n        var reference = { x: 85 + cardImgSize.x / 2, y: 25 + cardImgSize.y / 2 };\r\n        game.defaultDeck.forEach(function (card, i, a) {\r\n            if (i <= 9) {\r\n                puton(cardContainer, card, reference.x + ((cardImgSize.x * 0.75) * i), reference.y);\r\n            }\r\n            else if (10 <= i && i <= 19) {\r\n                puton(cardContainer, card, reference.x + ((cardImgSize.x * 0.75) * (i - 10)), reference.y + (cardImgSize.y + 10) * 1);\r\n            }\r\n            else if (20 <= i && i <= 29) {\r\n                puton(cardContainer, card, reference.x + ((cardImgSize.x * 0.75) * (i - 20)), reference.y + (cardImgSize.y + 10) * 2);\r\n            }\r\n            else if (30 <= i) {\r\n                puton(cardContainer, card, reference.x + ((cardImgSize.x * 0.75) * (i - 30)), reference.y + (cardImgSize.y + 10) * 3);\r\n            }\r\n            ;\r\n            card.frontImg.scaleX = 1;\r\n            card.cardBackImg.scaleX = 0;\r\n            SetStatusDisprayEvent(card, card.imgContainer);\r\n        });\r\n        game.DECK = __spread(game.defaultDeck);\r\n    };\r\n    /**\r\n     * 手札を現在のデータに合わせた位置に移動するアニメーション\r\n     * 手札出し入れの際に呼ぶやつ\r\n     */\r\n    var animationHandAdjust = function () {\r\n        var PromiseArray = [];\r\n        game.HAND.map(function (card, index, array) {\r\n            var handPosition = (function () {\r\n                if (index <= 7) {\r\n                    var leftEndPosition = game.displayOrder.hand[0] - ((game.HAND.length - 1) - (game.HAND.length - 8) * Math.sign(Math.trunc(game.HAND.length / 8))) / 2 * (cardImgSize.x + cardImgSize.margin);\r\n                    return {\r\n                        x: leftEndPosition + (cardImgSize.x + cardImgSize.margin) * index,\r\n                        y: game.displayOrder.hand[1]\r\n                    };\r\n                }\r\n                else {\r\n                    var leftEndPosition = game.displayOrder.hand[0] - (game.HAND.length - 1 - 8) / 2 * (cardImgSize.x + cardImgSize.margin);\r\n                    return {\r\n                        x: leftEndPosition + ((cardImgSize.x + cardImgSize.margin) * (index - 8)),\r\n                        y: game.displayOrder.hand[1] + cardImgSize.y + cardImgSize.margin\r\n                    };\r\n                }\r\n                ;\r\n            })();\r\n            var twPromise = function () {\r\n                return new Promise(function (resolve, reject) {\r\n                    createjs.Tween.get(card.imgContainer)\r\n                        .call(function () {\r\n                        if (card.face == \"DOWN\") {\r\n                            cardFlip(card);\r\n                        }\r\n                        ;\r\n                    })\r\n                        .to(handPosition, 500, createjs.Ease.cubicInOut)\r\n                        .call(function () { resolve(); });\r\n                });\r\n            };\r\n            PromiseArray.push(twPromise());\r\n        });\r\n        return Promise.all(PromiseArray);\r\n    };\r\n    /**\r\n     * デッキから任意の枚数をドローする\r\n     */\r\n    var draw = function (count) {\r\n        // デッキ残り枚数以上のドローでライブラリアウト\r\n        if (game.DECK.length < count) {\r\n            console.log(\"LiblaryOut\");\r\n            game.liblaryOut = true;\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                var loseText;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                var i, targetCard;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            i = 0;\r\n                                            _a.label = 1;\r\n                                        case 1:\r\n                                            if (!(i < game.DECK.length)) return [3 /*break*/, 4];\r\n                                            targetCard = game.DECK[game.DECK.length - 1];\r\n                                            return [4 /*yield*/, moveCard.DECK.toHAND(targetCard)];\r\n                                        case 2:\r\n                                            _a.sent();\r\n                                            console.log(\"draw\");\r\n                                            _a.label = 3;\r\n                                        case 3:\r\n                                            i++;\r\n                                            return [3 /*break*/, 1];\r\n                                        case 4:\r\n                                            ;\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); })()];\r\n                        case 1:\r\n                            _a.sent();\r\n                            loseText = genCenterText(\"YOU LOSE\");\r\n                            loseText.shadow = new createjs.Shadow(\"#000000\", 0, 0, 10);\r\n                            loseText.x = game.centerGrid.x;\r\n                            loseText.y = game.centerGrid.y;\r\n                            loseText.font = \"100px serif\";\r\n                            openResultWindow(loseText);\r\n                            cardContainer.mouseEnabled = false;\r\n                            resolve();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n        ;\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var i, targetCard;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        for (i = 0; i < count; i++) {\r\n                            targetCard = game.DECK[game.DECK.length - 1];\r\n                            moveCard.DECK.toHAND(targetCard);\r\n                            console.log(\"draw\");\r\n                        }\r\n                        ;\r\n                        return [4 /*yield*/, timeout(500)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        resolve();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * デッキからサーチする\r\n     */\r\n    var search = function (target) {\r\n        console.log(\"function search\");\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var target_1, target_1_1, card, e_16_1;\r\n                            var e_16, _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _b.trys.push([0, 6, 7, 8]);\r\n                                        target_1 = __values(target), target_1_1 = target_1.next();\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        if (!!target_1_1.done) return [3 /*break*/, 5];\r\n                                        card = target_1_1.value;\r\n                                        if (!game.DECK.includes(card)) return [3 /*break*/, 3];\r\n                                        console.log(\"search \" + card.cardName);\r\n                                        return [4 /*yield*/, moveCard.DECK.toHAND(card)];\r\n                                    case 2:\r\n                                        _b.sent();\r\n                                        _b.label = 3;\r\n                                    case 3:\r\n                                        ;\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        target_1_1 = target_1.next();\r\n                                        return [3 /*break*/, 1];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_16_1 = _b.sent();\r\n                                        e_16 = { error: e_16_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (target_1_1 && !target_1_1.done && (_a = target_1.return)) _a.call(target_1);\r\n                                        }\r\n                                        finally { if (e_16) throw e_16.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, deckShuffle()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        resolve();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * チェーン1で優先権ある時発動できる効果リスト\r\n     */\r\n    var canActiveEffects = function (card) {\r\n        return card.effect.filter(function (eff) {\r\n            return (eff.effType == \"CardActived\" || eff.effType == \"Quick\" || eff.effType == \"Ignition\") &&\r\n                eff.actionPossible({});\r\n        });\r\n    };\r\n    /**\r\n     * 装備魔法が場から離れたとき装備解除する\r\n     */\r\n    var equipDisEnchant = function (card) {\r\n        var disEnchant = new effect(card);\r\n        disEnchant.effType = \"Rule\";\r\n        disEnchant.actionPossible = function (time) {\r\n            var timeCondition = (function () {\r\n                var timeBoolArray = [];\r\n                time.leaveBoard.forEach(function (tLeave) {\r\n                    timeBoolArray.push(tLeave.card == card);\r\n                });\r\n                return timeBoolArray.some(function (value) { return value; });\r\n            })();\r\n            var boolarray = [\r\n                card.peggingTarget.length > 0,\r\n                timeCondition\r\n            ];\r\n            return boolarray.every(function (value) { return value == true; });\r\n        };\r\n        disEnchant.apply = function () {\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                var equiptarget;\r\n                return __generator(this, function (_a) {\r\n                    equiptarget = card.peggingTarget[0];\r\n                    if (equiptarget instanceof MonsterCard) {\r\n                        equiptarget.buff = equiptarget.buff.filter(function (b) { return b.eff.card !== card; });\r\n                        equiptarget.equip = equiptarget.equip.filter(function (e) { return e !== card; });\r\n                    }\r\n                    ;\r\n                    card.peggingTarget = [];\r\n                    console.log(\"disenchant\");\r\n                    resolve();\r\n                    return [2 /*return*/];\r\n                });\r\n            }); });\r\n        };\r\n        return disEnchant;\r\n    };\r\n    /**\r\n     * 装備魔法の対象が消えたとき自身を破壊する効果\r\n     */\r\n    var equipDestroy = function (card) {\r\n        var EDeff = new effect(card);\r\n        EDeff.effType = \"Rule\";\r\n        EDeff.actionPossible = function (time) {\r\n            var timeCondition = (function () {\r\n                var timeBoolArray = [];\r\n                time.leaveBoard.forEach(function (tLeave) {\r\n                    timeBoolArray.push(card.peggingTarget.includes(tLeave.card));\r\n                });\r\n                return timeBoolArray.some(function (value) { return value; });\r\n            })();\r\n            var boolarray = [\r\n                card.canDestroy,\r\n                card.peggingTarget.length == 1,\r\n                card.location == \"ST\",\r\n                card.face == \"UP\",\r\n                timeCondition\r\n            ];\r\n            return boolarray.every(function (value) { return value == true; });\r\n        };\r\n        EDeff.apply = function () {\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            if (!(card.location == \"ST\")) return [3 /*break*/, 2];\r\n                            return [4 /*yield*/, destroy([card], \"RULE\")];\r\n                        case 1:\r\n                            _a.sent();\r\n                            _a.label = 2;\r\n                        case 2:\r\n                            ;\r\n                            card.peggingTarget = [];\r\n                            resolve();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        };\r\n        return EDeff;\r\n    };\r\n    /**\r\n     * カード毎の特殊召喚条件\r\n     */\r\n    var SSconditionSetting = {\r\n        DOGMA: function (card) {\r\n            card.RuleSScondition = function () {\r\n                var boolarray = [\r\n                    genCardArray({ location: [\"MO\"], category: [\"D-HERO\"] }).length >= 1,\r\n                    genCardArray({ location: [\"MO\"] }).length >= 3\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            card.RuleSSpromise = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var tmpEffA, cardlistA, _a, tmpEffB, cardlistB, _b, releaseArray;\r\n                return __generator(this, function (_c) {\r\n                    switch (_c.label) {\r\n                        case 0:\r\n                            tmpEffA = new effect(new Card);\r\n                            cardlistA = genCardArray({ location: [\"MO\"], category: [\"D-HERO\"] });\r\n                            _a = tmpEffA;\r\n                            return [4 /*yield*/, openCardListWindow.select(cardlistA, 1, 1, tmpEffA, \"リリースするD-HEROを\" + 1 + \"体選択してください\")];\r\n                        case 1:\r\n                            _a.targetCard = _c.sent();\r\n                            tmpEffB = new effect(new Card);\r\n                            cardlistB = genCardArray({ location: [\"MO\"] }).filter(function (card) { return !(tmpEffA.targetCard.includes(card)); });\r\n                            _b = tmpEffB;\r\n                            return [4 /*yield*/, openCardListWindow.select(cardlistB, 2, 2, tmpEffB, \"リリースするモンスターを\" + 2 + \"体選択してください\")];\r\n                        case 2:\r\n                            _b.targetCard = _c.sent();\r\n                            releaseArray = tmpEffB.targetCard.concat(tmpEffA.targetCard);\r\n                            console.log(\"Release \" + releaseArray.map(function (_a) {\r\n                                var cardName = _a.cardName;\r\n                                return cardName;\r\n                            }));\r\n                            game.nowTime = new Time;\r\n                            return [4 /*yield*/, release(releaseArray, \"COST\")];\r\n                        case 3:\r\n                            _c.sent();\r\n                            game.timeArray.push(__assign({}, game.nowTime));\r\n                            return [4 /*yield*/, SpecialSummon.fromHAND([card], false, \"ATK\")];\r\n                        case 4:\r\n                            _c.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); };\r\n        },\r\n    };\r\n    /**\r\n     * フェイズ移行時のアニメーション\r\n     */\r\n    var shadPhase = function (phase) { return __awaiter(_this, void 0, void 0, function () {\r\n        var phaseText;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    phaseText = genCenterText(phase);\r\n                    phaseText.shadow = new createjs.Shadow(\"#ffffff\", 0, 0, 10);\r\n                    phaseText.x = -200;\r\n                    phaseText.y = game.centerGrid.y;\r\n                    mainstage.addChild(phaseText);\r\n                    return [4 /*yield*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                createjs.Tween.get(phaseText)\r\n                                    .to({ x: game.centerGrid.x }, 250, createjs.Ease.cubicOut)\r\n                                    .wait(750)\r\n                                    .to({ x: 1800 }, 250, createjs.Ease.cubicOut)\r\n                                    .call(function () { resolve(); })\r\n                                    .call(function () { mainstage.removeChild(phaseText); });\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); })];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * デュエル開始\r\n     */\r\n    var gameStart = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    ;\r\n                    return [4 /*yield*/, decksetAnimation()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, timeout(500)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, deckShuffle()];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, draw(5)];\r\n                case 4:\r\n                    _a.sent();\r\n                    [myLP, EnemyLP, numOfcardsContainer, resetButton, endButton].forEach(function (obj) {\r\n                        createjs.Tween.get(obj)\r\n                            .to({ alpha: 1 }, 250);\r\n                    });\r\n                    return [4 /*yield*/, shadPhase(\"DRAW PHASE\")];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, draw(1)];\r\n                case 6:\r\n                    _a.sent();\r\n                    game.firstHand = __spread(game.HAND).map(function (c) { return c.cardNameJP; });\r\n                    return [4 /*yield*/, shadPhase(\"STANBY PHASE\")];\r\n                case 7:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, shadPhase(\"MAIN PHASE\")];\r\n                case 8:\r\n                    _a.sent();\r\n                    cardContainer.mouseEnabled = true;\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * ターンエンド\r\n     */\r\n    var turnEnd = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        var dogmaArray, magiexArray, winLose;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    ;\r\n                    dogmaArray = genCardArray({ ID: [\"17132130\"], location: [\"MO\"], face: [\"UP\"] });\r\n                    magiexArray = genCardArray({ ID: [\"32723153\"], location: [\"ST\"], face: [\"DOWN\"] });\r\n                    return [4 /*yield*/, shadPhase(\"TURN END\")];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, timeout(500)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var i;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        i = 0;\r\n                                        _a.label = 1;\r\n                                    case 1:\r\n                                        if (!(i < dogmaArray.length)) return [3 /*break*/, 6];\r\n                                        return [4 /*yield*/, animationChainEffectActivate(dogmaArray[i].effect[0])];\r\n                                    case 2:\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, dogmaArray[i].effect[0].whenResolve(dogmaArray[i].effect[0])];\r\n                                    case 3:\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, timeout(500)];\r\n                                    case 4:\r\n                                        _a.sent();\r\n                                        _a.label = 5;\r\n                                    case 5:\r\n                                        i++;\r\n                                        return [3 /*break*/, 1];\r\n                                    case 6:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                case 3:\r\n                    _a.sent();\r\n                    if (!(1 <= magiexArray.length)) return [3 /*break*/, 9];\r\n                    if (!(genCardArray({ location: [\"HAND\"] }).length == 0)) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var i;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        i = 0;\r\n                                        _a.label = 1;\r\n                                    case 1:\r\n                                        if (!(i < magiexArray.length)) return [3 /*break*/, 7];\r\n                                        // if(1<=game.enemyLifePoint){\r\n                                        return [4 /*yield*/, cardFlip(magiexArray[i])];\r\n                                    case 2:\r\n                                        // if(1<=game.enemyLifePoint){\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, animationChainEffectActivate(magiexArray[i].effect[0])];\r\n                                    case 3:\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, magiexArray[i].effect[0].whenResolve(magiexArray[i].effect[0])];\r\n                                    case 4:\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, moveCard.BOARD.toGY(magiexArray[i])];\r\n                                    case 5:\r\n                                        _a.sent();\r\n                                        _a.label = 6;\r\n                                    case 6:\r\n                                        i++;\r\n                                        return [3 /*break*/, 1];\r\n                                    case 7:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5: return [4 /*yield*/, openMessageWindow(\"手札が0枚でない為、MagicalExplosionを発動できません。\")];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7:\r\n                    ;\r\n                    return [4 /*yield*/, timeout(500)];\r\n                case 8:\r\n                    _a.sent();\r\n                    _a.label = 9;\r\n                case 9:\r\n                    ;\r\n                    winLose = (function () {\r\n                        if (game.enemyLifePoint < 1) {\r\n                            var WIN = genCenterText(\"YOU WIN !\");\r\n                            WIN.color = \"orangered\";\r\n                            return WIN;\r\n                        }\r\n                        else {\r\n                            return genCenterText(\"YOU LOSE\");\r\n                        }\r\n                        ;\r\n                    })();\r\n                    winLose.shadow = new createjs.Shadow(\"#000000\", 0, 0, 10);\r\n                    winLose.x = game.centerGrid.x;\r\n                    winLose.y = game.centerGrid.y;\r\n                    winLose.font = \"100px serif\";\r\n                    openResultWindow(winLose);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    /**\r\n     * リセット\r\n     */\r\n    var reset = function () { return __awaiter(_this, void 0, void 0, function () {\r\n        var returnCardArray, randomIndex;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    cardContainer.mouseEnabled = false;\r\n                    ;\r\n                    game.countNS = 0;\r\n                    game.normalSummon = true;\r\n                    game.myLifePoint = DEFAULT_LIFE;\r\n                    game.enemyLifePoint = DEFAULT_LIFE;\r\n                    game.payLPcost = true;\r\n                    game.liblaryOut = false;\r\n                    returnCardArray = genCardArray({ location: [\"HAND\", \"MO\", \"ST\", \"FIELD\", \"GY\", \"DD\"] });\r\n                    randomIndex = (function () {\r\n                        var _a;\r\n                        var defaultArray = __spread(Array(returnCardArray.length).keys());\r\n                        for (var i = returnCardArray.length - 1; i >= 0; i--) {\r\n                            var j = Math.floor(Math.random() * (i + 1));\r\n                            _a = __read([defaultArray[j], defaultArray[i]], 2), defaultArray[i] = _a[0], defaultArray[j] = _a[1];\r\n                        }\r\n                        ;\r\n                        return defaultArray;\r\n                    })();\r\n                    return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _loop_14, randomIndex_2, randomIndex_2_1, i, e_17_1;\r\n                            var e_17, _a;\r\n                            return __generator(this, function (_b) {\r\n                                switch (_b.label) {\r\n                                    case 0:\r\n                                        _loop_14 = function (i) {\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0: return [4 /*yield*/, LocationSetting(returnCardArray[i], \"DECK\")];\r\n                                                    case 1:\r\n                                                        _a.sent();\r\n                                                        new Promise(function (resolve, reject) {\r\n                                                            var card = returnCardArray[i];\r\n                                                            if (card instanceof MonsterCard && 1 <= card.equip.length) {\r\n                                                                card.equip = [];\r\n                                                            }\r\n                                                            ;\r\n                                                            if (card instanceof SpellCard && 1 <= card.peggingTarget.length) {\r\n                                                                card.peggingTarget = [];\r\n                                                            }\r\n                                                            ;\r\n                                                            if (returnCardArray[i].face == \"UP\") {\r\n                                                                cardFlip(returnCardArray[i]);\r\n                                                            }\r\n                                                            ;\r\n                                                            createjs.Tween.get(returnCardArray[i].imgContainer)\r\n                                                                .call(function () { cardContainer.setChildIndex(returnCardArray[i].imgContainer, cardContainer.numChildren - 1); })\r\n                                                                .to({ x: game.displayOrder.deck[0][0], y: game.displayOrder.deck[0][1], rotation: 0 }, 500, createjs.Ease.quintOut)\r\n                                                                .call(function () { resolve(); });\r\n                                                        });\r\n                                                        return [4 /*yield*/, timeout(25)];\r\n                                                    case 2:\r\n                                                        _a.sent();\r\n                                                        return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        };\r\n                                        _b.label = 1;\r\n                                    case 1:\r\n                                        _b.trys.push([1, 6, 7, 8]);\r\n                                        randomIndex_2 = __values(randomIndex), randomIndex_2_1 = randomIndex_2.next();\r\n                                        _b.label = 2;\r\n                                    case 2:\r\n                                        if (!!randomIndex_2_1.done) return [3 /*break*/, 5];\r\n                                        i = randomIndex_2_1.value;\r\n                                        return [5 /*yield**/, _loop_14(i)];\r\n                                    case 3:\r\n                                        _b.sent();\r\n                                        _b.label = 4;\r\n                                    case 4:\r\n                                        randomIndex_2_1 = randomIndex_2.next();\r\n                                        return [3 /*break*/, 2];\r\n                                    case 5: return [3 /*break*/, 8];\r\n                                    case 6:\r\n                                        e_17_1 = _b.sent();\r\n                                        e_17 = { error: e_17_1 };\r\n                                        return [3 /*break*/, 8];\r\n                                    case 7:\r\n                                        try {\r\n                                            if (randomIndex_2_1 && !randomIndex_2_1.done && (_a = randomIndex_2.return)) _a.call(randomIndex_2);\r\n                                        }\r\n                                        finally { if (e_17) throw e_17.error; }\r\n                                        return [7 /*endfinally*/];\r\n                                    case 8:\r\n                                        ;\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, timeout(250)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, deckShuffle()];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, draw(5)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, shadPhase(\"DRAW PHASE\")];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, draw(1)];\r\n                case 6:\r\n                    _a.sent();\r\n                    game.firstHand = __spread(game.HAND).map(function (c) { return c.cardNameJP; });\r\n                    return [4 /*yield*/, shadPhase(\"STANBY PHASE\")];\r\n                case 7:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, shadPhase(\"MAIN PHASE\")];\r\n                case 8:\r\n                    _a.sent();\r\n                    cardContainer.mouseEnabled = true;\r\n                    ;\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    ;\r\n    var effectSetting = {\r\n        AIRMAN: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"Trigger\";\r\n            eff1.whetherToActivate = \"Any\";\r\n            eff1.range = [\"MO\"];\r\n            var conditionA = function () {\r\n                return 1 <= genCardArray({ category: [\"HERO\"], location: [\"DECK\"] }).length;\r\n            };\r\n            var conditionB = function () {\r\n                return 1 <= genCardArray({ category: [\"HERO\"], location: [\"MO\"], face: [\"UP\"] }).filter(function (c) { return c !== card; }).length &&\r\n                    1 <= genCardArray({ location: [\"ST\"] }).length;\r\n            };\r\n            eff1.modeText = function () {\r\n                if (conditionA() && conditionB()) {\r\n                    return \"(HEROサーチ or 魔法罠破壊)\";\r\n                }\r\n                else if (conditionA()) {\r\n                    return \"(HEROサーチ)\";\r\n                }\r\n                else if (conditionB()) {\r\n                    return \"(魔法罠破壊)\";\r\n                }\r\n                else {\r\n                    return \"\";\r\n                }\r\n                ;\r\n            };\r\n            eff1.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.summon.forEach(function (ts) {\r\n                        timeBoolArray.push([\r\n                            ts.type == \"NS\" || ts.type == \"SS\",\r\n                            ts.card == card,\r\n                            ts.face == \"UP\",\r\n                        ].every(function (value) { return value; }));\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    timeCondition,\r\n                    eff1.range.includes(card.location),\r\n                    conditionA() || conditionB()\r\n                ];\r\n                return boolarray.every(function (value) { return value; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                if (!(conditionA() && conditionB())) return [3 /*break*/, 2];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, OpenSelectEffectWindow(card, \"HERO\\u3092\\n\\u624B\\u672D\\u306B\\u52A0\\u3048\\u308B\", \"\\u3053\\u306E\\u30AB\\u30FC\\u30C9\\u4EE5\\u5916\\u306EHERO\\u306E\\u6570\\u307E\\u3067\\n\\u9B54\\u6CD5\\u7F60\\u3092\\u7834\\u58CA\\u3059\\u308B\")];\r\n                            case 1:\r\n                                _a.mode = _b.sent();\r\n                                return [3 /*break*/, 3];\r\n                            case 2:\r\n                                if (conditionA()) {\r\n                                    eff.mode = true;\r\n                                }\r\n                                else {\r\n                                    eff.mode = false;\r\n                                }\r\n                                _b.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a, countMax, cardlist, _b;\r\n                    return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!eff.mode) return [3 /*break*/, 4];\r\n                                if (!conditionA()) return [3 /*break*/, 3];\r\n                                cardlist = genCardArray({ category: [\"HERO\"], location: [\"DECK\"] });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"手札に加えるHEROを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _c.sent();\r\n                                return [4 /*yield*/, search(eff.targetCard)];\r\n                            case 2:\r\n                                _c.sent();\r\n                                _c.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                return [3 /*break*/, 8];\r\n                            case 4:\r\n                                if (!conditionB()) return [3 /*break*/, 7];\r\n                                countMax = genCardArray({ category: [\"HERO\"], location: [\"MO\"], face: [\"UP\"] }).filter(function (c) { return c !== card; }).length;\r\n                                cardlist = genCardArray({ location: [\"ST\"] });\r\n                                _b = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, countMax, eff, \"破壊するカードを選択してください\")];\r\n                            case 5:\r\n                                _b.targetCard = _c.sent();\r\n                                return [4 /*yield*/, destroy(eff.targetCard, \"EFFECT\")];\r\n                            case 6:\r\n                                _c.sent();\r\n                                _c.label = 7;\r\n                            case 7:\r\n                                ;\r\n                                _c.label = 8;\r\n                            case 8:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        DISK: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"Trigger\";\r\n            eff1.whetherToActivate = \"Forced\";\r\n            eff1.range = [\"MO\"];\r\n            eff1.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.summon.forEach(function (ts) {\r\n                        timeBoolArray.push([\r\n                            ts.type == \"SS\",\r\n                            ts.from == \"GY\",\r\n                            ts.card == card,\r\n                            ts.face == \"UP\",\r\n                        ].every(function (value) { return value; }));\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    timeCondition,\r\n                    eff1.range.includes(card.location),\r\n                ];\r\n                return boolarray.every(function (value) { return value; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, draw(2)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        DOGMA: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"Trigger\";\r\n            eff1.whetherToActivate = \"Forced\";\r\n            eff1.range = [\"MO\"];\r\n            eff1.actionPossible = function (time) {\r\n                return false;\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var damage;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                damage = game.enemyLifePoint / 2;\r\n                                return [4 /*yield*/, dealDamage(damage)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        KURAZ: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"Trigger\";\r\n            eff1.whetherToActivate = \"Any\";\r\n            eff1.range = [\"MO\"];\r\n            eff1.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.summon.forEach(function (ts) {\r\n                        timeBoolArray.push([\r\n                            ts.type == \"NS\" || ts.type == \"SS\",\r\n                            ts.card == card,\r\n                            ts.face == \"UP\",\r\n                        ].every(function (value) { return value; }));\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    timeCondition,\r\n                    eff1.range.includes(card.location),\r\n                    genCardArray({ location: [\"MO\", \"ST\", \"FIELD\"] }).length > 0,\r\n                ];\r\n                return boolarray.every(function (value) { return value; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = genCardArray({ location: [\"MO\", \"ST\", \"FIELD\"] });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 2, eff, \"破壊するカードを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var targetLocation, target;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                targetLocation = [\"ST\", \"MO\", \"FIELD\"];\r\n                                target = eff.targetCard.filter(function (card) { return targetLocation.includes(card.location); });\r\n                                return [4 /*yield*/, destroy(target, \"EFFECT\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                if (!(target.length <= game.DECK.length)) return [3 /*break*/, 5];\r\n                                return [4 /*yield*/, (openYesNoWindow(\"ドローしますか？\"))];\r\n                            case 2:\r\n                                if (!_a.sent()) return [3 /*break*/, 4];\r\n                                return [4 /*yield*/, draw(target.length)];\r\n                            case 3:\r\n                                _a.sent();\r\n                                _a.label = 4;\r\n                            case 4:\r\n                                ;\r\n                                _a.label = 5;\r\n                            case 5:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        CYBERVARY: function (card) {\r\n            var eff1 = new effect(card);\r\n            var conditionA = function () {\r\n                return (genCardArray({ location: [\"MO\"] }).length >= 2 && game.DECK.length >= 2);\r\n            };\r\n            var conditionB = function () {\r\n                return (game.HAND.length >= 1 && genCardArray({ location: [\"GY\"], cardType: [\"Spell\"] }).length >= 1);\r\n            };\r\n            eff1.effType = \"Ignition\";\r\n            eff1.range = [\"MO\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    eff1.range.includes(card.location),\r\n                    card.face == \"UP\",\r\n                    (conditionA() || conditionB())\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _a, cardlist, _b, cardlist, _c;\r\n                    return __generator(this, function (_d) {\r\n                        switch (_d.label) {\r\n                            case 0:\r\n                                if (!(conditionA() && conditionB())) return [3 /*break*/, 2];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, OpenSelectEffectWindow(card, \"\\u3053\\u306E\\u30AB\\u30FC\\u30C9\\u3068\\u4ED6\\u306E\\u30E2\\u30F3\\u30B9\\u30BF\\u30FC1\\u4F53\\u3092\\n\\u9664\\u5916\\u30572\\u679A\\u30C9\\u30ED\\u30FC\\u3059\\u308B\", \"\\u3053\\u306E\\u30AB\\u30FC\\u30C9\\u3068\\u624B\\u672D1\\u679A\\u3092\\u9664\\u5916\\u3057\\n\\u5893\\u5730\\u306E\\u30AB\\u30FC\\u30C9\\u3092\\u30C7\\u30C3\\u30AD\\u30C8\\u30C3\\u30D7\\u306B\\u7F6E\\u304F\")];\r\n                            case 1:\r\n                                _a.mode = _d.sent();\r\n                                return [3 /*break*/, 3];\r\n                            case 2:\r\n                                if (conditionA()) {\r\n                                    eff.mode = true;\r\n                                }\r\n                                else {\r\n                                    eff.mode = false;\r\n                                }\r\n                                _d.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                if (!eff.mode) return [3 /*break*/, 6];\r\n                                cardlist = genCardArray({ location: [\"MO\"] }).filter(function (c) { return c != card; });\r\n                                _b = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"除外するモンスターを1枚選択してください\")];\r\n                            case 4:\r\n                                _b.targetCard = _d.sent();\r\n                                eff.targetCard.push(card);\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 5:\r\n                                _d.sent();\r\n                                return [3 /*break*/, 8];\r\n                            case 6:\r\n                                cardlist = genCardArray({ location: [\"GY\"] });\r\n                                _c = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"デッキトップに置くカードを\" + 1 + \"枚選択してください\")];\r\n                            case 7:\r\n                                _c.targetCard = _d.sent();\r\n                                _d.label = 8;\r\n                            case 8:\r\n                                ;\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var tmpEff, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!eff.mode) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, vanish(eff.targetCard, \"EFFECT\")];\r\n                            case 1:\r\n                                _b.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, draw(2)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [3 /*break*/, 10];\r\n                            case 3:\r\n                                tmpEff = new effect(new Card);\r\n                                _a = tmpEff;\r\n                                return [4 /*yield*/, openCardListWindow.select(game.HAND, 1, 1, tmpEff, \"除外する手札を1枚選択してください\")];\r\n                            case 4:\r\n                                _a.targetCard = _b.sent();\r\n                                tmpEff.targetCard.push(card);\r\n                                return [4 /*yield*/, vanish(tmpEff.targetCard, \"EFFECT\")];\r\n                            case 5:\r\n                                _b.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, returnDecktop(eff.targetCard)];\r\n                            case 6:\r\n                                _b.sent();\r\n                                return [4 /*yield*/, cardFlip(eff.targetCard[0])];\r\n                            case 7:\r\n                                _b.sent();\r\n                                return [4 /*yield*/, timeout(500)];\r\n                            case 8:\r\n                                _b.sent();\r\n                                return [4 /*yield*/, cardFlip(eff.targetCard[0])];\r\n                            case 9:\r\n                                _b.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                _b.label = 10;\r\n                            case 10:\r\n                                ;\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        MAGICIANOFCHAOS: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"Trigger\";\r\n            eff1.whetherToActivate = \"Any\";\r\n            eff1.range = [\"MO\"];\r\n            eff1.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.summon.forEach(function (ts) {\r\n                        timeBoolArray.push([\r\n                            ts.type == \"NS\" || ts.type == \"SS\",\r\n                            ts.card == card,\r\n                            ts.face == \"UP\",\r\n                        ].every(function (value) { return value; }));\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    timeCondition,\r\n                    eff1.range.includes(card.location),\r\n                    genCardArray({ cardType: [\"Spell\"], location: [\"GY\"] }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = game.GY.filter(function (card) { return card instanceof SpellCard; });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"手札に加える魔法を1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(eff.targetCard[0].location == \"GY\")) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, moveCard.GY.toHAND(eff.targetCard[0])];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.nowTime.move.push({\r\n                                    card: eff.targetCard[0],\r\n                                    from: \"GY\",\r\n                                    to: \"HAND\"\r\n                                });\r\n                                return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            var eff2 = new effect(card);\r\n            eff2.effType = \"Continuous\";\r\n            eff2.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.leaveBoard.forEach(function (tLeave) {\r\n                        timeBoolArray.push(tLeave.card == card);\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    card.location == \"MO\",\r\n                    card.face == \"UP\",\r\n                    card.canVanish,\r\n                    timeCondition\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff2.apply = function () {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, vanish([card], \"EFFECT\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1, eff2];\r\n        },\r\n        JUNKCOLLECTOR: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"Ignition\";\r\n            eff1.range = [\"MO\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    eff1.range.includes(card.location),\r\n                    card.face == \"UP\",\r\n                    1 <= genCardArray({ location: [\"GY\"], cardType: [\"Trap\"] }).filter(function (trap) { return trap.effect[0].copyCondition; }).length\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = genCardArray({ location: [\"GY\"], cardType: [\"Trap\"] }).filter(function (trap) { return trap.effect[0].copyCondition; });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"コピーする罠を1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                eff.targetCard.push(card);\r\n                                return [4 /*yield*/, vanish(eff.targetCard, \"COST\")];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4 /*yield*/, eff.targetCard[0].effect[0].whenResolve(eff)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        resolve();\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            }); };\r\n            return [eff1];\r\n        },\r\n        REINFORCEMENT: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ race: [\"WARRIOR\"], location: [\"DECK\"] })\r\n                        .filter(function (card) { return card instanceof MonsterCard && card.level <= 4; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                cardlist = genCardArray({ race: [\"WARRIOR\"], location: [\"DECK\"] })\r\n                                    .filter(function (card) { return card instanceof MonsterCard && card.level <= 4; });\r\n                                if (!(cardlist.length > 0)) return [3 /*break*/, 3];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"手札に加えるカードを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, search(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                _b.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        DESTINYDRAW: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ category: [\"D-HERO\"], location: [\"HAND\"] }).length > 0,\r\n                    2 <= game.DECK.length\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = genCardArray({ category: [\"D-HERO\"], location: [\"HAND\"] });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"捨てるD-HEROを1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, discard(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, draw(2)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        MONSTERREBORN: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"MO\"] }).length < 5,\r\n                    game.GY.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = game.GY.filter(function (card) { return card instanceof MonsterCard && card.canNS; });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"特殊召喚するモンスターを1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var targetarray;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                targetarray = eff.targetCard.filter(function (card) { return card.location == \"GY\"; });\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, SpecialSummon.fromGY(targetarray.reverse(), false, \"ATK\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        PREMATUREBRIAL: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.lifeCost = 800;\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    (game.myLifePoint > eff1.lifeCost || !(game.payLPcost)),\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"MO\"] }).length < 5,\r\n                    game.GY.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = game.GY.filter(function (card) { return card instanceof MonsterCard && card.canNS; });\r\n                                return [4 /*yield*/, payLife(eff.lifeCost)];\r\n                            case 1:\r\n                                _b.sent();\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"特殊召喚するモンスターを1枚選択してください\")];\r\n                            case 2:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 3:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(eff.targetCard[0].location == \"GY\" && eff.card.location == \"ST\" && eff.card.face == \"UP\")) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, SpecialSummon.fromGY(eff.targetCard, false, \"ATK\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4 /*yield*/, Equip(card, eff)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            var eff2 = new effect(card);\r\n            eff2.effType = \"Continuous\";\r\n            eff2.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.destroy.forEach(function (tDestroy) {\r\n                        timeBoolArray.push(tDestroy.card == card);\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    card.peggingTarget.filter(function (card) { return card.canDestroy; }).length > 0,\r\n                    timeCondition\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff2.apply = function () {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!(card.peggingTarget[0].location == \"MO\")) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, destroy(card.peggingTarget, \"EFFECT\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                _a.label = 2;\r\n                            case 2:\r\n                                ;\r\n                                // card.peggingTarget = [];\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1, eff2, equipDestroy(card), equipDisEnchant(card)];\r\n        },\r\n        MONSTERGATE: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    game.DECK.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0,\r\n                    genCardArray({ location: [\"MO\"] }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = genCardArray({ location: [\"MO\"] });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"リリースするモンスターを1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, release(eff.targetCard, \"COST\")];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var decktop;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                decktop = function () { return game.DECK[game.DECK.length - 1]; };\r\n                                if (!(game.DECK.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0)) return [3 /*break*/, 4];\r\n                                return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                        var topcard;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    if (false) {}\r\n                                                    topcard = game.DECK[game.DECK.length - 1];\r\n                                                    return [4 /*yield*/, cardFlip(topcard)];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    return [4 /*yield*/, timeout(250)];\r\n                                                case 2:\r\n                                                    _a.sent();\r\n                                                    if (!(topcard instanceof MonsterCard && topcard.canNS)) return [3 /*break*/, 3];\r\n                                                    return [3 /*break*/, 6];\r\n                                                case 3:\r\n                                                    console.log(\"send \" + topcard.cardName + \" to GY\");\r\n                                                    return [4 /*yield*/, moveCard.DECK.toGY(topcard)];\r\n                                                case 4:\r\n                                                    _a.sent();\r\n                                                    game.nowTime.move.push({\r\n                                                        card: topcard,\r\n                                                        from: \"DECK\",\r\n                                                        to: \"GY\"\r\n                                                    });\r\n                                                    _a.label = 5;\r\n                                                case 5:\r\n                                                    ;\r\n                                                    return [3 /*break*/, 0];\r\n                                                case 6:\r\n                                                    ;\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    }); })()];\r\n                            case 1:\r\n                                _a.sent();\r\n                                if (!(decktop() instanceof MonsterCard)) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, SpecialSummon.fromDECK([decktop()], false, \"ATK\")];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                _a.label = 4;\r\n                            case 4:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        PHENIXBLADE: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ face: [\"UP\"], location: [\"MO\"], race: [\"WARRIOR\"] }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = genCardArray({ face: [\"UP\"], location: [\"MO\"], race: [\"WARRIOR\"] });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"装備対象を選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var equiptarget;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(eff.targetCard[0].location == \"MO\" && eff.targetCard[0].face == \"UP\" && eff.card.location == \"ST\" && eff.card.face == \"UP\")) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, Equip(card, eff)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                equiptarget = card.peggingTarget[0];\r\n                                if (equiptarget instanceof MonsterCard) {\r\n                                    equiptarget.buff.push({ eff: eff, atkBuff: 300, defBuff: 0 });\r\n                                }\r\n                                ;\r\n                                _a.label = 2;\r\n                            case 2:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            var eff2 = new effect(card);\r\n            eff2.effType = \"Ignition\";\r\n            eff2.range = [\"GY\"];\r\n            eff2.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    eff2.range.includes(card.location),\r\n                    genCardArray({ race: [\"WARRIOR\"], location: [\"GY\"] }).length >= 2\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff2.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = genCardArray({ race: [\"WARRIOR\"], location: [\"GY\"] });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 2, 2, eff, \"除外する戦士族を2枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, vanish(eff.targetCard, \"COST\")];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff2.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(eff.card.location == \"GY\")) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0: return [4 /*yield*/, moveCard.GY.toHAND(eff.card)];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    game.nowTime.move.push({\r\n                                                        card: eff.card,\r\n                                                        from: \"GY\",\r\n                                                        to: \"HAND\"\r\n                                                    });\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    }); })()];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1, eff2, equipDestroy(card), equipDisEnchant(card)];\r\n        },\r\n        DIMENSIONFUSION: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.lifeCost = 2000;\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    (game.myLifePoint > eff1.lifeCost || !(game.payLPcost)),\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"MO\"] }).length < 5,\r\n                    game.DD.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, payLife(eff.lifeCost)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var blankMonsterZone, canNSmonster, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                blankMonsterZone = 5 - genCardArray({ location: [\"MO\"] }).length;\r\n                                canNSmonster = game.DD.filter(function (card) { return card instanceof MonsterCard && card.canNS; });\r\n                                if (!(canNSmonster.length > 0 && blankMonsterZone > 0)) return [3 /*break*/, 5];\r\n                                if (!(canNSmonster.length > blankMonsterZone)) return [3 /*break*/, 2];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(canNSmonster, blankMonsterZone, blankMonsterZone, eff, \"特殊召喚するモンスターを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [3 /*break*/, 3];\r\n                            case 2:\r\n                                eff.targetCard = canNSmonster;\r\n                                _b.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                return [4 /*yield*/, SpecialSummon.fromDD(eff.targetCard, false, \"ATK\")];\r\n                            case 4:\r\n                                _b.sent();\r\n                                _b.label = 5;\r\n                            case 5:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        REASONING: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"MO\"] }).length < 5,\r\n                    game.DECK.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var pubZone, decrearLevel, decktop, top_1;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                pubZone = genCardArray({ location: [\"MO\", \"GY\", \"DD\"] });\r\n                                decrearLevel = (function () {\r\n                                    if (pubZone.filter(function (c) { return c.cardName == _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"MagicianOfChaos\"].cardName; }).length == 0) {\r\n                                        return 8;\r\n                                    }\r\n                                    else if (pubZone.filter(function (c) { return c.cardName == _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Airman\"].cardName; }).length == 0) {\r\n                                        return 4;\r\n                                    }\r\n                                    else if (pubZone.filter(function (c) { return c.cardName == _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Kuraz\"].cardName; }).length == 0) {\r\n                                        return 6;\r\n                                    }\r\n                                    else {\r\n                                        return 1;\r\n                                    }\r\n                                    ;\r\n                                })();\r\n                                decktop = function () { return game.DECK[game.DECK.length - 1]; };\r\n                                if (!(game.DECK.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0)) return [3 /*break*/, 8];\r\n                                return [4 /*yield*/, openMessageWindow(decrearLevel + \" が宣言されました\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4 /*yield*/, (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                        var topcard;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    if (false) {}\r\n                                                    topcard = game.DECK[game.DECK.length - 1];\r\n                                                    return [4 /*yield*/, cardFlip(topcard)];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    return [4 /*yield*/, timeout(250)];\r\n                                                case 2:\r\n                                                    _a.sent();\r\n                                                    if (!(topcard instanceof MonsterCard && topcard.canNS)) return [3 /*break*/, 3];\r\n                                                    return [3 /*break*/, 6];\r\n                                                case 3:\r\n                                                    console.log(\"send \" + topcard.cardName + \" to GY\");\r\n                                                    return [4 /*yield*/, moveCard.DECK.toGY(topcard)];\r\n                                                case 4:\r\n                                                    _a.sent();\r\n                                                    game.nowTime.move.push({\r\n                                                        card: topcard,\r\n                                                        from: \"DECK\",\r\n                                                        to: \"GY\"\r\n                                                    });\r\n                                                    _a.label = 5;\r\n                                                case 5:\r\n                                                    ;\r\n                                                    return [3 /*break*/, 0];\r\n                                                case 6:\r\n                                                    ;\r\n                                                    return [2 /*return*/];\r\n                                            }\r\n                                        });\r\n                                    }); })()];\r\n                            case 2:\r\n                                _a.sent();\r\n                                if (!(decktop() instanceof MonsterCard)) return [3 /*break*/, 7];\r\n                                top_1 = decktop();\r\n                                if (!(top_1 instanceof MonsterCard && top_1.level != decrearLevel)) return [3 /*break*/, 4];\r\n                                return [4 /*yield*/, SpecialSummon.fromDECK([decktop()], false, \"ATK\")];\r\n                            case 3:\r\n                                _a.sent();\r\n                                return [3 /*break*/, 6];\r\n                            case 4: return [4 /*yield*/, moveCard.DECK.toGY(top_1)];\r\n                            case 5:\r\n                                _a.sent();\r\n                                console.log(\"send \" + top_1.cardName + \" to GY\");\r\n                                game.nowTime.move.push({\r\n                                    card: top_1,\r\n                                    from: \"DECK\",\r\n                                    to: \"GY\"\r\n                                });\r\n                                _a.label = 6;\r\n                            case 6:\r\n                                ;\r\n                                _a.label = 7;\r\n                            case 7:\r\n                                ;\r\n                                _a.label = 8;\r\n                            case 8:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        DDR: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    game.HAND.filter(function (c) { return c != card; }).length > 0,\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"MO\"] }).length < 5,\r\n                    game.DD.filter(function (card) { return card instanceof MonsterCard && card.canNS; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a, _b;\r\n                    return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                cardlist = game.DD.filter(function (card) { return card instanceof MonsterCard && card.canNS; });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(game.HAND, 1, 1, eff, \"捨てる手札を1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _c.sent();\r\n                                return [4 /*yield*/, discard(eff.targetCard)];\r\n                            case 2:\r\n                                _c.sent();\r\n                                _b = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"特殊召喚するモンスターを1枚選択してください\")];\r\n                            case 3:\r\n                                _b.targetCard = _c.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 4:\r\n                                _c.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(eff.targetCard[0].location == \"DD\" && eff.card.location == \"ST\" && eff.card.face == \"UP\")) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, SpecialSummon.fromDD(eff.targetCard, false, \"ATK\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4 /*yield*/, Equip(card, eff)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            var eff2 = new effect(card);\r\n            eff2.effType = \"Continuous\";\r\n            eff2.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.leaveBoard.forEach(function (tLeave) {\r\n                        timeBoolArray.push([\r\n                            tLeave.card == card\r\n                        ].every(function (value) { return value; }));\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [\r\n                    card.peggingTarget.filter(function (card) { return card.canDestroy; }).length > 0,\r\n                    timeCondition\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff2.apply = function () {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!(card.peggingTarget[0].location == \"MO\")) return [3 /*break*/, 2];\r\n                                return [4 /*yield*/, destroy(card.peggingTarget, \"EFFECT\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                _a.label = 2;\r\n                            case 2:\r\n                                ;\r\n                                // card.peggingTarget = [];\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1, eff2, equipDestroy(card), equipDisEnchant(card)];\r\n        },\r\n        TRADEIN: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    game.HAND.filter(function (c) { return c instanceof MonsterCard && c.level == 8; }).length > 0,\r\n                    2 <= game.DECK.length\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                cardlist = game.HAND.filter(function (c) { return c instanceof MonsterCard && c.level == 8; });\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"捨てるカードを1枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, discard(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, draw(2)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        MAGICSTONEEXCAVATION: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    game.HAND.filter(function (c) { return c != card; }).length >= 2,\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"GY\"], cardType: [\"Spell\"] }).length >= 1\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _a, cardlist, _b;\r\n                    return __generator(this, function (_c) {\r\n                        switch (_c.label) {\r\n                            case 0:\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(game.HAND, 2, 2, eff, \"捨てるカードを2枚選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _c.sent();\r\n                                return [4 /*yield*/, discard(eff.targetCard)];\r\n                            case 2:\r\n                                _c.sent();\r\n                                cardlist = game.GY.filter(function (card) { return card instanceof SpellCard; });\r\n                                _b = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"手札に加える魔法を1枚選択してください\")];\r\n                            case 3:\r\n                                _b.targetCard = _c.sent();\r\n                                return [4 /*yield*/, animationEffectTarget(eff.targetCard)];\r\n                            case 4:\r\n                                _c.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(eff.targetCard[0].location == \"GY\")) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, moveCard.GY.toHAND(eff.targetCard[0])];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.nowTime.move.push({\r\n                                    card: eff.targetCard[0],\r\n                                    from: \"GY\",\r\n                                    to: \"HAND\"\r\n                                });\r\n                                return [4 /*yield*/, ContinuousEffect(game.nowTime)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        HANDDESTRUCTION: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    game.DECK.length >= game.HAND.filter(function (c) { return c !== card; }).length\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var count;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                count = game.HAND.length;\r\n                                return [4 /*yield*/, discard(game.HAND)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4 /*yield*/, draw(count)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        HURRICANE: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    genCardArray({ location: [\"ST\"] }).filter(function (c) { return c != card; }).length > 0\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                return [4 /*yield*/, bounce(genCardArray({ location: [\"ST\"] }).filter(function (c) { return c != card; }), \"EFFECT\")];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        HIDDENARMORY: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    game.countNS == 0,\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    game.DECK.length >= 1,\r\n                    genCardArray({ cardType: [\"Spell\"], location: [\"DECK\", \"GY\"] })\r\n                        .filter(function (card) { return card instanceof SpellCard && card.spellType == \"Equip\"; }).length >= 1\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var decktop;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                decktop = game.DECK[game.DECK.length - 1];\r\n                                return [4 /*yield*/, moveCard.DECK.toGY(decktop)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                game.nowTime.move.push({\r\n                                    card: decktop,\r\n                                    from: \"DECK\",\r\n                                    to: \"GY\"\r\n                                });\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var cardlist, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                cardlist = genCardArray({ cardType: [\"Spell\"], location: [\"DECK\", \"GY\"] })\r\n                                    .filter(function (card) { return card instanceof SpellCard && card.spellType == \"Equip\"; });\r\n                                if (!(cardlist.length > 0)) return [3 /*break*/, 6];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(cardlist, 1, 1, eff, \"手札に加えるカードを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                if (!(eff.targetCard[0].location == \"DECK\")) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, search(eff.targetCard)];\r\n                            case 2:\r\n                                _b.sent();\r\n                                return [3 /*break*/, 5];\r\n                            case 3:\r\n                                if (!(eff.targetCard[0].location == \"GY\")) return [3 /*break*/, 5];\r\n                                return [4 /*yield*/, moveCard.GY.toHAND(eff.targetCard[0])];\r\n                            case 4:\r\n                                _b.sent();\r\n                                game.nowTime.move.push({\r\n                                    card: eff.card,\r\n                                    from: \"GY\",\r\n                                    to: \"HAND\"\r\n                                });\r\n                                _b.label = 5;\r\n                            case 5:\r\n                                ;\r\n                                game.normalSummon = false;\r\n                                _b.label = 6;\r\n                            case 6:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        SPELLECONOMICS: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card)\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        game.nowTime = new Time;\r\n                        game.payLPcost = false;\r\n                        game.timeArray.push(__assign({}, game.nowTime));\r\n                        resolve();\r\n                        return [2 /*return*/];\r\n                    });\r\n                }); });\r\n            };\r\n            var eff2 = new effect(card);\r\n            eff2.effType = \"Continuous\";\r\n            eff2.actionPossible = function (time) {\r\n                var timeCondition = (function () {\r\n                    var timeBoolArray = [];\r\n                    time.leaveBoard.forEach(function (tLeave) {\r\n                        timeBoolArray.push(tLeave.card == card);\r\n                    });\r\n                    return timeBoolArray.some(function (value) { return value; });\r\n                })();\r\n                var boolarray = [timeCondition];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff2.apply = function () {\r\n                return new Promise(function (resolve, reject) {\r\n                    game.payLPcost = true;\r\n                    resolve();\r\n                });\r\n            };\r\n            return [eff1, eff2];\r\n        },\r\n        GOLDSARCOPHAGUS: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"HAND\", \"ST\"];\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [\r\n                    JudgeSpellTrapActivateLoc(card),\r\n                    game.DECK.length >= 1\r\n                ];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                if (!(game.DECK.length >= 1)) return [3 /*break*/, 4];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(game.DECK, 1, 1, eff, \"除外するカードを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [4 /*yield*/, vanish(eff.targetCard, \"EFFECT\")];\r\n                            case 2:\r\n                                _b.sent();\r\n                                return [4 /*yield*/, deckShuffle()];\r\n                            case 3:\r\n                                _b.sent();\r\n                                _b.label = 4;\r\n                            case 4:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        },\r\n        MAGICALEXPLOSION: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"ST\"];\r\n            eff1.copyCondition = function () {\r\n                return 1 <= genCardArray({ location: [\"GY\"], cardType: [\"Spell\"] }).length;\r\n            };\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [false];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve();\r\n                });\r\n            };\r\n            eff1.whenResolve = function (eff) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var damage;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        game.nowTime = new Time;\r\n                                        damage = game.GY.filter(function (c) { return c.cardType == \"Spell\"; }).length * 200;\r\n                                        return [4 /*yield*/, dealDamage(damage)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        game.timeArray.push(__assign({}, game.nowTime));\r\n                                        resolve();\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); })];\r\n                });\r\n            }); };\r\n            return [eff1];\r\n        },\r\n        RETURNFROMTHEDD: function (card) {\r\n            var eff1 = new effect(card);\r\n            eff1.effType = \"CardActived\";\r\n            eff1.range = [\"ST\"];\r\n            eff1.copyCondition = function () {\r\n                return (1 <= genCardArray({ location: [\"DD\"], cardType: [\"Monster\"] }).length &&\r\n                    genCardArray({ location: [\"MO\"] }).length < 5);\r\n            };\r\n            eff1.actionPossible = function (time) {\r\n                var boolarray = [false];\r\n                return boolarray.every(function (value) { return value == true; });\r\n            };\r\n            eff1.whenActive = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4 /*yield*/, payLife(game.myLifePoint / 2)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            eff1.whenResolve = function (eff) {\r\n                return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var blankMonsterZone, canNSmonster, _a;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                game.nowTime = new Time;\r\n                                blankMonsterZone = 5 - genCardArray({ location: [\"MO\"] }).length;\r\n                                canNSmonster = game.DD.filter(function (card) { return card instanceof MonsterCard && card.canNS; });\r\n                                if (!(canNSmonster.length > 0 && blankMonsterZone > 0)) return [3 /*break*/, 5];\r\n                                if (!(canNSmonster.length > blankMonsterZone)) return [3 /*break*/, 2];\r\n                                _a = eff;\r\n                                return [4 /*yield*/, openCardListWindow.select(canNSmonster, blankMonsterZone, blankMonsterZone, eff, \"特殊召喚するモンスターを選択してください\")];\r\n                            case 1:\r\n                                _a.targetCard = _b.sent();\r\n                                return [3 /*break*/, 3];\r\n                            case 2:\r\n                                eff.targetCard = canNSmonster;\r\n                                _b.label = 3;\r\n                            case 3:\r\n                                ;\r\n                                return [4 /*yield*/, SpecialSummon.fromDD(eff.targetCard, false, \"ATK\")];\r\n                            case 4:\r\n                                _b.sent();\r\n                                _b.label = 5;\r\n                            case 5:\r\n                                ;\r\n                                game.timeArray.push(__assign({}, game.nowTime));\r\n                                resolve();\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            };\r\n            return [eff1];\r\n        }\r\n    };\r\n    var game = new Game;\r\n    var mainCanv = document.getElementById(\"canv\");\r\n    var mainstage = new createjs.Stage(mainCanv);\r\n    mainstage.enableMouseOver();\r\n    var statusCanv = document.getElementById(\"statuscanv\");\r\n    var statusStage = new createjs.Stage(statusCanv);\r\n    statusStage.enableMouseOver();\r\n    var statusCardNameText = document.getElementById(\"cardNameText\");\r\n    var statusCardTypeText = document.getElementById(\"cardTypeText\");\r\n    var statusCardEffText = document.getElementById(\"cardEffText\");\r\n    var divSelectMenuContainer = document.getElementById(\"selectMenuContainer\");\r\n    var windowBackCanv = document.getElementById(\"selectMenuBack\");\r\n    var windowBackStage = new createjs.Stage(windowBackCanv);\r\n    windowBackStage.enableMouseOver();\r\n    var selectButtonCanv = document.getElementById(\"selectButtonCanv\");\r\n    selectButtonCanv.style.width = String(windowSize.w) + \"px\";\r\n    selectButtonCanv.width = windowSize.w;\r\n    selectButtonCanv.style.height = String(60) + \"px\";\r\n    selectButtonCanv.height = 60;\r\n    var selectButtonStage = new createjs.Stage(selectButtonCanv);\r\n    selectButtonStage.enableMouseOver();\r\n    var messageText = document.getElementById(\"selectMessageText\");\r\n    var scrollAreaContainer = document.getElementById(\"scrollAreaContainer\");\r\n    scrollAreaContainer.style.width = String(windowSize.w) + \"px\";\r\n    scrollAreaContainer.style.height = String(windowSize.h) + \"px\";\r\n    var disprayCanv = document.getElementById(\"displayCanv\");\r\n    var disprayStage = new createjs.Stage(disprayCanv);\r\n    disprayStage.enableMouseOver();\r\n    setBoard(mainstage);\r\n    var cardContainer = new createjs.Container;\r\n    mainstage.addChild(cardContainer);\r\n    var myLP = new createjs.Text(game.myLifePoint.toString(), \"80px serif\", \"#4169e1\");\r\n    myLP.shadow = new createjs.Shadow(\"#58D3F7\", 0, 0, 20);\r\n    myLP.textBaseline = \"bottom\";\r\n    myLP.y = 800;\r\n    mainstage.addChild(myLP);\r\n    myLP.alpha = 0;\r\n    var EnemyLP = new createjs.Text(game.enemyLifePoint.toString(), \"80px serif\", \"#cd5c5c\");\r\n    EnemyLP.shadow = new createjs.Shadow(\"#FA5858\", 0, 0, 20);\r\n    EnemyLP.textAlign = \"left\";\r\n    mainstage.addChild(EnemyLP);\r\n    EnemyLP.alpha = 0;\r\n    var numOfcardsContainer = new createjs.Container;\r\n    var NumInDeck = new createjs.Text(\"DECK: \" + game.DECK.length.toString(), \"25px serif\", \"#000000\");\r\n    NumInDeck.textAlign = \"left\";\r\n    var NumInGy = new createjs.Text(\"SPELLS IN GY: \" + genCardArray({ location: [\"GY\"], cardType: [\"Spell\"] }).length.toString(), \"25px serif\", \"#000000\");\r\n    NumInGy.textAlign = \"left\";\r\n    numOfcardsContainer.addChild(NumInDeck);\r\n    numOfcardsContainer.addChild(NumInGy);\r\n    NumInGy.y = 40;\r\n    mainstage.addChild(numOfcardsContainer);\r\n    numOfcardsContainer.setTransform(game.displayOrder.deck[0][0] + 90, game.displayOrder.deck[0][1] - 60);\r\n    numOfcardsContainer.alpha = 0;\r\n    var createdbyText = new createjs.Text(\"Created by  \", \"24px serif\", \"black\");\r\n    var twiAccountText = new createjs.Text(\"@toride0313\", \"24px serif\", \"black\");\r\n    var updateText = new createjs.Text(\" /Update 2020.07.28 キャンセル時フリーズするバグを修正。 Edgeでは正常動作しません。\", \"24px serif\", \"black\");\r\n    twiAccountText.x = createdbyText.getMeasuredWidth();\r\n    updateText.x = createdbyText.getMeasuredWidth() + twiAccountText.getMeasuredWidth() + 5;\r\n    twiAccountText.color = \"#1111cc\";\r\n    twiAccountText.cursor = \"pointer\";\r\n    var hitAreaShape = new createjs.Shape;\r\n    hitAreaShape.set({\r\n        graphics: new createjs.Graphics().beginFill(\"#FFF\").drawEllipse(0, 0, twiAccountText.getMeasuredWidth(), twiAccountText.getMeasuredHeight())\r\n    });\r\n    twiAccountText.hitArea = hitAreaShape;\r\n    var footerContainer = new createjs.Container;\r\n    footerContainer.addChild(createdbyText, twiAccountText, updateText);\r\n    twiAccountText.addEventListener(\"click\", clicktwiAccountText);\r\n    function clicktwiAccountText(event) {\r\n        window.open(\"https://twitter.com/toride0313\");\r\n    }\r\n    ;\r\n    mainstage.addChild(footerContainer);\r\n    footerContainer.y = 1000 - updateText.getMeasuredLineHeight();\r\n    var bugReportButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"不具合を報告\", 160, 40, \"#0275d8\");\r\n    bugReportButton.x = 1300;\r\n    bugReportButton.y = 950;\r\n    mainstage.addChild(bugReportButton);\r\n    bugReportButton.on(\"click\", function (e) {\r\n        var url = \"https://twitter.com/share?related=twitterapi%2Ctwitter&hashtags=DogmaBladeSimulatorBugReport&text=\" +\r\n            \"@toride0313 動作環境：[] バグ内容及び発生状況:[] スクショがあれば載せてもらえると助かります。DMでも可。※Edgeでは正常動作しません。別のブラウザでお試しください。\";\r\n        window.open(url);\r\n    }, null, false);\r\n    var followButtonImg = new createjs.Bitmap(\"follow.png\");\r\n    followButtonImg.cursor = \"pointer\";\r\n    followButtonImg.x = 5;\r\n    followButtonImg.y = 930;\r\n    mainstage.addChild(followButtonImg);\r\n    followButtonImg.on(\"click\", function (e) {\r\n        var url = \"https://twitter.com/intent/follow?screen_name=toride0313\";\r\n        window.open(url, null, \"width=650, height=300, personalbar=0, toolbar=0, scrollbars=1, sizable=1\");\r\n    }, null, false);\r\n    var qiitaImg = new createjs.Bitmap(\"qiita.png\");\r\n    qiitaImg.cursor = \"pointer\";\r\n    qiitaImg.x = -32.5;\r\n    qiitaImg.y = 840;\r\n    mainstage.addChild(qiitaImg);\r\n    qiitaImg.addEventListener(\"click\", clickQiita);\r\n    function clickQiita(event) {\r\n        window.open(\"https://qiita.com/toride0313/items/7bbf1a4be3525e3f0aaf\");\r\n    }\r\n    ;\r\n    var deckRecipe = [\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Dogma\"], num: 3 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"CyberVary\"], num: 2 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Airman\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Kuraz\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Disk\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"MagicianOfChaos\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"MonsterReborn\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"MonsterGate\"], num: 3 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Reasoning\"], num: 3 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"DestinyDraw\"], num: 3 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"HandDestruction\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"HiddenArmory\"], num: 3 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"TradeIn\"], num: 2 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"PhenixBlade\"], num: 2 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Reinforcement\"], num: 2 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"GoldSalcophagus\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"DDR\"], num: 2 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"MagicStoneExcavation\"], num: 2 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"PrematureBrial\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"Hurricane\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"DimensionFusion\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"SpellEconomics\"], num: 1 },\r\n        { json: _CardStatus_json__WEBPACK_IMPORTED_MODULE_2__[\"MagicalExplosion\"], num: 2 }\r\n    ];\r\n    deckRecipe.forEach(function (numOfCard, index, array) {\r\n        var json = numOfCard.json;\r\n        for (var i = 0; i < numOfCard.num; i++) {\r\n            if (json[\"cardType\"] == \"Monster\") {\r\n                var monsterCardObj = genCardObject.Monster(json);\r\n                if (monsterCardObj.monsterType == \"Effect\") {\r\n                    if (effectSetting[monsterCardObj.effectKey] instanceof Function) {\r\n                        monsterCardObj.effect = effectSetting[monsterCardObj.effectKey](monsterCardObj);\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n                if (!(monsterCardObj.canNS)) {\r\n                    SSconditionSetting[monsterCardObj.SSconditionKey](monsterCardObj);\r\n                }\r\n                ;\r\n                game.defaultDeck.push(monsterCardObj);\r\n            }\r\n            else if (json[\"cardType\"] == \"Spell\") {\r\n                var spellCardObj = genCardObject.Spell(json);\r\n                spellCardObj.effect = effectSetting[spellCardObj.effectKey](spellCardObj);\r\n                game.defaultDeck.push(spellCardObj);\r\n            }\r\n            else if (json[\"cardType\"] == \"Trap\") {\r\n                var trapCardObj = genCardObject.Trap(json);\r\n                trapCardObj.effect = effectSetting[trapCardObj.effectKey](trapCardObj);\r\n                game.defaultDeck.push(trapCardObj);\r\n            }\r\n            ;\r\n        }\r\n        ;\r\n    });\r\n    var viewCardback = new createjs.Bitmap(\"cardback_view.jpg\");\r\n    viewCardback.setTransform(statusCanv.width / 2, statusCanv.height / 2, 1, 1, 0, 0, 0, 140, 206);\r\n    statusStage.addChild(viewCardback);\r\n    lineUp();\r\n    console.log(game.DECK);\r\n    // const DeckViewButton = createButton(\"DECK View\", 150, 40, \"#0275d8\");\r\n    // DeckViewButton.x = 1200;\r\n    // DeckViewButton.y = 650;\r\n    // mainstage.addChild(DeckViewButton);\r\n    // DeckViewButton.on(\"click\", function(e){\r\n    //     console.log(game.DECK)\r\n    //     await openCardListWindow.view(game.DECK,\"DECK\");\r\n    // }, null, false);\r\n    // const drawButton = createButton(\"draw\", 150, 40, \"#0275d8\");\r\n    // drawButton.x = 1300;\r\n    // drawButton.y = 500;\r\n    // mainstage.addChild(drawButton);\r\n    // drawButton.on(\"click\", async function(e){\r\n    //     // draw(1);\r\n    //     await vanish(genCardArray({cardType:[\"Monster\"]}).filter(c=>c.cardName!=\"Dogma\"),\"EFFECT\");\r\n    //     await search(genCardArray({cardNameJP:[\"次元融合\"]}))\r\n    // }, null, false);\r\n    // const testButton = createButton(\"test\", 150, 40, \"#0275d8\");\r\n    // testButton.x = 1300;\r\n    // testButton.y = 550;\r\n    // mainstage.addChild(testButton);\r\n    // testButton.on(\"click\", function(e){\r\n    //     openHowtoWindow();\r\n    // }, null, false);\r\n    var startButton = Object(_createTextButton__WEBPACK_IMPORTED_MODULE_1__[\"createTextButton\"])(\"DUEL START\", \"80px serif\", \"midnightblue\", \"yellow\");\r\n    mainstage.addChild(startButton);\r\n    startButton.x = 550;\r\n    startButton.y = 850;\r\n    startButton.addEventListener(\"click\", handleClickStart);\r\n    function handleClickStart(event) {\r\n        startButton.mouseEnabled = false;\r\n        gameStart();\r\n        createjs.Tween.get(startButton).to({ alpha: 0 }, 250);\r\n    }\r\n    ;\r\n    var TweetButtonImg = new createjs.Bitmap(\"tweet.png\");\r\n    TweetButtonImg.cursor = \"pointer\";\r\n    TweetButtonImg.x = 1275;\r\n    TweetButtonImg.y = 825;\r\n    mainstage.addChild(TweetButtonImg);\r\n    TweetButtonImg.on(\"click\", function (e) {\r\n        var url = \"https://twitter.com/share?url=https://tsd0313.github.io/ygo-DogmaBlade/dist/&related=twitterapi%2Ctwitter&hashtags=DogmaBladeSimulator&text=\" +\r\n            \"ドグマブレードシミュレータ\";\r\n        window.open(url, null, \"width=650, height=300, personalbar=0, toolbar=0, scrollbars=1, sizable=1\");\r\n    }, null, false);\r\n    var LinkButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\" ▶ JUNK BLADE \", 200, 60, \"#DDA0DD\");\r\n    LinkButton.x = 1275;\r\n    LinkButton.y = 20;\r\n    mainstage.addChild(LinkButton);\r\n    LinkButton.on(\"click\", function (e) {\r\n        window.open(\"https://tsd0313.github.io/ygo-JunkBlade/dist/\");\r\n    }, null, false);\r\n    var howtoButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"HOW TO PLAY\", 160, 40, \"#0275d8\");\r\n    howtoButton.x = 1300;\r\n    howtoButton.y = 900;\r\n    mainstage.addChild(howtoButton);\r\n    howtoButton.on(\"click\", function (e) {\r\n        openHowtoWindow();\r\n    }, null, false);\r\n    var endButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"TURN END\", 160, 60, \"#0275d8\");\r\n    endButton.x = 1300;\r\n    endButton.y = 540;\r\n    endButton.alpha = 0;\r\n    cardContainer.addChild(endButton);\r\n    endButton.on(\"click\", function async(e) {\r\n        turnEnd();\r\n    }, null, false);\r\n    var resetButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"RESET\", 160, 60, \"#0275d8\");\r\n    resetButton.x = 1300;\r\n    resetButton.y = 630;\r\n    resetButton.alpha = 0;\r\n    cardContainer.addChild(resetButton);\r\n    resetButton.on(\"click\", function async(e) {\r\n        reset();\r\n    }, null, false);\r\n    createjs.Ticker.addEventListener(\"tick\", handleTick);\r\n    function handleTick() {\r\n        mainstage.update();\r\n        windowBackStage.update();\r\n        disprayStage.update();\r\n        selectButtonStage.update();\r\n        statusStage.update();\r\n        myLP.text = zerofix(game.myLifePoint);\r\n        EnemyLP.text = game.enemyLifePoint.toFixed();\r\n        NumInDeck.text = \"DECK : \" + zerofix(game.DECK.length);\r\n        NumInGy.text = \"GY : \" + zerofix(genCardArray({ location: [\"GY\"] }).length) + \" ( \" + zerofix(genCardArray({ location: [\"GY\"], cardType: [\"Spell\"] }).length) + \" )\";\r\n    }\r\n    ;\r\n    var selectMenuBack = new createjs.Shape();\r\n    selectMenuBack.graphics.beginFill(\"Gray\");\r\n    selectMenuBack.graphics.drawRect(0, 0, windowBackCanv.width, windowBackCanv.height);\r\n    selectMenuBack.alpha = 0.5;\r\n    windowBackStage.addChild(selectMenuBack);\r\n    var SelectOkButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"OK\", 150, 40, \"#0275d8\");\r\n    SelectOkButton.x = selectButtonCanv.width / 2 - 75;\r\n    SelectOkButton.y = 10;\r\n    selectButtonStage.addChild(SelectOkButton);\r\n    var SelectCancelButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"CANCEL\", 150, 40, \"#0275d8\");\r\n    SelectCancelButton.x = selectButtonCanv.width / 2 - 75;\r\n    SelectCancelButton.y = 10;\r\n    SelectCancelButton.visible = false;\r\n    selectButtonStage.addChild(SelectCancelButton);\r\n    var openCardListWindow = {\r\n        select: function (cardArray, moreThan, lessThan, activeEff, message, cancel) {\r\n            var disprayCards = __spread(cardArray).reverse();\r\n            divSelectMenuContainer.style.visibility = \"visible\";\r\n            SelectCancelButton.visible = false;\r\n            if (message == undefined) {\r\n                messageText.innerText = \"select\";\r\n            }\r\n            else {\r\n                messageText.innerText = message;\r\n            }\r\n            ;\r\n            if (cancel) {\r\n                SelectCancelButton.visible = true;\r\n                SelectOkButton.x = selectButtonCanv.width / 2 - 200;\r\n                SelectCancelButton.x = selectButtonCanv.width / 2 + 50;\r\n            }\r\n            else {\r\n                SelectOkButton.x = selectButtonCanv.width / 2 - 75;\r\n            }\r\n            ;\r\n            var selectedCardArray = [];\r\n            activeEff.targetCard = [];\r\n            selectedCardImgArray = [];\r\n            SelectOkButton.mouseEnabled = false;\r\n            disprayCanv.style.width = String((10 + cardImgSize.x) * disprayCards.length + 10) + \"px\";\r\n            disprayCanv.width = (10 + cardImgSize.x) * disprayCards.length + 10;\r\n            disprayCanv.style.height = String(50 + cardImgSize.y) + \"px\";\r\n            disprayCanv.height = 50 + cardImgSize.y;\r\n            var createLocLabelBox = function (card) {\r\n                var labelBox = new createjs.Container();\r\n                var labelBG = new createjs.Shape();\r\n                labelBG.graphics\r\n                    .setStrokeStyle(1)\r\n                    .beginStroke(\"black\")\r\n                    .beginFill(\"white\")\r\n                    .drawRoundRect(0.5, 0.5, cardImgSize.x - 1, 25 - 1, 0);\r\n                labelBox.addChild(labelBG);\r\n                var label = new createjs.Text(card.location, \"18px sans-serif\");\r\n                label.x = cardImgSize.x / 2;\r\n                label.y = 12.5;\r\n                label.textAlign = \"center\";\r\n                label.textBaseline = \"middle\";\r\n                labelBox.addChild(label);\r\n                return labelBox;\r\n            };\r\n            var PromiseArray = [];\r\n            disprayCards.map(function (card, index, array) {\r\n                var ImgLabelContainer = new createjs.Container();\r\n                disprayStage.addChild(ImgLabelContainer);\r\n                var cardImgContainer = new createjs.Container();\r\n                var cardImg = new createjs.Bitmap(card.imageFileName);\r\n                cardImgContainer.addChild(cardImg);\r\n                if (card instanceof MonsterCard && 1 <= card.equip.length) {\r\n                    card.equip.forEach(function (equipSpell, i, array) {\r\n                        var equipImg = new createjs.Bitmap(equipSpell.imageFileName);\r\n                        equipImg.setTransform(cardImgSize.x / 3 * i, cardImgSize.y * (2 / 3), 1 / 3, 1 / 3, -10, 0, 0, 0, 0);\r\n                        cardImgContainer.addChild(equipImg);\r\n                    });\r\n                }\r\n                ;\r\n                if (card instanceof SpellCard && 1 <= card.peggingTarget.length) {\r\n                    card.peggingTarget.forEach(function (equipTarget, i, array) {\r\n                        var targetImg = new createjs.Bitmap(equipTarget.imageFileName);\r\n                        targetImg.setTransform(cardImgSize.x / 3 * i, cardImgSize.y * (2 / 3), 1 / 3, 1 / 3, -10, 0, 0, 0, 0);\r\n                        cardImgContainer.addChild(targetImg);\r\n                    });\r\n                }\r\n                ;\r\n                cardImgContainer.cursor = \"pointer\";\r\n                cardImgContainer.y = 0;\r\n                var selected = new createjs.Bitmap(\"selected.png\");\r\n                selected.setTransform(cardImgSize.x / 4, cardImgSize.y / 4, 0.5, 0.5);\r\n                selected.visible = false;\r\n                cardImgContainer.addChild(selected);\r\n                var selectedMouseOver = new createjs.Bitmap(\"selectedMouseOver.png\");\r\n                selectedMouseOver.setTransform(cardImgSize.x / 4, cardImgSize.y / 4, 0.5, 0.5);\r\n                selectedMouseOver.alpha = 0.5;\r\n                selectedMouseOver.visible = false;\r\n                cardImgContainer.addChild(selectedMouseOver);\r\n                var selectedCardImg = { imgContainer: cardImgContainer,\r\n                    selected: selected\r\n                };\r\n                var countCheck = function (count) {\r\n                    return [moreThan <= count, count <= lessThan].every(function (value) { return value; });\r\n                };\r\n                cardImgContainer.addEventListener(\"mouseover\", handleSelectMover);\r\n                function handleSelectMover(event) {\r\n                    selectedMouseOver.visible = true;\r\n                }\r\n                ;\r\n                cardImgContainer.addEventListener(\"mouseout\", handleSelectMout);\r\n                function handleSelectMout(event) {\r\n                    selectedMouseOver.visible = false;\r\n                }\r\n                ;\r\n                cardImgContainer.addEventListener(\"click\", handleSelectClick);\r\n                function handleSelectClick(event) {\r\n                    if (selected.visible == false) {\r\n                        if (selectedCardArray.length == lessThan) {\r\n                            selectedCardImgArray[0].selected.visible = false;\r\n                            selectedCardArray.shift();\r\n                            selectedCardImgArray.shift();\r\n                        }\r\n                        ;\r\n                        selected.visible = true;\r\n                        selectedCardArray.push(card);\r\n                        selectedCardImgArray.push(selectedCardImg);\r\n                    }\r\n                    else {\r\n                        selected.visible = false;\r\n                        selectedCardArray = selectedCardArray.filter(function (i) { return i !== card; });\r\n                        selectedCardImgArray = selectedCardImgArray.filter(function (i) { return i !== selectedCardImg; });\r\n                    }\r\n                    ;\r\n                    SelectOkButton.mouseEnabled = countCheck(selectedCardArray.length);\r\n                    selectedMouseOver.visible = false;\r\n                }\r\n                ;\r\n                var newlabelBox = createLocLabelBox(card);\r\n                newlabelBox.y = cardImgSize.y + 10;\r\n                ImgLabelContainer.addChild(cardImgContainer);\r\n                SetStatusDisprayEvent(card, cardImgContainer);\r\n                ImgLabelContainer.addChild(newlabelBox);\r\n                ImgLabelContainer.x = 10 + ((10 + cardImgSize.x) * index);\r\n                ImgLabelContainer.y = 10;\r\n                ImgLabelContainer.alpha = 0;\r\n                var twPromise = function () {\r\n                    return new Promise(function (resolve, reject) {\r\n                        createjs.Tween.get(ImgLabelContainer)\r\n                            .wait(50 * (index + 1))\r\n                            .to({ alpha: 1 }, 100)\r\n                            .call(function () { resolve(); });\r\n                    });\r\n                };\r\n                PromiseArray.push(twPromise());\r\n            });\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, Promise.all(PromiseArray)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                                    var clickOkButton = function (e) {\r\n                                        divSelectMenuContainer.style.visibility = \"hidden\";\r\n                                        disprayStage.removeAllChildren();\r\n                                        SelectOkButton.removeAllEventListeners(\"click\");\r\n                                        SelectCancelButton.removeAllEventListeners(\"click\");\r\n                                        resolve();\r\n                                    };\r\n                                    SelectOkButton.addEventListener(\"click\", clickOkButton);\r\n                                    if (cancel) {\r\n                                        var clickCancelButton = function (e) {\r\n                                            console.log(\"cancelButton\");\r\n                                            selectedCardArray.length = 0;\r\n                                            divSelectMenuContainer.style.visibility = \"hidden\";\r\n                                            disprayStage.removeAllChildren();\r\n                                            SelectOkButton.removeAllEventListeners(\"click\");\r\n                                            SelectCancelButton.removeAllEventListeners(\"click\");\r\n                                            resolve();\r\n                                        };\r\n                                        SelectCancelButton.addEventListener(\"click\", clickCancelButton);\r\n                                    }\r\n                                    ;\r\n                                })];\r\n                        case 2:\r\n                            _a.sent();\r\n                            resolve(selectedCardArray);\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        },\r\n        view: function (cardArray, message) {\r\n            var disprayCards = __spread(cardArray).reverse();\r\n            divSelectMenuContainer.style.visibility = \"visible\";\r\n            SelectCancelButton.visible = false;\r\n            SelectOkButton.x = selectButtonCanv.width / 2 - 75;\r\n            SelectOkButton.mouseEnabled = true;\r\n            if (message == undefined) {\r\n                messageText.innerText = \"select\";\r\n            }\r\n            else {\r\n                messageText.innerText = message;\r\n            }\r\n            ;\r\n            selectedCardImgArray = [];\r\n            disprayCanv.style.width = String((10 + cardImgSize.x) * disprayCards.length + 10) + \"px\";\r\n            disprayCanv.width = (10 + cardImgSize.x) * disprayCards.length + 10;\r\n            disprayCanv.style.height = String(50 + cardImgSize.y) + \"px\";\r\n            disprayCanv.height = 50 + cardImgSize.y;\r\n            var createLocLabelBox = function (card) {\r\n                var labelBox = new createjs.Container();\r\n                var labelBG = new createjs.Shape();\r\n                labelBG.graphics\r\n                    .setStrokeStyle(1)\r\n                    .beginStroke(\"black\")\r\n                    .beginFill(\"white\")\r\n                    .drawRoundRect(0.5, 0.5, cardImgSize.x - 1, 25 - 1, 0);\r\n                labelBox.addChild(labelBG);\r\n                var label = new createjs.Text(card.location, \"18px sans-serif\");\r\n                label.x = cardImgSize.x / 2;\r\n                label.y = 12.5;\r\n                label.textAlign = \"center\";\r\n                label.textBaseline = \"middle\";\r\n                labelBox.addChild(label);\r\n                return labelBox;\r\n            };\r\n            var PromiseArray = [];\r\n            disprayCards.map(function (card, index, array) {\r\n                var ImgLabelContainer = new createjs.Container();\r\n                disprayStage.addChild(ImgLabelContainer);\r\n                var cardImgContainer = new createjs.Container();\r\n                var cardImg = new createjs.Bitmap(card.imageFileName);\r\n                cardImgContainer.addChild(cardImg);\r\n                cardImgContainer.cursor = \"pointer\";\r\n                cardImgContainer.y = 0;\r\n                var newlabelBox = createLocLabelBox(card);\r\n                newlabelBox.y = cardImgSize.y + 10;\r\n                ImgLabelContainer.addChild(cardImgContainer);\r\n                SetStatusDisprayEvent(card, cardImgContainer);\r\n                ImgLabelContainer.addChild(newlabelBox);\r\n                ImgLabelContainer.x = 10 + ((10 + cardImgSize.x) * index);\r\n                ImgLabelContainer.y = 10;\r\n                ImgLabelContainer.alpha = 0;\r\n                var twPromise = function () {\r\n                    return new Promise(function (resolve, reject) {\r\n                        createjs.Tween.get(ImgLabelContainer)\r\n                            .wait(50 * (index + 1))\r\n                            .to({ alpha: 1 }, 100)\r\n                            .call(function () { resolve(); });\r\n                    });\r\n                };\r\n                PromiseArray.push(twPromise());\r\n            });\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                var clickOkButton;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, Promise.all(PromiseArray)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            clickOkButton = function (e) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    divSelectMenuContainer.style.visibility = \"hidden\";\r\n                                    disprayStage.removeAllChildren();\r\n                                    SelectOkButton.removeEventListener(\"click\", clickOkButton);\r\n                                    resolve();\r\n                                    return [2 /*return*/];\r\n                                });\r\n                            }); };\r\n                            SelectOkButton.addEventListener(\"click\", clickOkButton);\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n    };\r\n    var openYesNoWindow = function (message) {\r\n        divSelectMenuContainer.style.visibility = \"visible\";\r\n        SelectCancelButton.visible = false;\r\n        SelectOkButton.visible = false;\r\n        var YesNoContainer = new createjs.Container();\r\n        var YesButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"YES\", 150, 80, \"#0275d8\");\r\n        YesNoContainer.addChild(YesButton);\r\n        var NoButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"NO\", 150, 80, \"#0275d8\");\r\n        NoButton.x = NoButton.getBounds().width * 8;\r\n        YesNoContainer.addChild(NoButton);\r\n        YesNoContainer.regX = YesNoContainer.getBounds().width / 2;\r\n        YesNoContainer.regY = YesNoContainer.getBounds().height / 2;\r\n        YesNoContainer.x = windowSize.w / 2 - 60;\r\n        YesNoContainer.y = windowSize.h / 2;\r\n        disprayStage.addChild(YesNoContainer);\r\n        disprayCanv.style.width = String(windowSize.w) + \"px\";\r\n        disprayCanv.width = windowSize.w;\r\n        disprayCanv.style.height = String(windowSize.h) + \"px\";\r\n        disprayCanv.height = windowSize.h;\r\n        messageText.innerText = message;\r\n        return new Promise(function (resolve, reject) {\r\n            YesButton.addEventListener(\"click\", clickYesButton);\r\n            function clickYesButton(e) {\r\n                divSelectMenuContainer.style.visibility = \"hidden\";\r\n                disprayStage.removeAllChildren();\r\n                SelectOkButton.visible = true;\r\n                resolve(true);\r\n            }\r\n            ;\r\n            NoButton.addEventListener(\"click\", clickNoButton);\r\n            function clickNoButton(e) {\r\n                divSelectMenuContainer.style.visibility = \"hidden\";\r\n                disprayStage.removeAllChildren();\r\n                SelectOkButton.visible = true;\r\n                resolve(false);\r\n            }\r\n            ;\r\n        });\r\n    };\r\n    var OpenPositionWindow = function (card) {\r\n        SelectOkButton.visible = false;\r\n        divSelectMenuContainer.style.visibility = \"visible\";\r\n        messageText.innerText = \"表示形式を選択\";\r\n        var AtkDefContainer = new createjs.Container();\r\n        disprayCanv.style.width = String(windowSize.w) + \"px\";\r\n        disprayCanv.width = windowSize.w;\r\n        disprayCanv.style.height = String(100 + cardImgSize.y) + \"px\";\r\n        disprayCanv.height = 100 + cardImgSize.y;\r\n        var Atk = new createjs.Container();\r\n        var AtkImg = new createjs.Bitmap(card.imageFileName);\r\n        Atk.addChild(AtkImg);\r\n        Atk.regX = Atk.getBounds().width / 2;\r\n        Atk.regY = Atk.getBounds().height / 2;\r\n        Atk.cursor = \"pointer\";\r\n        var Def = new createjs.Container();\r\n        var DefImg = new createjs.Bitmap(card.imageFileName);\r\n        Def.addChild(DefImg);\r\n        Def.regX = Def.getBounds().width / 2;\r\n        Def.regY = Def.getBounds().height / 2;\r\n        Def.cursor = \"pointer\";\r\n        Def.x = Def.getBounds().width * 2.5;\r\n        Def.rotation = -90;\r\n        AtkDefContainer.addChild(Atk);\r\n        AtkDefContainer.addChild(Def);\r\n        SetStatusDisprayEvent(card, Atk);\r\n        SetStatusDisprayEvent(card, Def);\r\n        AtkDefContainer.regX = AtkDefContainer.getBounds().width / 2;\r\n        AtkDefContainer.regY = AtkDefContainer.getBounds().height / 2;\r\n        AtkDefContainer.x = windowSize.w / 2 + 80;\r\n        AtkDefContainer.y = windowSize.h + 20;\r\n        disprayStage.addChild(AtkDefContainer);\r\n        return new Promise(function (resolve, reject) {\r\n            Atk.addEventListener(\"click\", clickAtkButton);\r\n            function clickAtkButton(e) {\r\n                divSelectMenuContainer.style.visibility = \"hidden\";\r\n                disprayStage.removeAllChildren();\r\n                SelectOkButton.visible = true;\r\n                resolve(\"ATK\");\r\n            }\r\n            ;\r\n            Def.addEventListener(\"click\", clickNoButton);\r\n            function clickNoButton(e) {\r\n                divSelectMenuContainer.style.visibility = \"hidden\";\r\n                disprayStage.removeAllChildren();\r\n                SelectOkButton.visible = true;\r\n                resolve(\"DEF\");\r\n            }\r\n            ;\r\n        });\r\n    };\r\n    var OpenSelectEffectWindow = function (card, messageA, messageB) {\r\n        divSelectMenuContainer.style.visibility = \"visible\";\r\n        SelectCancelButton.visible = false;\r\n        SelectOkButton.visible = false;\r\n        var ChoiceContainer = new createjs.Container();\r\n        var Abutton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(messageA, 300, 150, \"#0275d8\");\r\n        ChoiceContainer.addChild(Abutton);\r\n        var Bbutton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(messageB, 300, 150, \"#0275d8\");\r\n        Bbutton.x = 400;\r\n        ChoiceContainer.addChild(Bbutton);\r\n        disprayCanv.style.width = String(windowSize.w) + \"px\";\r\n        disprayCanv.width = windowSize.w;\r\n        disprayCanv.style.height = String(windowSize.h) + \"px\";\r\n        disprayCanv.height = windowSize.h;\r\n        ChoiceContainer.regY = ChoiceContainer.getBounds().height / 2;\r\n        ChoiceContainer.x = 80;\r\n        ChoiceContainer.y = (disprayCanv.height - selectButtonCanv.height) / 2;\r\n        disprayStage.addChild(ChoiceContainer);\r\n        messageText.innerText = \"message\";\r\n        return new Promise(function (resolve, reject) {\r\n            Abutton.addEventListener(\"click\", clickYesButton);\r\n            function clickYesButton(e) {\r\n                divSelectMenuContainer.style.visibility = \"hidden\";\r\n                disprayStage.removeAllChildren();\r\n                SelectOkButton.visible = true;\r\n                resolve(true);\r\n            }\r\n            ;\r\n            Bbutton.addEventListener(\"click\", clickNoButton);\r\n            function clickNoButton(e) {\r\n                divSelectMenuContainer.style.visibility = \"hidden\";\r\n                disprayStage.removeAllChildren();\r\n                SelectOkButton.visible = true;\r\n                resolve(false);\r\n            }\r\n            ;\r\n        });\r\n    };\r\n    var openResultWindow = function (messageText) { return __awaiter(_this, void 0, void 0, function () {\r\n        function clickRetryButton(event) {\r\n            location.reload();\r\n        }\r\n        function clickTweetButton(event) {\r\n            // location.href = \"https://twitter.com/share?ref_src=twsrc%5Etfw\"\r\n            window.open(tweetURL, null, \"width=650, height=300, personalbar=0, toolbar=0, scrollbars=1, sizable=1\");\r\n        }\r\n        var resultWindowContainer, messageBack, retryButton, tweetButton, tweetTextResult, firstHand, tweetURL;\r\n        return __generator(this, function (_a) {\r\n            resultWindowContainer = new createjs.Container();\r\n            messageBack = new createjs.Shape();\r\n            messageBack.graphics.beginFill(\"white\");\r\n            messageBack.graphics.drawRect(0, 0, messageText.getMeasuredWidth() + 500, cardImgSize.y * 2);\r\n            messageBack.alpha = 0.5;\r\n            messageBack.regX = (messageText.getMeasuredWidth() + 500) / 2;\r\n            ;\r\n            messageBack.regY = cardImgSize.y;\r\n            messageText.x = 0;\r\n            messageText.y = 0;\r\n            retryButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"リトライ\", 150, 40, \"#0275d8\");\r\n            retryButton.x = -170;\r\n            retryButton.y = cardImgSize.y - 70;\r\n            tweetButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"結果をtweet\", 150, 40, \"#0275d8\");\r\n            tweetButton.x = 20;\r\n            tweetButton.y = cardImgSize.y - 70;\r\n            mainstage.enableMouseOver();\r\n            tweetTextResult = (function () {\r\n                if (game.enemyLifePoint < 1) {\r\n                    return \"ドグマブレード先攻1キル成功！\" + (-game.enemyLifePoint + 8000).toFixed() + \"ダメージ！\";\r\n                }\r\n                else {\r\n                    return \"ドグマブレード先攻1キル失敗・・・　\";\r\n                }\r\n                ;\r\n            })();\r\n            firstHand = \"初手→\" + game.firstHand.join('/') + \"\\n\";\r\n            tweetURL = \"https://twitter.com/share?url=https://tsd0313.github.io/ygo-DogmaBlade/dist/&related=twitterapi%2Ctwitter&hashtags=DogmaBladeSimulator&text=\" +\r\n                tweetTextResult + firstHand;\r\n            retryButton.addEventListener(\"click\", clickRetryButton);\r\n            ;\r\n            tweetButton.addEventListener(\"click\", clickTweetButton);\r\n            ;\r\n            mainstage.addChild(resultWindowContainer);\r\n            resultWindowContainer.addChild(messageBack, messageText, retryButton, tweetButton);\r\n            resultWindowContainer.setTransform(game.centerGrid.x, game.centerGrid.y);\r\n            resultWindowContainer.regX = 0;\r\n            resultWindowContainer.regY = 0;\r\n            resultWindowContainer.scaleX = 0;\r\n            resultWindowContainer.scaleY = 0;\r\n            messageText.alpha = 0;\r\n            retryButton.alpha = 0;\r\n            tweetButton.alpha = 0;\r\n            createjs.Tween.get(resultWindowContainer)\r\n                .to({ scaleX: 0.02, scaleY: 0.02 })\r\n                .to({ scaleX: 1 }, 250, createjs.Ease.cubicIn)\r\n                .to({ scaleY: 1 }, 250, createjs.Ease.cubicIn)\r\n                .call(function () {\r\n                createjs.Tween.get(messageText)\r\n                    .to({ alpha: 1 }, 100);\r\n            })\r\n                .wait(1100)\r\n                .call(function () {\r\n                [retryButton, tweetButton].forEach(function (button) {\r\n                    createjs.Tween.get(button)\r\n                        .to({ alpha: 1 }, 100);\r\n                });\r\n            });\r\n            return [2 /*return*/];\r\n        });\r\n    }); };\r\n    var openMessageWindow = function (message) { return __awaiter(_this, void 0, void 0, function () {\r\n        var messageWindowContainer, messageWindowtext, messageBack;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    messageWindowContainer = new createjs.Container();\r\n                    messageWindowtext = new createjs.Text(message, \"30px serif\", \"black\");\r\n                    messageWindowtext.textBaseline = \"middle\";\r\n                    messageWindowtext.textAlign = \"center\";\r\n                    messageBack = new createjs.Shape();\r\n                    messageBack.graphics.beginFill(\"white\");\r\n                    messageBack.graphics.drawRect(0, 0, messageWindowtext.getMeasuredWidth() + 50, cardImgSize.y);\r\n                    messageBack.alpha = 0.9;\r\n                    messageBack.regX = (messageWindowtext.getMeasuredWidth() + 50) / 2;\r\n                    ;\r\n                    messageBack.regY = cardImgSize.y / 2;\r\n                    mainstage.addChild(messageWindowContainer);\r\n                    messageWindowContainer.addChild(messageBack, messageWindowtext);\r\n                    messageWindowContainer.setTransform(game.centerGrid.x, game.centerGrid.y);\r\n                    messageWindowContainer.regX = 0;\r\n                    messageWindowContainer.regY = messageWindowContainer.getBounds().height / 2;\r\n                    messageWindowContainer.scaleX = 0;\r\n                    messageWindowContainer.scaleY = 0;\r\n                    messageWindowtext.alpha = 0;\r\n                    mainstage.setChildIndex(messageWindowContainer, mainstage.numChildren - 1);\r\n                    return [4 /*yield*/, new Promise(function (resolve, reject) {\r\n                            createjs.Tween.get(messageWindowContainer)\r\n                                .to({ scaleX: 0.02, scaleY: 0.02 })\r\n                                .to({ scaleX: 1 }, 250, createjs.Ease.cubicIn)\r\n                                .to({ scaleY: 1 }, 250, createjs.Ease.cubicIn)\r\n                                .call(function () {\r\n                                createjs.Tween.get(messageWindowtext)\r\n                                    .to({ alpha: 1 }, 100);\r\n                            })\r\n                                .wait(1100)\r\n                                .call(function () {\r\n                                createjs.Tween.get(messageWindowtext)\r\n                                    .to({ alpha: 0 }, 100);\r\n                            })\r\n                                .to({ scaleY: 0.02 }, 250, createjs.Ease.cubicIn)\r\n                                .to({ scaleX: 0 }, 250, createjs.Ease.cubicIn)\r\n                                .call(function () { resolve(); });\r\n                        })];\r\n                case 1:\r\n                    _a.sent();\r\n                    mainstage.removeChild(messageWindowContainer);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); };\r\n    var openHowtoWindow = function () {\r\n        var cardConMouseEnabledOrg = cardContainer.mouseEnabled;\r\n        cardContainer.mouseEnabled = false;\r\n        howtoButton.mouseEnabled = false;\r\n        var messageA = \"ドグマブレードをぶん回し、先攻1ターンキルを達成しましょう。\";\r\n        var messageB = \"《D-HERO ドグマガイ》《マジカル・エクスプロージョン》はターン終了後に自動で発動します。\";\r\n        var messageC1 = \"デッキガイド：\";\r\n        var messageC2 = \" ドグマブレード｜ンマルギルドーニ｜note\";\r\n        var textA = new createjs.Text(messageA, \"24px serif\", \"black\");\r\n        var textB = new createjs.Text(messageB, \"24px serif\", \"black\");\r\n        var textC1 = new createjs.Text(messageC1, \"24px serif\", \"black\");\r\n        var textC2 = new createjs.Text(messageC2, \"24px serif\", \"black\");\r\n        textC2.color = \"#1111cc\";\r\n        textC2.cursor = \"pointer\";\r\n        var hitAreaShape = new createjs.Shape;\r\n        hitAreaShape.set({\r\n            graphics: new createjs.Graphics().beginFill(\"#FFF\").drawEllipse(0, 0, textC2.getMeasuredWidth(), textC2.getMeasuredHeight())\r\n        });\r\n        textC2.hitArea = hitAreaShape;\r\n        textC2.addEventListener(\"click\", clickTextC2);\r\n        function clickTextC2(event) {\r\n            window.open(\"https://note.com/gninallman3/n/nf330a71d5446\");\r\n        }\r\n        ;\r\n        var textCcontainer = new createjs.Container;\r\n        textCcontainer.addChild(textC1, textC2);\r\n        textC2.x = textC1.getMeasuredWidth();\r\n        var TextContainer = new createjs.Container();\r\n        [textA, textB, textCcontainer].forEach(function (obj, i, a) {\r\n            TextContainer.addChild(obj);\r\n            obj.y = (textA.getMeasuredLineHeight() + 20) * i;\r\n        });\r\n        TextContainer.regX = TextContainer.getBounds().width / 2;\r\n        TextContainer.regY = TextContainer.getBounds().height / 2;\r\n        var messageBack = new createjs.Shape();\r\n        messageBack.graphics.beginFill(\"white\");\r\n        messageBack.graphics.drawRect(0, 0, TextContainer.getBounds().width + 50, TextContainer.getBounds().height + 200);\r\n        messageBack.alpha = 0.9;\r\n        messageBack.regX = (TextContainer.getBounds().width + 50) / 2;\r\n        messageBack.regY = (TextContainer.getBounds().height + 200) / 2;\r\n        var OkButton = Object(_createButton__WEBPACK_IMPORTED_MODULE_0__[\"createButton\"])(\"OK\", 150, 40, \"#0275d8\");\r\n        OkButton.regX = OkButton.getBounds().width / 2;\r\n        OkButton.regY = OkButton.getBounds().height / 2;\r\n        OkButton.x = -75;\r\n        OkButton.y = TextContainer.getBounds().height - 20;\r\n        OkButton.addEventListener(\"click\", clickOkButton);\r\n        function clickOkButton(event) {\r\n            mainstage.removeChild(HowtoWindowContainer);\r\n            cardContainer.mouseEnabled = cardConMouseEnabledOrg;\r\n            howtoButton.mouseEnabled = true;\r\n        }\r\n        ;\r\n        var HowtoWindowContainer = new createjs.Container();\r\n        HowtoWindowContainer.addChild(messageBack, TextContainer, OkButton);\r\n        HowtoWindowContainer.setTransform(game.centerGrid.x, game.centerGrid.y, 0, 0, 0, 0, 0, 0, 0);\r\n        mainstage.addChild(HowtoWindowContainer);\r\n        TextContainer.alpha = 0;\r\n        OkButton.alpha = 0;\r\n        createjs.Tween.get(HowtoWindowContainer)\r\n            .to({ scaleX: 0.02, scaleY: 0.02 })\r\n            .to({ scaleX: 1 }, 250, createjs.Ease.cubicIn)\r\n            .to({ scaleY: 1 }, 250, createjs.Ease.cubicIn)\r\n            .call(function () {\r\n            [TextContainer, OkButton].forEach(function (obj) {\r\n                createjs.Tween.get(obj)\r\n                    .to({ alpha: 1 }, 100);\r\n            });\r\n        });\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack:///./src/main.ts?");

/***/ })

/******/ });